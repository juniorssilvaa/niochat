version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    environment:
      - POSTGRES_DB=niochat
      - POSTGRES_USER=niochat_user
      - POSTGRES_PASSWORD=E0sJT3wAYFuahovmHkxgy
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - niochat-postgres:/var/lib/postgresql/data
    networks:
      - nioNet
    restart: unless-stopped
    ports:
      - "5432:5432"
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U niochat_user -d niochat -h localhost"]
      interval: 15s
      timeout: 15s
      retries: 20
      start_period: 120s

  # Backend Django - PORTA 8010
  niochat-backend:
    image: ghcr.io/juniorssilvaa/niochat-backend:latest
    environment:
      - SECRET_KEY=OFfGQLqPs5osrBBnhOBdIfkjq1F6vpb74YoAWNkjwbY4BwTNK5
      - DEBUG=True
      - ALLOWED_HOSTS=*
      - DATABASE_URL=postgresql://niochat_user:E0sJT3wAYFuahovmHkxgy@postgres:5432/niochat
      - MEDIA_URL=/media/
      - STATIC_URL=/static/
      - LOG_LEVEL=DEBUG
      - REDIS_URL=redis://:E0sJT3wAYFuahovmHkxgy@49.12.9.11:6379/0
      - DRAMATIQ_BROKER_URL=amqp://niochat:ccf9e819f70a54bb790487f2438da6ee@rabbitmq:5672
    volumes:
      - niochat-media:/app/backend/media
      - niochat-static:/app/backend/staticfiles
    networks:
      - nioNet
    restart: unless-stopped
    depends_on:
      - postgres
      - rabbitmq
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8010/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"

      # ✅ REGRA ESPECÍFICA PARA HEALTH CHECK - PRIORIDADE MÁXIMA
      - "traefik.http.routers.niochat-backend-health.rule=Host(`api.niochat.com.br`) && Path(`/api/health/`)"
      - "traefik.http.routers.niochat-backend-health.entrypoints=websecure"
      - "traefik.http.routers.niochat-backend-health.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.niochat-backend-health.priority=400"
      - "traefik.http.routers.niochat-backend-health.service=niochat-backend-service"

      # Regra para autenticação - PRIORIDADE MÁXIMA
      - "traefik.http.routers.niochat-backend-auth.rule=Host(`app.niochat.com.br`) && Path(`/api-token-auth/`)"
      - "traefik.http.routers.niochat-backend-auth.entrypoints=websecure"
      - "traefik.http.routers.niochat-backend-auth.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.niochat-backend-auth.priority=300"
      - "traefik.http.routers.niochat-backend-auth.service=niochat-backend-service"
      - "traefik.http.services.niochat-backend-service.loadbalancer.server.port=8010"

      # Regra para todas as APIs - PRIORIDADE ALTA
      - "traefik.http.routers.niochat-backend-api.rule=Host(`app.niochat.com.br`) && PathPrefix(`/api/`)"
      - "traefik.http.routers.niochat-backend-api.entrypoints=websecure"
      - "traefik.http.routers.niochat-backend-api.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.niochat-backend-api.priority=200"
      - "traefik.http.routers.niochat-backend-api.service=niochat-backend-service"

      # Regra para media files - PRIORIDADE ALTA
      - "traefik.http.routers.niochat-backend-media.rule=Host(`app.niochat.com.br`) && PathPrefix(`/media/`)"
      - "traefik.http.routers.niochat-backend-media.entrypoints=websecure"
      - "traefik.http.routers.niochat-backend-media.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.niochat-backend-media.priority=200"
      - "traefik.http.routers.niochat-backend-media.service=niochat-backend-service"

      # Regra para static files - PRIORIDADE ALTA
      - "traefik.http.routers.niochat-backend-static.rule=Host(`app.niochat.com.br`) && PathPrefix(`/static/`)"
      - "traefik.http.routers.niochat-backend-static.entrypoints=websecure"
      - "traefik.http.routers.niochat-backend-static.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.niochat-backend-static.priority=200"
      - "traefik.http.routers.niochat-backend-static.service=niochat-backend-service"

      # Regra para WebSockets - PRIORIDADE MÁXIMA
      - "traefik.http.routers.niochat-backend-ws.rule=Host(`app.niochat.com.br`) && PathPrefix(`/ws/`)"
      - "traefik.http.routers.niochat-backend-ws.entrypoints=websecure"
      - "traefik.http.routers.niochat-backend-ws.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.niochat-backend-ws.priority=300"
      - "traefik.http.routers.niochat-backend-ws.service=niochat-backend-service"

      # Regra para Webhooks - PRIORIDADE MÁXIMA
      - "traefik.http.routers.niochat-backend-webhooks.rule=Host(`app.niochat.com.br`) && (PathPrefix(`/webhook/`) || PathPrefix(`/webhooks/`))"
      - "traefik.http.routers.niochat-backend-webhooks.entrypoints=websecure"
      - "traefik.http.routers.niochat-backend-webhooks.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.niochat-backend-webhooks.priority=250"
      - "traefik.http.routers.niochat-backend-webhooks.service=niochat-backend-service"

  # Frontend React - PORTA 8012
  niochat-frontend:
    image: ghcr.io/juniorssilvaa/niochat-frontend:latest
    networks:
      - nioNet
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      # Regra para frontend - PRIORIDADE BAIXA (catch-all)
      - "traefik.http.routers.niochat-frontend.rule=Host(`app.niochat.com.br`)"
      - "traefik.http.routers.niochat-frontend.entrypoints=websecure"
      - "traefik.http.routers.niochat-frontend.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.niochat-frontend.priority=1"
      - "traefik.http.routers.niochat-frontend.service=niochat-frontend-service"
      - "traefik.http.services.niochat-frontend-service.loadbalancer.server.port=8012"

  # Redis para IA e memória de conversas
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass E0sJT3wAYFuahovmHkxgy
    networks:
      - nioNet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # RabbitMQ para Dramatiq
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=niochat
      - RABBITMQ_DEFAULT_PASS=ccf9e819f70a54bb790487f2438da6ee
    networks:
      - nioNet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Worker Dramatiq
  niochat-dramatiq:
    image: ghcr.io/juniorssilvaa/niochat-dramatiq:latest
    environment:
      - DATABASE_URL=postgresql://niochat_user:E0sJT3wAYFuahovmHkxgy@postgres:5432/niochat
      - DRAMATIQ_BROKER_URL=amqp://niochat:ccf9e819f70a54bb790487f2438da6ee@rabbitmq:5672
      - REDIS_URL=redis://:E0sJT3wAYFuahovmHkxgy@redis:6379/0
    networks:
      - nioNet
    restart: unless-stopped
    depends_on:
      - postgres
      - rabbitmq
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM); sock.connect(('rabbitmq', 5672))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Documentação MkDocs - Buildada localmente
  niochat-docs:
    image: niochat-docs:local
    networks:
      - nioNet
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      # Regra para documentação - PRIORIDADE ALTA
      - "traefik.http.routers.niochat-docs.rule=Host(`docs.niochat.com.br`)"
      - "traefik.http.routers.niochat-docs.entrypoints=websecure"
      - "traefik.http.routers.niochat-docs.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.niochat-docs.priority=200"
      - "traefik.http.routers.niochat-docs.service=niochat-docs-service"
      - "traefik.http.services.niochat-docs-service.loadbalancer.server.port=80"

networks:
  nioNet:
    external: true
    name: nioNet

volumes:
  niochat-media:
    external: true
    name: niochat-media
  niochat-static:
    external: true
    name: niochat-static
  niochat-postgres:
    external: true
    name: niochat-postgres