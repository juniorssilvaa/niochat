{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"NioChat - Sistema de Atendimento WhatsApp","text":"-   :material-robot:{ .lg .middle } **IA Inteligente**      ---      Sistema de IA avan\u00e7ado com ChatGPT integrado, transcri\u00e7\u00e3o autom\u00e1tica de \u00e1udio e consulta autom\u00e1tica ao SGP      [:octicons-arrow-right-24: Configurar IA](ai/configuration.md)  -   :material-whatsapp:{ .lg .middle } **WhatsApp**      ---      Integra\u00e7\u00e3o completa com Uazapi/Evolution API para envio e recebimento de mensagens      [:octicons-arrow-right-24: Configurar WhatsApp](configuration/integrations.md)  -   :material-database:{ .lg .middle } **Supabase**      ---      Dashboard em tempo real, auditoria avan\u00e7ada e sistema CSAT com Supabase      [:octicons-arrow-right-24: Configurar Supabase](supabase/integration.md)  -   :material-chart-line:{ .lg .middle } **Dashboard**      ---      M\u00e9tricas em tempo real, gr\u00e1ficos interativos e relat\u00f3rios detalhados      [:octicons-arrow-right-24: Ver Dashboard](usage/dashboard.md)"},{"location":"#funcionalidades-principais","title":"\ud83d\ude80 Funcionalidades Principais","text":""},{"location":"#inteligencia-artificial-avancada","title":"\ud83e\udd16 Intelig\u00eancia Artificial Avan\u00e7ada","text":"<ul> <li>IA ChatGPT Integrada: Atendimento automatizado inteligente</li> <li>Transcri\u00e7\u00e3o de \u00c1udio: Convers\u00e3o autom\u00e1tica de mensagens de voz para texto</li> <li>Consulta SGP Autom\u00e1tica: IA consulta dados reais do cliente automaticamente</li> <li>Function Calls: IA executa fun\u00e7\u00f5es do SGP em tempo real</li> <li>An\u00e1lise de Sentimento: IA analisa feedback textual e converte em avalia\u00e7\u00f5es CSAT</li> </ul>"},{"location":"#integracao-whatsapp-completa","title":"\ud83d\udcf1 Integra\u00e7\u00e3o WhatsApp Completa","text":"<ul> <li>Uazapi/Evolution API: Integra\u00e7\u00e3o nativa com WhatsApp Business</li> <li>Webhooks em Tempo Real: Recebimento instant\u00e2neo de mensagens</li> <li>M\u00eddia Completa: Suporte a imagens, v\u00eddeos, \u00e1udios e documentos</li> <li>Rea\u00e7\u00f5es e Exclus\u00e3o: Sistema completo de intera\u00e7\u00f5es</li> <li>Status de Entrega: Confirma\u00e7\u00e3o de recebimento das mensagens</li> </ul>"},{"location":"#dashboard-e-metricas","title":"\ud83d\udcca Dashboard e M\u00e9tricas","text":"<ul> <li>Tempo Real: Atualiza\u00e7\u00f5es instant\u00e2neas via WebSocket</li> <li>M\u00e9tricas Avan\u00e7adas: Taxa de resolu\u00e7\u00e3o, satisfa\u00e7\u00e3o m\u00e9dia, tempo de resposta</li> <li>Gr\u00e1ficos Interativos: Visualiza\u00e7\u00f5es din\u00e2micas com Recharts</li> <li>Filtros Avan\u00e7ados: Por data, usu\u00e1rio, equipe e provedor</li> <li>Exporta\u00e7\u00e3o: Relat\u00f3rios em PDF e Excel</li> </ul>"},{"location":"#sistema-multi-tenant","title":"\ud83d\udd10 Sistema Multi-Tenant","text":"<ul> <li>Isolamento Total: Cada provedor tem seus dados separados</li> <li>Permiss\u00f5es Granulares: Controle fino de acesso por usu\u00e1rio</li> <li>Equipes: Organiza\u00e7\u00e3o por equipes com visibilidade controlada</li> <li>Transfer\u00eancia Inteligente: Entre agentes e equipes</li> </ul>"},{"location":"#sistema-csat","title":"\ud83d\udcc8 Sistema CSAT","text":"<ul> <li>Coleta Autom\u00e1tica: Feedback enviado automaticamente ap\u00f3s fechamento</li> <li>An\u00e1lise IA: Interpreta\u00e7\u00e3o autom\u00e1tica de feedback textual</li> <li>Dashboard Completo: M\u00e9tricas e evolu\u00e7\u00e3o temporal</li> <li>Hist\u00f3rico Detalhado: \u00daltimos feedbacks com fotos de perfil</li> </ul>"},{"location":"#arquitetura","title":"\ud83c\udfd7\ufe0f Arquitetura","text":"<pre><code>graph TB\n    subgraph \"Frontend\"\n        A[React App]\n        B[Dashboard]\n        C[Chat Interface]\n        D[Admin Panel]\n    end\n\n    subgraph \"Backend\"\n        E[Django API]\n        F[WebSocket]\n        G[Celery Tasks]\n        H[Redis Cache]\n    end\n\n    subgraph \"Integra\u00e7\u00f5es\"\n        I[WhatsApp Uazapi]\n        J[OpenAI ChatGPT]\n        K[SGP System]\n        L[Supabase]\n    end\n\n    subgraph \"Banco de Dados\"\n        M[PostgreSQL]\n        N[Redis]\n        O[Supabase]\n    end\n\n    A --&gt; E\n    B --&gt; E\n    C --&gt; F\n    D --&gt; E\n\n    E --&gt; G\n    E --&gt; H\n    F --&gt; H\n\n    E --&gt; I\n    E --&gt; J\n    E --&gt; K\n    E --&gt; L\n\n    E --&gt; M\n    G --&gt; N\n    L --&gt; O\n</code></pre>"},{"location":"#inicio-rapido","title":"\ud83d\ude80 In\u00edcio R\u00e1pido","text":""},{"location":"#1-clone-o-repositorio","title":"1. Clone o Reposit\u00f3rio","text":"<pre><code>git clone https://github.com/juniorssilvaa/niochat.git\ncd niochat\n</code></pre>"},{"location":"#2-configure-o-ambiente","title":"2. Configure o Ambiente","text":"<pre><code># Backend\ncd backend\npython -m venv venv\nsource venv/bin/activate\npip install -r requirements.txt\npython manage.py migrate\npython manage.py createsuperuser\n\n# Frontend\ncd frontend/frontend\nnpm install\n</code></pre>"},{"location":"#3-inicie-os-servicos","title":"3. Inicie os Servi\u00e7os","text":"<pre><code># Terminal 1 - Backend\ncd backend\npython manage.py runserver 0.0.0.0:8010\n\n# Terminal 2 - Frontend\ncd frontend/frontend\nnpm run dev\n</code></pre>"},{"location":"#4-acesse-o-sistema","title":"4. Acesse o Sistema","text":"<ul> <li>Frontend: http://localhost:5173</li> <li>Backend: http://localhost:8010</li> <li>Admin: http://localhost:8010/admin</li> </ul>"},{"location":"#documentacao-completa","title":"\ud83d\udcda Documenta\u00e7\u00e3o Completa","text":"<p>Explore nossa documenta\u00e7\u00e3o completa para aprender sobre:</p> <ul> <li>:octicons-book-24: Instala\u00e7\u00e3o e Configura\u00e7\u00e3o</li> <li>:octicons-code-24: API e Endpoints</li> <li>:octicons-cpu-24: IA e SGP</li> <li>:octicons-database-24: Supabase</li> <li>:octicons-gear-24: Desenvolvimento</li> </ul>"},{"location":"#suporte","title":"\ud83c\udd98 Suporte","text":"<ul> <li>GitHub Issues: Reportar problemas</li> <li>Documenta\u00e7\u00e3o: Navegue pelas se\u00e7\u00f5es acima</li> <li>Email: Entre em contato para suporte t\u00e9cnico</li> </ul>"},{"location":"#licenca","title":"\ud83d\udcc4 Licen\u00e7a","text":"<p>Este projeto est\u00e1 sob a licen\u00e7a MIT. Veja o arquivo LICENSE para mais detalhes.</p>"},{"location":"changelog/","title":"Changelog","text":"<p>Todas as mudan\u00e7as not\u00e1veis do projeto NioChat ser\u00e3o documentadas neste arquivo.</p>"},{"location":"changelog/#215-2025-01-xx","title":"[2.1.5] - 2025-01-XX","text":""},{"location":"changelog/#adicionado","title":"\ud83c\udf89 Adicionado","text":"<ul> <li>Sistema CSAT Completo: Coleta autom\u00e1tica de feedback com dashboard</li> <li>An\u00e1lise de Sentimento IA: Interpreta\u00e7\u00e3o autom\u00e1tica de feedback textual</li> <li>Auditoria Avan\u00e7ada: Hist\u00f3rico completo de conversas e avalia\u00e7\u00f5es</li> <li>Dashboard Melhorado: M\u00e9tricas em tempo real e gr\u00e1ficos interativos</li> <li>Isolamento de Dados: Seguran\u00e7a total entre provedores</li> <li>Automa\u00e7\u00e3o Celery: Tarefas programadas para CSAT</li> <li>Interface Otimizada: Componentes sem emojis e mais profissional</li> <li>Transfer\u00eancia para Equipes: Novo endpoint <code>/transfer_to_team/</code> para transfer\u00eancia correta</li> <li>Classifica\u00e7\u00e3o de Conversas: L\u00f3gica aprimorada para abas (Com IA, Em Espera, Em Atendimento)</li> <li>Sistema de Equipes: Conversas transferidas ficam vis\u00edveis para toda a equipe</li> </ul>"},{"location":"changelog/#melhorado","title":"\ud83d\udd27 Melhorado","text":"<ul> <li>Performance: Otimiza\u00e7\u00f5es no dashboard e carregamento de dados</li> <li>UX: Interface mais limpa e profissional</li> <li>Seguran\u00e7a: Isolamento total de dados entre provedores</li> <li>Relat\u00f3rios: Gr\u00e1ficos mais informativos e interativos</li> </ul>"},{"location":"changelog/#corrigido","title":"\ud83d\udc1b Corrigido","text":"<ul> <li>CSAT: Corre\u00e7\u00e3o no envio autom\u00e1tico de pesquisas</li> <li>Transfer\u00eancia: Corre\u00e7\u00e3o na l\u00f3gica de transfer\u00eancia para equipes</li> <li>Dashboard: Corre\u00e7\u00e3o na atualiza\u00e7\u00e3o de m\u00e9tricas em tempo real</li> <li>Auditoria: Corre\u00e7\u00e3o na exibi\u00e7\u00e3o de logs de auditoria</li> </ul>"},{"location":"changelog/#200-2024-12-xx","title":"[2.0.0] - 2024-12-XX","text":""},{"location":"changelog/#adicionado_1","title":"\ud83c\udf89 Adicionado","text":"<ul> <li>Integra\u00e7\u00e3o ChatGPT: IA conversacional avan\u00e7ada</li> <li>SGP Autom\u00e1tico: Consulta dados reais do cliente</li> <li>Function Calls: IA executa fun\u00e7\u00f5es SGP em tempo real</li> <li>Fluxo Inteligente: Detec\u00e7\u00e3o autom\u00e1tica de demandas</li> <li>Personalidade Avan\u00e7ada: Customiza\u00e7\u00e3o completa da IA</li> <li>Gera\u00e7\u00e3o Autom\u00e1tica: Faturas com PIX e QR Code</li> <li>Atendimento 3x mais r\u00e1pido: Sem perguntas desnecess\u00e1rias</li> </ul>"},{"location":"changelog/#melhorado_1","title":"\ud83d\udd27 Melhorado","text":"<ul> <li>Performance: Atendimento automatizado 24/7</li> <li>Precis\u00e3o: Dados reais do SGP, nunca inventados</li> <li>Velocidade: Respostas instant\u00e2neas com dados completos</li> <li>Personaliza\u00e7\u00e3o: IA \u00fanica para cada provedor</li> </ul>"},{"location":"changelog/#100-2024-xx-xx","title":"[1.0.0] - 2024-XX-XX","text":""},{"location":"changelog/#adicionado_2","title":"\ud83c\udf89 Adicionado","text":"<ul> <li>Sistema Base: Estrutura completa do NioChat</li> <li>Integra\u00e7\u00e3o WhatsApp: Uazapi/Evolution API integrado</li> <li>Interface React: Interface moderna e responsiva</li> <li>WebSocket: Comunica\u00e7\u00e3o em tempo real</li> <li>Sistema de Rea\u00e7\u00f5es: Emojis e exclus\u00e3o de mensagens</li> <li>Gest\u00e3o de Equipes: Organiza\u00e7\u00e3o por equipes</li> <li>Upload de M\u00eddia: Suporte completo a m\u00eddia</li> <li>Painel Admin: Interface Django customizada</li> <li>Sistema Multi-tenant: Suporte a m\u00faltiplos provedores</li> <li>Logs de Auditoria: Sistema completo de auditoria</li> <li>Integra\u00e7\u00f5es M\u00faltiplas: WhatsApp, Telegram, Email, Webchat</li> <li>Permiss\u00f5es Granulares: Controle fino de acesso</li> <li>Configura\u00e7\u00f5es Avan\u00e7adas: Provedores personaliz\u00e1veis</li> <li>Webhooks Configur\u00e1veis: Integra\u00e7\u00e3o flex\u00edvel</li> </ul>"},{"location":"changelog/#melhorado_2","title":"\ud83d\udd27 Melhorado","text":"<ul> <li>Arquitetura: Sistema escal\u00e1vel e robusto</li> <li>Seguran\u00e7a: Isolamento total entre provedores</li> <li>Performance: Otimiza\u00e7\u00f5es em todas as camadas</li> <li>UX: Interface intuitiva e moderna</li> </ul>"},{"location":"changelog/#roadmap","title":"\ud83d\ude80 Roadmap","text":""},{"location":"changelog/#proximas-versoes","title":"Pr\u00f3ximas Vers\u00f5es","text":"<ul> <li>v2.2.0: Integra\u00e7\u00e3o com mais sistemas de gest\u00e3o</li> <li>v2.3.0: IA multil\u00edngue</li> <li>v2.4.0: Dashboard avan\u00e7ado com mais m\u00e9tricas</li> <li>v3.0.0: Arquitetura microservi\u00e7os</li> </ul>"},{"location":"changelog/#funcionalidades-planejadas","title":"Funcionalidades Planejadas","text":"<ul> <li>Integra\u00e7\u00e3o CRM: Conectores para CRMs populares</li> <li>IA Multil\u00edngue: Suporte a m\u00faltiplos idiomas</li> <li>Dashboard Avan\u00e7ado: Mais m\u00e9tricas e relat\u00f3rios</li> <li>Arquitetura Microservi\u00e7os: Escalabilidade m\u00e1xima</li> <li>Mobile App: Aplicativo nativo para mobile</li> <li>API GraphQL: API mais flex\u00edvel</li> <li>Integra\u00e7\u00e3o Slack: Notifica\u00e7\u00f5es no Slack</li> <li>Integra\u00e7\u00e3o Teams: Notifica\u00e7\u00f5es no Microsoft Teams</li> </ul>"},{"location":"changelog/#estatisticas","title":"\ud83d\udcca Estat\u00edsticas","text":""},{"location":"changelog/#desenvolvimento","title":"Desenvolvimento","text":"<ul> <li>Commits: 500+</li> <li>Issues: 50+ resolvidas</li> <li>Pull Requests: 100+ aprovados</li> <li>Contribuidores: 5+</li> </ul>"},{"location":"changelog/#funcionalidades","title":"Funcionalidades","text":"<ul> <li>Endpoints API: 50+</li> <li>Componentes React: 100+</li> <li>Integra\u00e7\u00f5es: 10+</li> <li>Testes: 200+</li> </ul>"},{"location":"changelog/#performance","title":"Performance","text":"<ul> <li>Tempo de Resposta: &lt; 200ms</li> <li>Uptime: 99.9%</li> <li>Escalabilidade: 1000+ usu\u00e1rios simult\u00e2neos</li> <li>Disponibilidade: 24/7</li> </ul>"},{"location":"changelog/#reconhecimentos","title":"\ud83c\udfc6 Reconhecimentos","text":""},{"location":"changelog/#tecnologias-utilizadas","title":"Tecnologias Utilizadas","text":"<ul> <li>Django 5.2: Framework web robusto</li> <li>React 18: Interface moderna</li> <li>PostgreSQL: Banco de dados confi\u00e1vel</li> <li>Redis: Cache e sess\u00f5es</li> <li>Celery: Processamento ass\u00edncrono</li> <li>WebSocket: Tempo real</li> <li>OpenAI: IA avan\u00e7ada</li> <li>Supabase: Dashboard e auditoria</li> </ul>"},{"location":"changelog/#integracoes","title":"Integra\u00e7\u00f5es","text":"<ul> <li>Uazapi/Evolution: WhatsApp Business</li> <li>OpenAI ChatGPT: IA conversacional</li> <li>SGP: Sistema de gest\u00e3o</li> <li>Supabase: Dashboard e dados</li> <li>Telegram: Notifica\u00e7\u00f5es</li> <li>Email: Comunica\u00e7\u00e3o</li> </ul>"},{"location":"changelog/#notas-de-versao","title":"\ud83d\udcdd Notas de Vers\u00e3o","text":""},{"location":"changelog/#v215","title":"v2.1.5","text":"<p>Esta vers\u00e3o representa um marco importante no desenvolvimento do NioChat, com a introdu\u00e7\u00e3o do sistema CSAT completo e auditoria avan\u00e7ada. O sistema agora oferece:</p> <ul> <li>Coleta autom\u00e1tica de feedback com an\u00e1lise de sentimento</li> <li>Dashboard em tempo real com m\u00e9tricas precisas</li> <li>Auditoria completa de todas as a\u00e7\u00f5es do sistema</li> <li>Isolamento total de dados entre provedores</li> <li>Interface otimizada para melhor experi\u00eancia do usu\u00e1rio</li> </ul>"},{"location":"changelog/#v200","title":"v2.0.0","text":"<p>Esta vers\u00e3o revolucionou o atendimento automatizado com a introdu\u00e7\u00e3o da IA inteligente e integra\u00e7\u00e3o SGP. O sistema agora oferece:</p> <ul> <li>Atendimento 24/7 com IA avan\u00e7ada</li> <li>Dados reais do SGP, nunca inventados</li> <li>Function Calls para a\u00e7\u00f5es autom\u00e1ticas</li> <li>Personaliza\u00e7\u00e3o completa da IA por provedor</li> <li>Fluxo inteligente sem perguntas desnecess\u00e1rias</li> </ul>"},{"location":"changelog/#v100","title":"v1.0.0","text":"<p>Esta vers\u00e3o estabeleceu a base s\u00f3lida do NioChat com:</p> <ul> <li>Arquitetura robusta e escal\u00e1vel</li> <li>Integra\u00e7\u00e3o completa com WhatsApp</li> <li>Interface moderna e responsiva</li> <li>Sistema multi-tenant com isolamento total</li> <li>Permiss\u00f5es granulares para controle fino</li> </ul>"},{"location":"changelog/#links-uteis","title":"\ud83d\udd17 Links \u00dateis","text":"<ul> <li>GitHub: github.com/juniorssilvaa/niochat</li> <li>Documenta\u00e7\u00e3o: docs.niochat.com.br</li> <li>Demo: demo.niochat.com.br</li> <li>Suporte: suporte@niochat.com.br</li> </ul>"},{"location":"changelog/#licenca","title":"\ud83d\udcc4 Licen\u00e7a","text":"<p>Este projeto est\u00e1 sob a licen\u00e7a MIT. Veja o arquivo LICENSE para mais detalhes.</p>"},{"location":"ai/configuration/","title":"Configura\u00e7\u00e3o da IA","text":"<p>O NioChat utiliza OpenAI GPT para atendimento inteligente, transcri\u00e7\u00e3o de \u00e1udio e an\u00e1lise de sentimento. Este guia explica como configurar e usar a IA.</p>"},{"location":"ai/configuration/#visao-geral","title":"Vis\u00e3o Geral","text":""},{"location":"ai/configuration/#funcionalidades-da-ia","title":"Funcionalidades da IA","text":"<ul> <li>Atendimento Automatizado: Respostas inteligentes para clientes</li> <li>Transcri\u00e7\u00e3o de \u00c1udio: Convers\u00e3o de mensagens de voz para texto</li> <li>Consulta SGP: Integra\u00e7\u00e3o autom\u00e1tica com sistema de gest\u00e3o</li> <li>An\u00e1lise de Sentimento: Interpreta\u00e7\u00e3o de feedback CSAT</li> <li>Function Calls: Execu\u00e7\u00e3o autom\u00e1tica de fun\u00e7\u00f5es</li> </ul>"},{"location":"ai/configuration/#arquitetura","title":"Arquitetura","text":"<pre><code>Cliente \u2192 WhatsApp \u2192 NioChat \u2192 OpenAI \u2192 SGP \u2192 Resposta\n   \u2193         \u2193         \u2193         \u2193      \u2193       \u2193\nMensagem \u2192 Webhook \u2192 IA \u2192 Function \u2192 Dados \u2192 Cliente\n</code></pre>"},{"location":"ai/configuration/#configuracao-inicial","title":"Configura\u00e7\u00e3o Inicial","text":""},{"location":"ai/configuration/#1-obter-chave-openai","title":"1. Obter Chave OpenAI","text":"<pre><code># Acessar OpenAI\nhttps://platform.openai.com\n\n# Criar API Key\n- Acesse API Keys\n- Clique em \"Create new secret key\"\n- Copie a chave gerada\n</code></pre>"},{"location":"ai/configuration/#2-configurar-variaveis","title":"2. Configurar Vari\u00e1veis","text":"<pre><code># Adicionar ao .env\nOPENAI_API_KEY=sk-sua_chave_openai_aqui\nOPENAI_MODEL=gpt-4\nOPENAI_MAX_TOKENS=2000\nOPENAI_TEMPERATURE=0.7\n</code></pre>"},{"location":"ai/configuration/#3-configurar-django","title":"3. Configurar Django","text":"<pre><code># settings.py\nOPENAI_API_KEY = os.getenv('OPENAI_API_KEY')\nOPENAI_MODEL = os.getenv('OPENAI_MODEL', 'gpt-4')\nOPENAI_MAX_TOKENS = int(os.getenv('OPENAI_MAX_TOKENS', '2000'))\nOPENAI_TEMPERATURE = float(os.getenv('OPENAI_TEMPERATURE', '0.7'))\n</code></pre>"},{"location":"ai/configuration/#servico-openai","title":"Servi\u00e7o OpenAI","text":""},{"location":"ai/configuration/#1-classe-principal","title":"1. Classe Principal","text":"<pre><code># core/openai_service.py\nimport openai\nfrom django.conf import settings\nfrom typing import Dict, Any, Optional, List\n\nclass OpenAIService:\n    def __init__(self):\n        openai.api_key = settings.OPENAI_API_KEY\n        self.model = settings.OPENAI_MODEL\n        self.max_tokens = settings.OPENAI_MAX_TOKENS\n        self.temperature = settings.OPENAI_TEMPERATURE\n\n    def generate_response(self, message: str, context: Dict[str, Any]) -&gt; str:\n        \"\"\"Gerar resposta da IA\"\"\"\n        try:\n            response = openai.ChatCompletion.create(\n                model=self.model,\n                messages=[\n                    {\"role\": \"system\", \"content\": self._get_system_prompt(context)},\n                    {\"role\": \"user\", \"content\": message}\n                ],\n                max_tokens=self.max_tokens,\n                temperature=self.temperature\n            )\n\n            return response.choices[0].message.content\n        except Exception as e:\n            print(f\"Erro ao gerar resposta: {e}\")\n            return \"Desculpe, ocorreu um erro. Tente novamente.\"\n\n    def transcribe_audio(self, audio_file_path: str) -&gt; str:\n        \"\"\"Transcrever \u00e1udio para texto\"\"\"\n        try:\n            with open(audio_file_path, \"rb\") as audio_file:\n                transcript = openai.Audio.transcribe(\n                    model=\"whisper-1\",\n                    file=audio_file\n                )\n                return transcript.text\n        except Exception as e:\n            print(f\"Erro na transcri\u00e7\u00e3o: {e}\")\n            return \"\"\n\n    def analyze_sentiment(self, text: str) -&gt; Dict[str, Any]:\n        \"\"\"Analisar sentimento do texto\"\"\"\n        try:\n            response = openai.ChatCompletion.create(\n                model=self.model,\n                messages=[\n                    {\"role\": \"system\", \"content\": self._get_sentiment_prompt()},\n                    {\"role\": \"user\", \"content\": text}\n                ],\n                max_tokens=100,\n                temperature=0.1\n            )\n\n            return self._parse_sentiment_response(response.choices[0].message.content)\n        except Exception as e:\n            print(f\"Erro na an\u00e1lise de sentimento: {e}\")\n            return {\"emoji\": \"\ud83d\ude10\", \"rating\": 3}\n\n    def _get_system_prompt(self, context: Dict[str, Any]) -&gt; str:\n        \"\"\"Obter prompt do sistema\"\"\"\n        return f\"\"\"\n        Voc\u00ea \u00e9 um assistente virtual especializado em atendimento ao cliente.\n\n        Contexto:\n        - Provedor: {context.get('provedor_name', 'NioChat')}\n        - Cliente: {context.get('contact_name', 'Cliente')}\n        - Conversa: {context.get('conversation_id', 'Nova')}\n\n        Instru\u00e7\u00f5es:\n        1. Seja sempre cordial e prestativo\n        2. Use informa\u00e7\u00f5es do SGP quando dispon\u00edvel\n        3. Se n\u00e3o souber algo, pe\u00e7a mais informa\u00e7\u00f5es\n        4. Mantenha o tom profissional mas amig\u00e1vel\n        5. Use emojis moderadamente\n        \"\"\"\n\n    def _get_sentiment_prompt(self) -&gt; str:\n        \"\"\"Obter prompt para an\u00e1lise de sentimento\"\"\"\n        return \"\"\"\n        Analise o sentimento do texto e retorne:\n        - emoji: \ud83d\ude21 (1), \ud83d\ude15 (2), \ud83d\ude10 (3), \ud83d\ude42 (4), \ud83e\udd29 (5)\n        - rating: n\u00famero de 1 a 5\n\n        Escala:\n        1 = Muito insatisfeito (\ud83d\ude21)\n        2 = Insatisfeito (\ud83d\ude15)\n        3 = Neutro (\ud83d\ude10)\n        4 = Satisfeito (\ud83d\ude42)\n        5 = Muito satisfeito (\ud83e\udd29)\n\n        Responda apenas: {\"emoji\": \"\ud83d\ude10\", \"rating\": 3}\n        \"\"\"\n\n    def _parse_sentiment_response(self, response: str) -&gt; Dict[str, Any]:\n        \"\"\"Parsear resposta de sentimento\"\"\"\n        try:\n            import json\n            return json.loads(response)\n        except:\n            return {\"emoji\": \"\ud83d\ude10\", \"rating\": 3}\n</code></pre>"},{"location":"ai/configuration/#2-uso-no-django","title":"2. Uso no Django","text":"<pre><code># Em views.py\nfrom core.openai_service import OpenAIService\n\ndef process_message(request):\n    message = request.POST.get('message')\n    conversation = Conversation.objects.get(id=request.POST.get('conversation_id'))\n\n    # Gerar resposta da IA\n    openai_service = OpenAIService()\n    context = {\n        'provedor_name': conversation.provedor.name,\n        'contact_name': conversation.contact.name,\n        'conversation_id': conversation.id\n    }\n\n    response = openai_service.generate_response(message, context)\n\n    return JsonResponse({'response': response})\n</code></pre>"},{"location":"ai/configuration/#function-calls","title":"Function Calls","text":""},{"location":"ai/configuration/#1-configurar-funcoes","title":"1. Configurar Fun\u00e7\u00f5es","text":"<pre><code># core/openai_service.py\ndef generate_response_with_functions(self, message: str, context: Dict[str, Any]) -&gt; Dict[str, Any]:\n    \"\"\"Gerar resposta com function calls\"\"\"\n    try:\n        response = openai.ChatCompletion.create(\n            model=self.model,\n            messages=[\n                {\"role\": \"system\", \"content\": self._get_system_prompt(context)},\n                {\"role\": \"user\", \"content\": message}\n            ],\n            functions=self._get_functions(),\n            function_call=\"auto\",\n            max_tokens=self.max_tokens,\n            temperature=self.temperature\n        )\n\n        return {\n            'response': response.choices[0].message.content,\n            'function_calls': response.choices[0].message.get('function_calls', [])\n        }\n    except Exception as e:\n        print(f\"Erro ao gerar resposta: {e}\")\n        return {'response': 'Desculpe, ocorreu um erro.', 'function_calls': []}\n\ndef _get_functions(self) -&gt; List[Dict[str, Any]]:\n    \"\"\"Obter fun\u00e7\u00f5es dispon\u00edveis\"\"\"\n    return [\n        {\n            \"name\": \"consultar_cliente_sgp\",\n            \"description\": \"Consultar dados do cliente no SGP\",\n            \"parameters\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"cpf_cnpj\": {\n                        \"type\": \"string\",\n                        \"description\": \"CPF ou CNPJ do cliente\"\n                    }\n                },\n                \"required\": [\"cpf_cnpj\"]\n            }\n        },\n        {\n            \"name\": \"verificar_acesso_sgp\",\n            \"description\": \"Verificar status de acesso do cliente\",\n            \"parameters\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"contrato\": {\n                        \"type\": \"string\",\n                        \"description\": \"N\u00famero do contrato\"\n                    }\n                },\n                \"required\": [\"contrato\"]\n            }\n        },\n        {\n            \"name\": \"gerar_fatura_completa\",\n            \"description\": \"Gerar fatura completa do cliente\",\n            \"parameters\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"contrato\": {\n                        \"type\": \"string\",\n                        \"description\": \"N\u00famero do contrato\"\n                    }\n                },\n                \"required\": [\"contrato\"]\n            }\n        },\n        {\n            \"name\": \"criar_chamado_tecnico\",\n            \"description\": \"Criar chamado t\u00e9cnico para o cliente\",\n            \"parameters\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"cpf_cnpj\": {\n                        \"type\": \"string\",\n                        \"description\": \"CPF ou CNPJ do cliente\"\n                    },\n                    \"motivo\": {\n                        \"type\": \"string\",\n                        \"description\": \"Motivo do chamado\"\n                    },\n                    \"sintomas\": {\n                        \"type\": \"string\",\n                        \"description\": \"Sintomas relatados\"\n                    }\n                },\n                \"required\": [\"cpf_cnpj\", \"motivo\", \"sintomas\"]\n            }\n        }\n    ]\n</code></pre>"},{"location":"ai/configuration/#2-executar-function-calls","title":"2. Executar Function Calls","text":"<pre><code># core/openai_service.py\ndef execute_function_call(self, function_name: str, parameters: Dict[str, Any]) -&gt; str:\n    \"\"\"Executar function call\"\"\"\n    try:\n        if function_name == \"consultar_cliente_sgp\":\n            return self._consultar_cliente_sgp(parameters)\n        elif function_name == \"verificar_acesso_sgp\":\n            return self._verificar_acesso_sgp(parameters)\n        elif function_name == \"gerar_fatura_completa\":\n            return self._gerar_fatura_completa(parameters)\n        elif function_name == \"criar_chamado_tecnico\":\n            return self._criar_chamado_tecnico(parameters)\n        else:\n            return \"Fun\u00e7\u00e3o n\u00e3o encontrada\"\n    except Exception as e:\n        print(f\"Erro ao executar fun\u00e7\u00e3o {function_name}: {e}\")\n        return \"Erro ao executar fun\u00e7\u00e3o\"\n\ndef _consultar_cliente_sgp(self, parameters: Dict[str, Any]) -&gt; str:\n    \"\"\"Consultar cliente no SGP\"\"\"\n    cpf_cnpj = parameters.get('cpf_cnpj')\n\n    # Integra\u00e7\u00e3o com SGP\n    from core.sgp_client import SGPClient\n    sgp_client = SGPClient()\n    cliente = sgp_client.consultar_cliente(cpf_cnpj)\n\n    if cliente:\n        return f\"Cliente encontrado: {cliente['nome']} - Contrato: {cliente['contrato']}\"\n    else:\n        return \"Cliente n\u00e3o encontrado no SGP\"\n\ndef _verificar_acesso_sgp(self, parameters: Dict[str, Any]) -&gt; str:\n    \"\"\"Verificar acesso no SGP\"\"\"\n    contrato = parameters.get('contrato')\n\n    from core.sgp_client import SGPClient\n    sgp_client = SGPClient()\n    status = sgp_client.verificar_acesso(contrato)\n\n    return f\"Status do acesso: {status}\"\n\ndef _gerar_fatura_completa(self, parameters: Dict[str, Any]) -&gt; str:\n    \"\"\"Gerar fatura completa\"\"\"\n    contrato = parameters.get('contrato')\n\n    from core.sgp_client import SGPClient\n    sgp_client = SGPClient()\n    fatura = sgp_client.gerar_fatura(contrato)\n\n    if fatura:\n        return f\"Fatura gerada: {fatura['valor']} - Vencimento: {fatura['vencimento']}\"\n    else:\n        return \"Erro ao gerar fatura\"\n\ndef _criar_chamado_tecnico(self, parameters: Dict[str, Any]) -&gt; str:\n    \"\"\"Criar chamado t\u00e9cnico\"\"\"\n    cpf_cnpj = parameters.get('cpf_cnpj')\n    motivo = parameters.get('motivo')\n    sintomas = parameters.get('sintomas')\n\n    from core.sgp_client import SGPClient\n    sgp_client = SGPClient()\n    chamado = sgp_client.criar_chamado(cpf_cnpj, motivo, sintomas)\n\n    if chamado:\n        return f\"Chamado criado: {chamado['numero']} - Status: {chamado['status']}\"\n    else:\n        return \"Erro ao criar chamado\"\n</code></pre>"},{"location":"ai/configuration/#transcricao-de-audio","title":"Transcri\u00e7\u00e3o de \u00c1udio","text":""},{"location":"ai/configuration/#1-processar-audio","title":"1. Processar \u00c1udio","text":"<pre><code># conversations/views.py\ndef process_audio_message(request):\n    audio_file = request.FILES.get('audio')\n    conversation_id = request.POST.get('conversation_id')\n\n    # Salvar arquivo tempor\u00e1rio\n    temp_path = f\"/tmp/audio_{conversation_id}.ogg\"\n    with open(temp_path, 'wb') as f:\n        for chunk in audio_file.chunks():\n            f.write(chunk)\n\n    # Transcrever com OpenAI\n    openai_service = OpenAIService()\n    transcript = openai_service.transcribe_audio(temp_path)\n\n    # Limpar arquivo tempor\u00e1rio\n    os.remove(temp_path)\n\n    # Processar transcri\u00e7\u00e3o\n    if transcript:\n        # Salvar mensagem transcrita\n        message = Message.objects.create(\n            conversation_id=conversation_id,\n            content=transcript,\n            message_type='text'\n        )\n\n        # Processar com IA\n        response = openai_service.generate_response(transcript, context)\n\n        return JsonResponse({\n            'transcript': transcript,\n            'response': response\n        })\n\n    return JsonResponse({'error': 'Erro na transcri\u00e7\u00e3o'})\n</code></pre>"},{"location":"ai/configuration/#2-configurar-whisper","title":"2. Configurar Whisper","text":"<pre><code># core/openai_service.py\ndef transcribe_audio_advanced(self, audio_file_path: str, language: str = 'pt') -&gt; str:\n    \"\"\"Transcrever \u00e1udio com configura\u00e7\u00f5es avan\u00e7adas\"\"\"\n    try:\n        with open(audio_file_path, \"rb\") as audio_file:\n            transcript = openai.Audio.transcribe(\n                model=\"whisper-1\",\n                file=audio_file,\n                language=language,\n                response_format=\"text\",\n                temperature=0.0\n            )\n            return transcript\n    except Exception as e:\n        print(f\"Erro na transcri\u00e7\u00e3o: {e}\")\n        return \"\"\n</code></pre>"},{"location":"ai/configuration/#analise-de-sentimento","title":"An\u00e1lise de Sentimento","text":""},{"location":"ai/configuration/#1-sistema-csat","title":"1. Sistema CSAT","text":"<pre><code># conversations/csat_automation.py\nfrom core.openai_service import OpenAIService\n\nclass CSATAutomationService:\n    @classmethod\n    def process_csat_response(cls, message_text: str, conversation, contact):\n        \"\"\"Processar resposta CSAT\"\"\"\n        openai_service = OpenAIService()\n\n        # Analisar sentimento\n        sentiment = openai_service.analyze_sentiment(message_text)\n\n        # Corrigir rating se necess\u00e1rio\n        if any(word in message_text.lower() for word in ['p\u00e9ssimo', 'horr\u00edvel', 'terr\u00edvel']):\n            if sentiment['rating'] != 1:\n                sentiment = {'emoji': '\ud83d\ude21', 'rating': 1}\n\n        # Salvar feedback\n        feedback = CSATFeedback.objects.create(\n            conversation=conversation,\n            contact=contact,\n            emoji_rating=sentiment['emoji'],\n            rating_value=sentiment['rating'],\n            original_message=message_text\n        )\n\n        # Gerar resposta personalizada\n        response = openai_service.generate_csat_response(\n            sentiment['rating'], \n            contact.name\n        )\n\n        return feedback, response\n</code></pre>"},{"location":"ai/configuration/#2-resposta-personalizada","title":"2. Resposta Personalizada","text":"<pre><code># core/openai_service.py\ndef generate_csat_response(self, rating: int, contact_name: str) -&gt; str:\n    \"\"\"Gerar resposta personalizada para CSAT\"\"\"\n    responses = {\n        1: f\"\ud83d\ude14 Sinto muito que seu atendimento n\u00e3o foi bom, {contact_name}! Estamos sempre melhorando e esperamos te atender melhor na pr\u00f3xima vez.\",\n        2: f\"\ud83d\ude15 Poxa, {contact_name}, sentimos que n\u00e3o tenha gostado. Sua opini\u00e3o \u00e9 importante para melhorarmos!\",\n        3: f\"\ud83d\ude42 Obrigado pelo seu feedback, {contact_name}! Vamos trabalhar para te surpreender da pr\u00f3xima vez.\",\n        4: f\"\ud83d\ude04 Que bom saber disso, {contact_name}! Ficamos felizes que seu atendimento foi bom!\",\n        5: f\"\ud83e\udd29 Maravilha, {contact_name}! Agradecemos por sua avalia\u00e7\u00e3o e ficamos felizes com sua satisfa\u00e7\u00e3o!\"\n    }\n\n    return responses.get(rating, responses[3])\n</code></pre>"},{"location":"ai/configuration/#configuracoes-avancadas","title":"Configura\u00e7\u00f5es Avan\u00e7adas","text":""},{"location":"ai/configuration/#1-prompts-personalizados","title":"1. Prompts Personalizados","text":"<pre><code># core/openai_service.py\ndef _get_custom_prompt(self, provedor_id: int) -&gt; str:\n    \"\"\"Obter prompt personalizado por provedor\"\"\"\n    try:\n        provedor = Provedor.objects.get(id=provedor_id)\n        return f\"\"\"\n        Voc\u00ea \u00e9 um assistente virtual da {provedor.name}.\n\n        Especializa\u00e7\u00e3o: {provedor.description}\n        Tom: {provedor.tone or 'profissional e amig\u00e1vel'}\n        Linguagem: {provedor.language or 'portugu\u00eas brasileiro'}\n\n        Instru\u00e7\u00f5es espec\u00edficas:\n        {provedor.ai_instructions or 'Seja sempre prestativo e resolva os problemas do cliente.'}\n        \"\"\"\n    except:\n        return self._get_system_prompt({})\n</code></pre>"},{"location":"ai/configuration/#2-rate-limiting","title":"2. Rate Limiting","text":"<pre><code># core/openai_service.py\nfrom django.core.cache import cache\n\ndef generate_response_with_rate_limit(self, message: str, context: Dict[str, Any]) -&gt; str:\n    \"\"\"Gerar resposta com rate limiting\"\"\"\n    user_id = context.get('user_id')\n    cache_key = f\"openai_rate_limit_{user_id}\"\n\n    # Verificar rate limit\n    if cache.get(cache_key):\n        return \"Muitas requisi\u00e7\u00f5es. Aguarde um momento.\"\n\n    # Definir rate limit (1 requisi\u00e7\u00e3o por segundo)\n    cache.set(cache_key, True, 1)\n\n    return self.generate_response(message, context)\n</code></pre>"},{"location":"ai/configuration/#3-logging-e-monitoramento","title":"3. Logging e Monitoramento","text":"<pre><code># core/openai_service.py\nimport logging\n\nlogger = logging.getLogger(__name__)\n\ndef generate_response(self, message: str, context: Dict[str, Any]) -&gt; str:\n    \"\"\"Gerar resposta com logging\"\"\"\n    start_time = time.time()\n\n    try:\n        response = openai.ChatCompletion.create(\n            model=self.model,\n            messages=[\n                {\"role\": \"system\", \"content\": self._get_system_prompt(context)},\n                {\"role\": \"user\", \"content\": message}\n            ],\n            max_tokens=self.max_tokens,\n            temperature=self.temperature\n        )\n\n        # Log de sucesso\n        logger.info(f\"Resposta gerada em {time.time() - start_time:.2f}s\")\n\n        return response.choices[0].message.content\n\n    except Exception as e:\n        # Log de erro\n        logger.error(f\"Erro ao gerar resposta: {e}\")\n        return \"Desculpe, ocorreu um erro. Tente novamente.\"\n</code></pre>"},{"location":"ai/configuration/#troubleshooting","title":"Troubleshooting","text":""},{"location":"ai/configuration/#1-problemas-comuns","title":"1. Problemas Comuns","text":"<pre><code># Verificar chave OpenAI\ncurl -H \"Authorization: Bearer sk-sua_chave\" https://api.openai.com/v1/models\n\n# Verificar cr\u00e9ditos\ncurl -H \"Authorization: Bearer sk-sua_chave\" https://api.openai.com/v1/usage\n</code></pre>"},{"location":"ai/configuration/#2-logs-de-debug","title":"2. Logs de Debug","text":"<pre><code># Testar conex\u00e3o\nfrom core.openai_service import OpenAIService\nopenai_service = OpenAIService()\nprint(openai_service.test_connection())\n</code></pre>"},{"location":"ai/configuration/#3-monitoramento","title":"3. Monitoramento","text":"<pre><code># Verificar uso da API\ndef check_openai_usage():\n    try:\n        usage = openai.Usage.retrieve()\n        print(f\"Tokens usados: {usage.total_tokens}\")\n        print(f\"Custo: ${usage.total_cost}\")\n    except Exception as e:\n        print(f\"Erro ao verificar uso: {e}\")\n</code></pre>"},{"location":"ai/configuration/#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<ol> <li>Function Calls - Configure function calls</li> <li>SGP Integration - Configure integra\u00e7\u00e3o SGP</li> <li>Transcri\u00e7\u00e3o - Configure transcri\u00e7\u00e3o</li> </ol>"},{"location":"api/authentication/","title":"Autentica\u00e7\u00e3o","text":"<p>O NioChat utiliza autentica\u00e7\u00e3o baseada em tokens para proteger a API. Este documento explica como implementar a autentica\u00e7\u00e3o em suas integra\u00e7\u00f5es.</p>"},{"location":"api/authentication/#metodos-de-autenticacao","title":"M\u00e9todos de Autentica\u00e7\u00e3o","text":""},{"location":"api/authentication/#token-authentication","title":"Token Authentication","text":"<p>O sistema utiliza Django REST Framework Token Authentication como m\u00e9todo principal.</p>"},{"location":"api/authentication/#headers-de-autenticacao","title":"Headers de Autentica\u00e7\u00e3o","text":"<pre><code>Authorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/authentication/#login","title":"Login","text":""},{"location":"api/authentication/#endpoint-de-login","title":"Endpoint de Login","text":"<pre><code>POST /api/auth/login/\nContent-Type: application/json\n\n{\n  \"username\": \"seu_usuario\",\n  \"password\": \"sua_senha\"\n}\n</code></pre>"},{"location":"api/authentication/#resposta-de-sucesso","title":"Resposta de Sucesso","text":"<pre><code>{\n  \"token\": \"afe94c2006465105312e24043b859e5c0628aadf\"\n}\n</code></pre> <p>Nota: A API retorna apenas o token de autentica\u00e7\u00e3o. Para obter informa\u00e7\u00f5es do usu\u00e1rio, use o endpoint <code>/api/auth/me/</code> ap\u00f3s o login.</p>"},{"location":"api/authentication/#resposta-de-erro","title":"Resposta de Erro","text":"<pre><code>{\n  \"error\": \"InvalidCredentials\",\n  \"message\": \"Credenciais inv\u00e1lidas\"\n}\n</code></pre>"},{"location":"api/authentication/#informacoes-do-usuario","title":"Informa\u00e7\u00f5es do Usu\u00e1rio","text":""},{"location":"api/authentication/#obter-dados-do-usuario","title":"Obter Dados do Usu\u00e1rio","text":"<pre><code>GET /api/auth/me/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/authentication/#resposta","title":"Resposta","text":"<pre><code>{\n    \"id\": 3,\n    \"username\": \"niochat\",\n    \"email\": \"contatofinnybot@gmail.com.br\",\n    \"first_name\": \"Nio\",\n    \"last_name\": \"chat\",\n    \"provedor_id\": 1,\n    \"user_type\": \"admin\",\n    \"permissions\": [],\n    \"sound_notifications_enabled\": true,\n    \"new_message_sound\": \"message_in_02.mp3\",\n    \"new_conversation_sound\": \"chat_new_08.mp3\",\n    \"session_timeout\": 60\n}\n</code></pre>"},{"location":"api/authentication/#campos-da-resposta","title":"Campos da Resposta","text":"Campo Tipo Descri\u00e7\u00e3o <code>id</code> integer ID \u00fanico do usu\u00e1rio <code>username</code> string Nome de usu\u00e1rio <code>email</code> string Email do usu\u00e1rio <code>first_name</code> string Primeiro nome <code>last_name</code> string Sobrenome <code>provedor_id</code> integer ID do provedor <code>user_type</code> string Tipo do usu\u00e1rio (admin, agent, viewer) <code>permissions</code> array Lista de permiss\u00f5es do usu\u00e1rio <code>sound_notifications_enabled</code> boolean Notifica\u00e7\u00f5es sonoras habilitadas <code>new_message_sound</code> string Som para nova mensagem <code>new_conversation_sound</code> string Som para nova conversa <code>session_timeout</code> integer Timeout da sess\u00e3o em minutos"},{"location":"api/authentication/#logout","title":"Logout","text":""},{"location":"api/authentication/#endpoint-de-logout","title":"Endpoint de Logout","text":"<pre><code>POST /api/auth/logout/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/authentication/#resposta_1","title":"Resposta","text":"<pre><code>{\n  \"message\": \"Logout realizado com sucesso\"\n}\n</code></pre>"},{"location":"api/authentication/#timeout-de-sessao","title":"Timeout de Sess\u00e3o","text":""},{"location":"api/authentication/#verificar-timeout","title":"Verificar Timeout","text":"<pre><code>POST /api/auth/session-timeout/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"timeout\": 60\n}\n</code></pre>"},{"location":"api/authentication/#resposta-de-sucesso_1","title":"Resposta de Sucesso","text":"<pre><code>{\n  \"message\": \"Timeout da sess\u00e3o atualizado com sucesso\",\n  \"session_timeout\": 60\n}\n</code></pre>"},{"location":"api/authentication/#resposta-de-erro_1","title":"Resposta de Erro","text":"<pre><code>{\n  \"error\": \"Timeout da sess\u00e3o n\u00e3o fornecido\"\n}\n</code></pre>"},{"location":"api/authentication/#implementacao-em-javascript","title":"Implementa\u00e7\u00e3o em JavaScript","text":""},{"location":"api/authentication/#exemplo-com-fetch","title":"Exemplo com Fetch","text":"<pre><code>class NioChatAPI {\n  constructor(baseURL, token = null) {\n    this.baseURL = baseURL;\n    this.token = token;\n  }\n\n  async login(username, password) {\n    const response = await fetch(`${this.baseURL}/api/auth/login/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, password })\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      this.token = data.token;\n      console.log('Token recebido:', data.token);\n      return data;\n    } else {\n      throw new Error('Falha na autentica\u00e7\u00e3o');\n    }\n  }\n\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const headers = {\n      'Content-Type': 'application/json',\n      ...options.headers\n    };\n\n    if (this.token) {\n      headers['Authorization'] = `Token ${this.token}`;\n    }\n\n    const response = await fetch(url, {\n      ...options,\n      headers\n    });\n\n    if (response.status === 401) {\n      // Token expirado ou inv\u00e1lido\n      this.token = null;\n      throw new Error('Sess\u00e3o expirada');\n    }\n\n    return response;\n  }\n\n  async get(endpoint) {\n    const response = await this.request(endpoint, { method: 'GET' });\n    return response.json();\n  }\n\n  async post(endpoint, data) {\n    const response = await this.request(endpoint, {\n      method: 'POST',\n      body: JSON.stringify(data)\n    });\n    return response.json();\n  }\n\n  async put(endpoint, data) {\n    const response = await this.request(endpoint, {\n      method: 'PUT',\n      body: JSON.stringify(data)\n    });\n    return response.json();\n  }\n\n  async delete(endpoint) {\n    const response = await this.request(endpoint, { method: 'DELETE' });\n    return response.json();\n  }\n}\n\n// Uso\nconst api = new NioChatAPI('http://localhost:8010');\n\n// Login\ntry {\n  const auth = await api.login('usuario', 'senha');\n  console.log('Token:', auth.token);\n\n  // Obter dados do usu\u00e1rio ap\u00f3s login\n  const userInfo = await api.get('/api/auth/me/');\n  console.log('Dados do usu\u00e1rio:', userInfo);\n} catch (error) {\n  console.error('Erro no login:', error);\n}\n\n// Fazer requisi\u00e7\u00f5es autenticadas\ntry {\n  const conversations = await api.get('/api/conversations/');\n  console.log('Conversas:', conversations);\n} catch (error) {\n  console.error('Erro na requisi\u00e7\u00e3o:', error);\n}\n</code></pre>"},{"location":"api/authentication/#exemplo-com-axios","title":"Exemplo com Axios","text":"<pre><code>import axios from 'axios';\n\nclass NioChatAPI {\n  constructor(baseURL) {\n    this.api = axios.create({\n      baseURL: baseURL,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // Interceptor para adicionar token\n    this.api.interceptors.request.use((config) =&gt; {\n      const token = localStorage.getItem('niochat_token');\n      if (token) {\n        config.headers.Authorization = `Token ${token}`;\n      }\n      return config;\n    });\n\n    // Interceptor para tratar erros de autentica\u00e7\u00e3o\n    this.api.interceptors.response.use(\n      (response) =&gt; response,\n      (error) =&gt; {\n        if (error.response?.status === 401) {\n          localStorage.removeItem('niochat_token');\n          window.location.href = '/login';\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  async login(username, password) {\n    try {\n      const response = await this.api.post('/api/auth/login/', {\n        username,\n        password\n      });\n\n      const { token } = response.data;\n      localStorage.setItem('niochat_token', token);\n\n      return response.data;\n    } catch (error) {\n      throw new Error('Falha na autentica\u00e7\u00e3o');\n    }\n  }\n\n  async logout() {\n    try {\n      await this.api.post('/api/auth/logout/');\n      localStorage.removeItem('niochat_token');\n    } catch (error) {\n      console.error('Erro no logout:', error);\n    }\n  }\n\n  async getMe() {\n    const response = await this.api.get('/api/auth/me/');\n    return response.data;\n  }\n}\n\n// Uso\nconst api = new NioChatAPI('http://localhost:8010');\n\n// Login\napi.login('usuario', 'senha')\n  .then(auth =&gt; console.log('Autenticado:', auth))\n  .catch(error =&gt; console.error('Erro:', error));\n\n// Obter dados do usu\u00e1rio\napi.getMe()\n  .then(user =&gt; console.log('Usu\u00e1rio:', user))\n  .catch(error =&gt; console.error('Erro:', error));\n</code></pre>"},{"location":"api/authentication/#implementacao-em-python","title":"Implementa\u00e7\u00e3o em Python","text":""},{"location":"api/authentication/#exemplo-com-requests","title":"Exemplo com Requests","text":"<pre><code>import requests\nfrom typing import Optional, Dict, Any\n\nclass NioChatAPI:\n    def __init__(self, base_url: str, token: Optional[str] = None):\n        self.base_url = base_url\n        self.token = token\n        self.session = requests.Session()\n\n        if token:\n            self.session.headers.update({\n                'Authorization': f'Token {token}'\n            })\n\n    def login(self, username: str, password: str) -&gt; Dict[str, Any]:\n        \"\"\"Realiza login e obt\u00e9m token\"\"\"\n        response = self.session.post(\n            f'{self.base_url}/api/auth/login/',\n            json={'username': username, 'password': password}\n        )\n\n        if response.status_code == 200:\n            data = response.json()\n            self.token = data['token']\n            self.session.headers.update({\n                'Authorization': f'Token {self.token}'\n            })\n            return data\n        else:\n            raise Exception('Falha na autentica\u00e7\u00e3o')\n\n    def get(self, endpoint: str) -&gt; Dict[str, Any]:\n        \"\"\"Faz requisi\u00e7\u00e3o GET\"\"\"\n        response = self.session.get(f'{self.base_url}{endpoint}')\n        response.raise_for_status()\n        return response.json()\n\n    def post(self, endpoint: str, data: Dict[str, Any]) -&gt; Dict[str, Any]:\n        \"\"\"Faz requisi\u00e7\u00e3o POST\"\"\"\n        response = self.session.post(\n            f'{self.base_url}{endpoint}',\n            json=data\n        )\n        response.raise_for_status()\n        return response.json()\n\n    def put(self, endpoint: str, data: Dict[str, Any]) -&gt; Dict[str, Any]:\n        \"\"\"Faz requisi\u00e7\u00e3o PUT\"\"\"\n        response = self.session.put(\n            f'{self.base_url}{endpoint}',\n            json=data\n        )\n        response.raise_for_status()\n        return response.json()\n\n    def delete(self, endpoint: str) -&gt; Dict[str, Any]:\n        \"\"\"Faz requisi\u00e7\u00e3o DELETE\"\"\"\n        response = self.session.delete(f'{self.base_url}{endpoint}')\n        response.raise_for_status()\n        return response.json()\n\n    def get_me(self) -&gt; Dict[str, Any]:\n        \"\"\"Obt\u00e9m dados do usu\u00e1rio atual\"\"\"\n        return self.get('/api/auth/me/')\n\n    def logout(self) -&gt; None:\n        \"\"\"Realiza logout\"\"\"\n        self.session.post(f'{self.base_url}/api/auth/logout/')\n        self.token = None\n        self.session.headers.pop('Authorization', None)\n\n# Uso\napi = NioChatAPI('http://localhost:8010')\n\n# Login\ntry:\n    auth = api.login('usuario', 'senha')\n    print(f'Token: {auth[\"token\"]}')\nexcept Exception as e:\n    print(f'Erro no login: {e}')\n\n# Fazer requisi\u00e7\u00f5es\ntry:\n    conversations = api.get('/api/conversations/')\n    print(f'Conversas: {conversations}')\nexcept Exception as e:\n    print(f'Erro na requisi\u00e7\u00e3o: {e}')\n</code></pre>"},{"location":"api/authentication/#implementacao-em-php","title":"Implementa\u00e7\u00e3o em PHP","text":""},{"location":"api/authentication/#exemplo-com-curl","title":"Exemplo com cURL","text":"<pre><code>&lt;?php\nclass NioChatAPI {\n    private $baseUrl;\n    private $token;\n\n    public function __construct($baseUrl) {\n        $this-&gt;baseUrl = $baseUrl;\n    }\n\n    public function login($username, $password) {\n        $data = json_encode([\n            'username' =&gt; $username,\n            'password' =&gt; $password\n        ]);\n\n        $response = $this-&gt;makeRequest('/api/auth/login/', 'POST', $data);\n\n        if (isset($response['token'])) {\n            $this-&gt;token = $response['token'];\n            return $response;\n        } else {\n            throw new Exception('Falha na autentica\u00e7\u00e3o');\n        }\n    }\n\n    public function get($endpoint) {\n        return $this-&gt;makeRequest($endpoint, 'GET');\n    }\n\n    public function post($endpoint, $data) {\n        return $this-&gt;makeRequest($endpoint, 'POST', json_encode($data));\n    }\n\n    public function put($endpoint, $data) {\n        return $this-&gt;makeRequest($endpoint, 'PUT', json_encode($data));\n    }\n\n    public function delete($endpoint) {\n        return $this-&gt;makeRequest($endpoint, 'DELETE');\n    }\n\n    private function makeRequest($endpoint, $method, $data = null) {\n        $url = $this-&gt;baseUrl . $endpoint;\n\n        $headers = [\n            'Content-Type: application/json'\n        ];\n\n        if ($this-&gt;token) {\n            $headers[] = 'Authorization: Token ' . $this-&gt;token;\n        }\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, $method);\n\n        if ($data) {\n            curl_setopt($ch, CURLOPT_POSTFIELDS, $data);\n        }\n\n        $response = curl_exec($ch);\n        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n        curl_close($ch);\n\n        if ($httpCode &gt;= 400) {\n            throw new Exception('Erro HTTP: ' . $httpCode);\n        }\n\n        return json_decode($response, true);\n    }\n}\n\n// Uso\n$api = new NioChatAPI('http://localhost:8010');\n\ntry {\n    $auth = $api-&gt;login('usuario', 'senha');\n    echo \"Token: \" . $auth['token'] . \"\\n\";\n\n    $conversations = $api-&gt;get('/api/conversations/');\n    echo \"Conversas: \" . json_encode($conversations) . \"\\n\";\n} catch (Exception $e) {\n    echo \"Erro: \" . $e-&gt;getMessage() . \"\\n\";\n}\n?&gt;\n</code></pre>"},{"location":"api/authentication/#tratamento-de-erros","title":"Tratamento de Erros","text":""},{"location":"api/authentication/#codigos-de-status-http","title":"C\u00f3digos de Status HTTP","text":""},{"location":"api/authentication/#401-nao-autorizado","title":"401 - N\u00e3o Autorizado","text":"<pre><code>{\n  \"error\": \"AuthenticationError\",\n  \"message\": \"Token inv\u00e1lido ou expirado\"\n}\n</code></pre>"},{"location":"api/authentication/#403-proibido","title":"403 - Proibido","text":"<pre><code>{\n  \"error\": \"PermissionError\",\n  \"message\": \"Voc\u00ea n\u00e3o tem permiss\u00e3o para esta a\u00e7\u00e3o\"\n}\n</code></pre>"},{"location":"api/authentication/#400-requisicao-invalida","title":"400 - Requisi\u00e7\u00e3o Inv\u00e1lida","text":"<pre><code>{\n  \"error\": \"ValidationError\",\n  \"message\": \"Dados inv\u00e1lidos\",\n  \"details\": {\n    \"username\": [\"Este campo \u00e9 obrigat\u00f3rio\"],\n    \"password\": [\"Este campo \u00e9 obrigat\u00f3rio\"]\n  }\n}\n</code></pre>"},{"location":"api/authentication/#implementacao-de-retry","title":"Implementa\u00e7\u00e3o de Retry","text":"<pre><code>class NioChatAPI {\n  async requestWithRetry(endpoint, options = {}, maxRetries = 3) {\n    for (let i = 0; i &lt; maxRetries; i++) {\n      try {\n        const response = await this.request(endpoint, options);\n        return response;\n      } catch (error) {\n        if (error.message === 'Sess\u00e3o expirada' &amp;&amp; i &lt; maxRetries - 1) {\n          // Tentar fazer login novamente\n          await this.refreshToken();\n          continue;\n        }\n        throw error;\n      }\n    }\n  }\n\n  async refreshToken() {\n    // Implementar l\u00f3gica de refresh do token\n    // ou redirecionar para login\n    this.token = null;\n    window.location.href = '/login';\n  }\n}\n</code></pre>"},{"location":"api/authentication/#seguranca","title":"Seguran\u00e7a","text":""},{"location":"api/authentication/#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ol> <li>Nunca armazene tokens em localStorage em produ\u00e7\u00e3o</li> <li>Use HTTPS em produ\u00e7\u00e3o</li> <li>Implemente timeout de sess\u00e3o</li> <li>Valide tokens no servidor</li> <li>Use tokens com expira\u00e7\u00e3o</li> </ol>"},{"location":"api/authentication/#exemplo-de-armazenamento-seguro","title":"Exemplo de Armazenamento Seguro","text":"<pre><code>class SecureTokenStorage {\n  static setToken(token) {\n    // Em produ\u00e7\u00e3o, use httpOnly cookies\n    if (process.env.NODE_ENV === 'production') {\n      // Implementar com cookies httpOnly\n      document.cookie = `niochat_token=${token}; path=/; secure; httpOnly`;\n    } else {\n      // Em desenvolvimento, use sessionStorage\n      sessionStorage.setItem('niochat_token', token);\n    }\n  }\n\n  static getToken() {\n    if (process.env.NODE_ENV === 'production') {\n      // Ler de cookies\n      const cookies = document.cookie.split(';');\n      const tokenCookie = cookies.find(cookie =&gt; \n        cookie.trim().startsWith('niochat_token=')\n      );\n      return tokenCookie ? tokenCookie.split('=')[1] : null;\n    } else {\n      return sessionStorage.getItem('niochat_token');\n    }\n  }\n\n  static removeToken() {\n    if (process.env.NODE_ENV === 'production') {\n      document.cookie = 'niochat_token=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT';\n    } else {\n      sessionStorage.removeItem('niochat_token');\n    }\n  }\n}\n</code></pre>"},{"location":"api/authentication/#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<ol> <li>Endpoints - Explore todos os endpoints da API</li> <li>WebSocket - Aprenda sobre WebSocket</li> <li>Webhooks - Aprenda sobre webhooks</li> </ol>"},{"location":"api/endpoints/","title":"Endpoints da API","text":"<p>O NioChat oferece uma API REST completa para integra\u00e7\u00e3o e automa\u00e7\u00e3o. Esta se\u00e7\u00e3o documenta todos os endpoints dispon\u00edveis.</p>"},{"location":"api/endpoints/#autenticacao","title":"Autentica\u00e7\u00e3o","text":""},{"location":"api/endpoints/#login","title":"Login","text":"<pre><code>POST /api/auth/login/\nContent-Type: application/json\n\n{\n  \"username\": \"usuario\",\n  \"password\": \"senha\"\n}\n</code></pre> <p>Resposta:</p> <pre><code>{\n  \"token\": \"afe94c2006465105312e24043b859e5c0628aadf\"\n}\n</code></pre> <p>Nota: A API retorna apenas o token. Para obter dados do usu\u00e1rio, use <code>/api/auth/me/</code> ap\u00f3s o login.</p>"},{"location":"api/endpoints/#logout","title":"Logout","text":"<pre><code>POST /api/auth/logout/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#informacoes-do-usuario","title":"Informa\u00e7\u00f5es do Usu\u00e1rio","text":"<pre><code>GET /api/auth/me/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre> <p>Resposta:</p> <pre><code>{\n    \"id\": 3,\n    \"username\": \"niochat\",\n    \"email\": \"contatofinnybot@gmail.com.br\",\n    \"first_name\": \"Nio\",\n    \"last_name\": \"chat\",\n    \"provedor_id\": 1,\n    \"user_type\": \"admin\",\n    \"permissions\": [],\n    \"sound_notifications_enabled\": true,\n    \"new_message_sound\": \"message_in_02.mp3\",\n    \"new_conversation_sound\": \"chat_new_08.mp3\",\n    \"session_timeout\": 60\n}\n</code></pre>"},{"location":"api/endpoints/#timeout-de-sessao","title":"Timeout de Sess\u00e3o","text":"<pre><code>POST /api/auth/session-timeout/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"timeout\": 60\n}\n</code></pre> <p>Resposta de Sucesso:</p> <pre><code>{\n  \"message\": \"Timeout da sess\u00e3o atualizado com sucesso\",\n  \"session_timeout\": 60\n}\n</code></pre> <p>Resposta de Erro:</p> <pre><code>{\n  \"error\": \"Timeout da sess\u00e3o n\u00e3o fornecido\"\n}\n</code></pre>"},{"location":"api/endpoints/#contatos","title":"Contatos","text":""},{"location":"api/endpoints/#listar-contatos","title":"Listar Contatos","text":"<pre><code>GET /api/contacts/\nAuthorization: Token afe94c2006465105312e24043b859e5c0628aadf\n</code></pre> <p>Resposta:</p> <pre><code>{\n  \"count\": 2,\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"name\": \"Jo\u00e3o Silva\",\n      \"phone\": \"11999999999\",\n      \"avatar\": \"https://example.com/avatar1.jpg\",\n      \"inbox\": 1,\n      \"created_at\": \"2025-10-11T19:55:34.775872-03:00\",\n      \"updated_at\": \"2025-10-11T20:06:34.300428-03:00\",\n      \"is_online\": false,\n      \"last_seen\": null,\n      \"conversation_count\": 1,\n      \"unread_messages\": 0\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Maria Santos\",\n      \"phone\": \"11988888888\",\n      \"avatar\": \"https://example.com/avatar2.jpg\",\n      \"inbox\": 1,\n      \"created_at\": \"2025-10-11T20:04:40.459828-03:00\",\n      \"updated_at\": \"2025-10-11T20:06:34.300428-03:00\",\n      \"is_online\": true,\n      \"last_seen\": \"2025-10-11T20:30:00.000000-03:00\",\n      \"conversation_count\": 2,\n      \"unread_messages\": 1\n    }\n  ]\n}\n</code></pre>"},{"location":"api/endpoints/#detalhes-do-contato","title":"Detalhes do Contato","text":"<pre><code>GET /api/contacts/{id}/\nAuthorization: Token afe94c2006465105312e24043b859e5c0628aadf\n</code></pre>"},{"location":"api/endpoints/#criar-contato","title":"Criar Contato","text":"<pre><code>POST /api/contacts/\nAuthorization: Token afe94c2006465105312e24043b859e5c0628aadf\nContent-Type: application/json\n\n{\n  \"name\": \"Jo\u00e3o Silva\",\n  \"phone\": \"11999999999\",\n  \"email\": \"joao@exemplo.com\",\n  \"provedor\": 1\n}\n</code></pre> <p>Resposta:</p> <pre><code>{\n  \"id\": 14,\n  \"name\": \"Jo\u00e3o Silva\",\n  \"email\": \"joao@exemplo.com\",\n  \"phone\": \"11999999999\",\n  \"avatar\": null,\n  \"additional_attributes\": {},\n  \"provedor\": 1,\n  \"created_at\": \"2025-10-12T00:26:47.361663-03:00\",\n  \"updated_at\": \"2025-10-12T00:26:47.361663-03:00\"\n}\n</code></pre> <p>Campos Obrigat\u00f3rios: - <code>name</code>: Nome do contato - <code>phone</code>: Telefone do contato - <code>provedor</code>: ID do provedor (ex: 1)</p> <p>Campos Opcionais: - <code>email</code>: Email do contato</p> <p>Resposta de Sucesso:</p> <pre><code>{\n  \"id\": 3,\n  \"name\": \"Jo\u00e3o Silva\",\n  \"phone\": \"+5511999999999\",\n  \"email\": \"joao@exemplo.com\",\n  \"avatar\": null,\n  \"inbox\": 1,\n  \"created_at\": \"2025-10-12T00:21:00.000000-03:00\",\n  \"updated_at\": \"2025-10-12T00:21:00.000000-03:00\",\n  \"is_online\": false,\n  \"last_seen\": null,\n  \"conversation_count\": 0,\n  \"unread_messages\": 0\n}\n</code></pre>"},{"location":"api/endpoints/#conversas","title":"Conversas","text":""},{"location":"api/endpoints/#listar-conversas","title":"Listar Conversas","text":"<pre><code>GET /api/conversations/\nAuthorization: Token afe94c2006465105312e24043b859e5c0628aadf\n</code></pre> <p>Par\u00e2metros de Query: - <code>search</code>: Busca por nome ou telefone - <code>page</code>: N\u00famero da p\u00e1gina - <code>page_size</code>: Tamanho da p\u00e1gina</p> <p>Resposta:</p> <pre><code>{\n  \"count\": 2,\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": 12,\n      \"name\": \"Minha Vida \ud83d\ude0d\",\n      \"email\": null,\n      \"phone\": \"556392484773\",\n      \"avatar\": \"https://pps.whatsapp.net/v/t61.24694-24/559942536_2260568477780892_429171894518858519_n.jpg?ccb=11-4&amp;oh=01_Q5Aa2wGmst6l_wRLC1bGQRObsbi7pf4k7e6Svu24z3ZtDcGe7Q&amp;oe=68F2ACE8&amp;_nc_sid=5e03e0&amp;_nc_cat=103\",\n      \"additional_attributes\": {\n        \"event\": \"messages\",\n        \"chatid\": \"556392484773@s.whatsapp.net\",\n        \"instance\": \"11999999999\",\n        \"sender_lid\": \"249666566365270@lid\"\n      },\n      \"provedor\": 1,\n      \"created_at\": \"2025-10-11T19:55:34.010282-03:00\",\n      \"updated_at\": \"2025-10-11T19:57:59.568844-03:00\",\n      \"inbox\": {\n        \"id\": 1,\n        \"name\": \"WhatsApp 11999999999\",\n        \"channel_type\": \"whatsapp\",\n        \"provedor\": 1,\n        \"is_active\": true,\n        \"created_at\": \"2025-09-17T23:01:58.067397-03:00\"\n      }\n    },\n    {\n      \"id\": 13,\n      \"name\": \"Minha Vida \u2764\ufe0f\ud83d\ude0d\",\n      \"email\": null,\n      \"phone\": \"559491561248\",\n      \"avatar\": \"https://pps.whatsapp.net/v/t61.24694-24/564320629_4141239932761672_4017937049576898413_n.jpg?ccb=11-4&amp;oh=01_Q5Aa2wG7KvYDF5uxK2lrwVrQsCcnNxuVJ8w5W_8Ty4F0LxcZRw&amp;oe=68F7DAB1&amp;_nc_sid=5e03e0&amp;_nc_cat=109\",\n      \"additional_attributes\": {\n        \"event\": \"messages\",\n        \"chatid\": \"559491561248@s.whatsapp.net\",\n        \"instance\": \"11999999999\",\n        \"sender_lid\": \"141880620785739@lid\"\n      },\n      \"provedor\": 1,\n      \"created_at\": \"2025-10-11T20:04:39.896621-03:00\",\n      \"updated_at\": \"2025-10-11T20:06:31.952866-03:00\",\n      \"inbox\": {\n        \"id\": 1,\n        \"name\": \"WhatsApp 11999999999\",\n        \"channel_type\": \"whatsapp\",\n        \"provedor\": 1,\n        \"is_active\": true,\n        \"created_at\": \"2025-09-17T23:01:58.067397-03:00\"\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"api/endpoints/#detalhes-do-contato_1","title":"Detalhes do Contato","text":"<pre><code>GET /api/contacts/{id}/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#atualizar-contato","title":"Atualizar Contato","text":"<pre><code>PUT /api/contacts/{id}/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"name\": \"Jo\u00e3o Silva Atualizado\",\n  \"phone\": \"+5511999999999\"\n}\n</code></pre>"},{"location":"api/endpoints/#inboxes","title":"Inboxes","text":""},{"location":"api/endpoints/#listar-inboxes","title":"Listar Inboxes","text":"<pre><code>GET /api/inboxes/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#detalhes-da-inbox","title":"Detalhes da Inbox","text":"<pre><code>GET /api/inboxes/{id}/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#criar-inbox","title":"Criar Inbox","text":"<pre><code>POST /api/inboxes/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"name\": \"WhatsApp Business\",\n  \"channel\": 1,\n  \"provedor\": 1\n}\n</code></pre>"},{"location":"api/endpoints/#conversas_1","title":"Conversas","text":""},{"location":"api/endpoints/#listar-conversas_1","title":"Listar Conversas","text":"<pre><code>GET /api/conversations/\nAuthorization: Token afe94c2006465105312e24043b859e5c0628aadf\n</code></pre> <p>Resposta:</p> <pre><code>{\n  \"count\": 1,\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": 13,\n      \"contact\": {\n        \"id\": 13,\n        \"name\": \"Minha Vida \u2764\ufe0f\ud83d\ude0d\",\n        \"email\": null,\n        \"phone\": \"559491561248\",\n        \"avatar\": \"https://pps.whatsapp.net/v/t61.24694-24/564320629_4141239932761672_4017937049576898413_n.jpg?ccb=11-4&amp;oh=01_Q5Aa2wG7KvYDF5uxK2lrwVrQsCcnNxuVJ8w5W_8Ty4F0LxcZRw&amp;oe=68F7DAB1&amp;_nc_sid=5e03e0&amp;_nc_cat=109\",\n        \"additional_attributes\": {\n          \"event\": \"messages\",\n          \"chatid\": \"559491561248@s.whatsapp.net\",\n          \"instance\": \"11999999999\",\n          \"sender_lid\": \"141880620785739@lid\"\n        },\n        \"provedor\": 1,\n        \"created_at\": \"2025-10-11T20:04:39.896621-03:00\",\n        \"updated_at\": \"2025-10-11T20:06:31.952866-03:00\",\n        \"inbox\": {\n          \"id\": 1,\n          \"name\": \"WhatsApp 11999999999\",\n          \"channel_type\": \"whatsapp\",\n          \"provedor\": 1,\n          \"is_active\": true,\n          \"created_at\": \"2025-09-17T23:01:58.067397-03:00\"\n        }\n      },\n      \"inbox\": {\n        \"id\": 1,\n        \"name\": \"WhatsApp 11999999999\",\n        \"channel_type\": \"whatsapp\",\n        \"provedor\": 1,\n        \"is_active\": true,\n        \"created_at\": \"2025-09-17T23:01:58.067397-03:00\"\n      },\n      \"assignee\": null,\n      \"status\": \"snoozed\",\n      \"additional_attributes\": {\n        \"event\": \"messages\",\n        \"instance\": \"559484024089\"\n      },\n      \"last_message_at\": null,\n      \"created_at\": \"2025-10-11T20:04:40.407433-03:00\",\n      \"last_message\": {\n        \"id\": 240,\n        \"conversation\": 13,\n        \"message_type\": \"outgoing\",\n        \"media_type\": \"outgoing\",\n        \"file_url\": null,\n        \"content\": \"Atendimento encerrado. Agradecemos o seu contato, senhor Rog\u00e9rio. \\n\\nTenha uma excelente noite! \ud83d\ude0a\",\n        \"is_from_customer\": false,\n        \"created_at\": \"2025-10-11T20:06:34.300428-03:00\",\n        \"external_id\": \"559484024089:3EB01FEB66F1A4B05DB145\",\n        \"additional_attributes\": {\n          \"event\": \"messages\",\n          \"instance\": \"559484024089\"\n        }\n      }\n    }\n  ]\n}\n</code></pre> <p>Par\u00e2metros de Query: - <code>status</code>: open, closed, pending - <code>assignee</code>: ID do agente - <code>team</code>: ID da equipe - <code>search</code>: Busca por texto - <code>page</code>: N\u00famero da p\u00e1gina - <code>page_size</code>: Tamanho da p\u00e1gina</p> <p>Resposta:</p> <pre><code>{\n  \"count\": 100,\n  \"next\": \"http://localhost:8010/api/conversations/?page=2\",\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"contact\": {\n        \"id\": 1,\n        \"name\": \"Jo\u00e3o Silva\",\n        \"phone\": \"+5511999999999\",\n        \"profile_picture\": \"https://example.com/photo.jpg\"\n      },\n      \"status\": \"open\",\n      \"assignee\": {\n        \"id\": 1,\n        \"username\": \"agente1\",\n        \"first_name\": \"Agente\"\n      },\n      \"team\": {\n        \"id\": 1,\n        \"name\": \"Suporte\"\n      },\n      \"last_message\": {\n        \"id\": 1,\n        \"content\": \"Ol\u00e1, como posso ajudar?\",\n        \"timestamp\": \"2024-01-01T10:00:00Z\"\n      },\n      \"created_at\": \"2024-01-01T09:00:00Z\",\n      \"updated_at\": \"2024-01-01T10:00:00Z\"\n    }\n  ]\n}\n</code></pre>"},{"location":"api/endpoints/#detalhes-da-conversa","title":"Detalhes da Conversa","text":"<pre><code>GET /api/conversations/{id}/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#atribuir-conversa","title":"Atribuir Conversa","text":"<pre><code>POST /api/conversations/{id}/assign/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"user_id\": 1\n}\n</code></pre> <p>Resposta:</p> <pre><code>{\n  \"success\": true,\n  \"message\": \"Conversa atribu\u00edda para Agente\",\n  \"conversation\": {\n    \"id\": 1,\n    \"assignee\": {\n      \"id\": 1,\n      \"username\": \"agente1\",\n      \"first_name\": \"Agente\"\n    },\n    \"status\": \"open\"\n  }\n}\n</code></pre>"},{"location":"api/endpoints/#transferir-para-agente","title":"Transferir para Agente","text":"<pre><code>POST /api/conversations/{id}/transfer/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"user_id\": 2\n}\n</code></pre>"},{"location":"api/endpoints/#transferir-para-equipe","title":"Transferir para Equipe","text":"<pre><code>POST /api/conversations/{id}/transfer_to_team/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"team_id\": 1,\n  \"team_name\": \"SUPORTE T\u00c9CNICO\"\n}\n</code></pre> <p>Resposta:</p> <pre><code>{\n  \"success\": true,\n  \"message\": \"Conversa transferida para equipe SUPORTE T\u00c9CNICO\",\n  \"conversation\": {\n    \"id\": 1,\n    \"status\": \"pending\",\n    \"assignee\": null,\n    \"team\": \"SUPORTE T\u00c9CNICO\"\n  }\n}\n</code></pre>"},{"location":"api/endpoints/#fechar-conversa","title":"Fechar Conversa","text":"<pre><code>POST /api/conversations/{id}/close/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#reabrir-conversa","title":"Reabrir Conversa","text":"<pre><code>POST /api/conversations/{id}/reopen/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#estatisticas-de-recuperacao","title":"Estat\u00edsticas de Recupera\u00e7\u00e3o","text":"<pre><code>GET /api/recovery/stats/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#configuracoes-de-recuperacao","title":"Configura\u00e7\u00f5es de Recupera\u00e7\u00e3o","text":"<pre><code>POST /api/recovery/settings/{provedor_id}/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"enabled\": true,\n  \"auto_recovery\": true,\n  \"recovery_interval\": 30\n}\n</code></pre>"},{"location":"api/endpoints/#mensagens","title":"Mensagens","text":""},{"location":"api/endpoints/#listar-mensagens","title":"Listar Mensagens","text":"<pre><code>GET /api/messages/\nAuthorization: Token afe94c2006465105312e24043b859e5c0628aadf\n</code></pre> <p>Resposta:</p> <pre><code>{\n  \"count\": 23,\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": 218,\n      \"conversation\": 12,\n      \"message_type\": \"incoming\",\n      \"media_type\": \"incoming\",\n      \"file_url\": null,\n      \"content\": \"Ola\",\n      \"is_from_customer\": true,\n      \"created_at\": \"2025-10-11T19:55:34.775872-03:00\",\n        \"external_id\": \"11999999999:ABC123DEF456\",\n      \"additional_attributes\": {\n        \"external_id\": \"559484024089:3EB057A8C58547E3401498\"\n      }\n    },\n    {\n      \"id\": 219,\n      \"conversation\": 12,\n      \"message_type\": \"outgoing\",\n      \"media_type\": \"outgoing\",\n      \"file_url\": null,\n      \"content\": \"Boa noite! Voc\u00ea j\u00e1 \u00e9 cliente da NIO NET ou deseja conhecer nossos planos?\",\n      \"is_from_customer\": false,\n      \"created_at\": \"2025-10-11T19:55:38.094792-03:00\",\n        \"external_id\": \"11999999999:DEF456GHI789\",\n      \"additional_attributes\": {}\n    }\n  ]\n}\n</code></pre> <p>Par\u00e2metros de Query: - <code>conversation</code>: ID da conversa - <code>page</code>: N\u00famero da p\u00e1gina - <code>page_size</code>: Tamanho da p\u00e1gina</p>"},{"location":"api/endpoints/#detalhes-da-mensagem","title":"Detalhes da Mensagem","text":"<pre><code>GET /api/messages/{id}/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#enviar-texto","title":"Enviar Texto","text":"<pre><code>POST /api/messages/send_text/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"conversation_id\": 1,\n  \"content\": \"Ol\u00e1, como posso ajudar?\"\n}\n</code></pre>"},{"location":"api/endpoints/#enviar-midia","title":"Enviar M\u00eddia","text":"<pre><code>POST /api/messages/send_media/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: multipart/form-data\n\n{\n  \"conversation_id\": 1,\n  \"file\": [arquivo],\n  \"message_type\": \"image\"\n}\n</code></pre>"},{"location":"api/endpoints/#reagir-a-mensagem","title":"Reagir a Mensagem","text":"<pre><code>POST /api/messages/react/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"message_id\": 1,\n  \"reaction\": \"\ud83d\udc4d\"\n}\n</code></pre>"},{"location":"api/endpoints/#deletar-mensagem","title":"Deletar Mensagem","text":"<pre><code>POST /api/messages/delete_message/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"message_id\": 1\n}\n</code></pre>"},{"location":"api/endpoints/#servir-arquivo-de-midia","title":"Servir Arquivo de M\u00eddia","text":"<pre><code>GET /api/media/messages/{conversation_id}/{filename}/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#equipes","title":"Equipes","text":""},{"location":"api/endpoints/#listar-equipes","title":"Listar Equipes","text":"<pre><code>GET /api/teams/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#detalhes-da-equipe","title":"Detalhes da Equipe","text":"<pre><code>GET /api/teams/{id}/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#criar-equipe","title":"Criar Equipe","text":"<pre><code>POST /api/teams/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"name\": \"Suporte T\u00e9cnico\",\n  \"description\": \"Equipe de suporte t\u00e9cnico\",\n  \"provedor\": 1\n}\n</code></pre>"},{"location":"api/endpoints/#membros-da-equipe","title":"Membros da Equipe","text":"<pre><code>GET /api/team-members/?team={id}\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#adicionar-membro-a-equipe","title":"Adicionar Membro \u00e0 Equipe","text":"<pre><code>POST /api/team-members/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"team\": 1,\n  \"user\": 2\n}\n</code></pre>"},{"location":"api/endpoints/#chat-interno","title":"Chat Interno","text":""},{"location":"api/endpoints/#salas-de-chat","title":"Salas de Chat","text":"<pre><code>GET /api/internal-chat/rooms/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#criar-sala-de-chat","title":"Criar Sala de Chat","text":"<pre><code>POST /api/internal-chat/rooms/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"name\": \"Sala de Suporte\",\n  \"description\": \"Sala para discuss\u00f5es de suporte\"\n}\n</code></pre>"},{"location":"api/endpoints/#mensagens-do-chat-interno","title":"Mensagens do Chat Interno","text":"<pre><code>GET /api/internal-chat/messages/?room={id}\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#enviar-mensagem-no-chat-interno","title":"Enviar Mensagem no Chat Interno","text":"<pre><code>POST /api/internal-chat/messages/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"room\": 1,\n  \"content\": \"Mensagem interna\"\n}\n</code></pre>"},{"location":"api/endpoints/#participantes-da-sala","title":"Participantes da Sala","text":"<pre><code>GET /api/internal-chat/participants/?room={id}\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#adicionar-participante","title":"Adicionar Participante","text":"<pre><code>POST /api/internal-chat/participants/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"room\": 1,\n  \"user\": 2\n}\n</code></pre>"},{"location":"api/endpoints/#contagem-de-mensagens-nao-lidas-chat-interno","title":"Contagem de Mensagens N\u00e3o Lidas (Chat Interno)","text":"<pre><code>GET /api/internal-chat-unread-count/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#mensagens-nao-lidas-por-usuario-chat-interno","title":"Mensagens N\u00e3o Lidas por Usu\u00e1rio (Chat Interno)","text":"<pre><code>GET /api/internal-chat-unread-by-user/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#chat-privado","title":"Chat Privado","text":""},{"location":"api/endpoints/#mensagens-privadas","title":"Mensagens Privadas","text":"<pre><code>GET /api/private-messages/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#enviar-mensagem-privada","title":"Enviar Mensagem Privada","text":"<pre><code>POST /api/private-messages/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"recipient\": 2,\n  \"content\": \"Mensagem privada\"\n}\n</code></pre>"},{"location":"api/endpoints/#contagem-de-mensagens-nao-lidas-chat-privado","title":"Contagem de Mensagens N\u00e3o Lidas (Chat Privado)","text":"<pre><code>GET /api/private-unread-counts/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#csat-customer-satisfaction","title":"CSAT (Customer Satisfaction)","text":""},{"location":"api/endpoints/#feedbacks-csat","title":"Feedbacks CSAT","text":"<pre><code>GET /api/csat/feedbacks/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#estatisticas-csat","title":"Estat\u00edsticas CSAT","text":"<pre><code>GET /api/csat/feedbacks/stats/\nAuthorization: Token afe94c2006465105312e24043b859e5c0628aadf\n</code></pre> <p>Resposta:</p> <pre><code>{\n  \"total_feedbacks\": 0,\n  \"average_rating\": 0,\n  \"satisfaction_rate\": 0,\n  \"rating_distribution\": [],\n  \"channel_distribution\": [],\n  \"daily_stats\": [\n    {\n      \"day\": \"2025-09-12\",\n      \"count\": 0,\n      \"avg_rating\": 0\n    },\n    {\n      \"day\": \"2025-09-13\",\n      \"count\": 0,\n      \"avg_rating\": 0\n    },\n    {\n      \"day\": \"2025-09-14\",\n      \"count\": 0,\n      \"avg_rating\": 0\n    }\n  ]\n}\n</code></pre> <p>Resposta:</p> <pre><code>{\n  \"total_feedbacks\": 50,\n  \"average_rating\": 4.2,\n  \"rating_distribution\": {\n    \"1\": 2,\n    \"2\": 3,\n    \"3\": 8,\n    \"4\": 15,\n    \"5\": 22\n  },\n  \"recent_feedbacks\": [\n    {\n      \"id\": 1,\n      \"contact_name\": \"Jo\u00e3o Silva\",\n      \"contact_photo\": \"https://example.com/photo.jpg\",\n      \"emoji_rating\": \"\ud83e\udd29\",\n      \"rating_value\": 5,\n      \"original_message\": \"Excelente atendimento!\",\n      \"feedback_sent_at\": \"2024-01-01T10:00:00Z\"\n    }\n  ]\n}\n</code></pre>"},{"location":"api/endpoints/#solicitacoes-csat","title":"Solicita\u00e7\u00f5es CSAT","text":"<pre><code>GET /api/csat/requests/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#webhook-csat","title":"Webhook CSAT","text":"<pre><code>POST /api/csat/webhook/\nContent-Type: application/json\n\n{\n  \"conversation_id\": 1,\n  \"rating\": 5,\n  \"feedback\": \"Excelente atendimento!\"\n}\n</code></pre>"},{"location":"api/endpoints/#dashboard","title":"Dashboard","text":""},{"location":"api/endpoints/#estatisticas-do-dashboard","title":"Estat\u00edsticas do Dashboard","text":"<pre><code>GET /api/dashboard/stats/\nAuthorization: Token afe94c2006465105312e24043b859e5c0628aadf\n</code></pre> <p>Resposta:</p> <pre><code>{\n  \"total_conversas\": 2,\n  \"conversas_abertas\": 0,\n  \"conversas_pendentes\": 0,\n  \"conversas_resolvidas\": 1,\n  \"conversas_em_andamento\": 0,\n  \"contatos_unicos\": 2,\n  \"mensagens_30_dias\": 23,\n  \"tempo_medio_resposta\": \"0min\",\n  \"tempo_primeira_resposta\": \"1.2min\",\n  \"taxa_resolucao\": \"50%\",\n  \"satisfacao_media\": \"4.4\",\n  \"canais\": [\n    {\n      \"inbox__channel_type\": \"whatsapp\",\n      \"total\": 2\n    }\n  ],\n  \"atendentes\": [\n    {\n      \"name\": \"amanda\",\n      \"conversations\": 0,\n      \"satisfaction\": 4.5\n    },\n    {\n      \"name\": \"Nio chat\",\n      \"conversations\": 0,\n      \"satisfaction\": 4.5\n    }\n  ],\n  \"atividades\": [\n    {\n      \"action\": \"conversation_closed_agent\",\n      \"user\": \"niochat\",\n      \"time\": \"11/10/2025 22:58\",\n      \"type\": \"activity\"\n    },\n    {\n      \"action\": \"conversation_closed_agent\",\n      \"user\": \"niochat\",\n      \"time\": \"11/10/2025 22:50\",\n      \"type\": \"activity\"\n    }\n  ]\n}\n</code></pre>"},{"location":"api/endpoints/#estatisticas-de-conversas","title":"Estat\u00edsticas de Conversas","text":"<pre><code>GET /api/dashboard-stats/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#tempo-de-resposta-por-hora","title":"Tempo de Resposta por Hora","text":"<pre><code>GET /api/dashboard/response-time-hourly/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#analise-de-conversas","title":"An\u00e1lise de Conversas","text":"<pre><code>GET /api/analysis/\nAuthorization: Token afe94c2006465105312e24043b859e5c0628aadf\n</code></pre> <p>Resposta:</p> <pre><code>{\n  \"period\": \"week\",\n  \"date_range\": {\n    \"start\": \"2025-10-05\",\n    \"end\": \"2025-10-12\"\n  },\n  \"summary\": {\n    \"totalConversations\": 2,\n    \"avgResponseTime\": \"2.1min\",\n    \"activeAgents\": 0,\n    \"satisfactionRate\": \"0.0\"\n  },\n  \"conversationsByDay\": [\n    {\n      \"date\": \"06/10\",\n      \"conversations\": 0\n    },\n    {\n      \"date\": \"07/10\",\n      \"conversations\": 0\n    },\n    {\n      \"date\": \"08/10\",\n      \"conversations\": 0\n    },\n    {\n      \"date\": \"09/10\",\n      \"conversations\": 0\n    },\n    {\n      \"date\": \"10/10\",\n      \"conversations\": 0\n    },\n    {\n      \"date\": \"11/10\",\n      \"conversations\": 0\n    },\n    {\n      \"date\": \"12/10\",\n      \"conversations\": 0\n    }\n  ],\n  \"channels\": [\n    {\n      \"channel\": \"whatsapp\",\n      \"conversations\": 2\n    }\n  ]\n}\n</code></pre>"},{"location":"api/endpoints/#teste-de-analise","title":"Teste de An\u00e1lise","text":"<pre><code>GET /api/test-analysis/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#ia-e-sgp","title":"IA e SGP","text":""},{"location":"api/endpoints/#processar-com-ia","title":"Processar com IA","text":"<pre><code>POST /api/atendimento/ia/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nContent-Type: application/json\n\n{\n  \"conversation_id\": 1,\n  \"message\": \"Quero pagar minha fatura\"\n}\n</code></pre> <p>Resposta:</p> <pre><code>{\n  \"response\": \"Para gerar sua fatura, preciso do seu CPF.\",\n  \"function_calls\": [],\n  \"needs_input\": true\n}\n</code></pre>"},{"location":"api/endpoints/#function-calls-sgp","title":"Function Calls SGP","text":"<p>A IA executa automaticamente as seguintes fun\u00e7\u00f5es:</p>"},{"location":"api/endpoints/#consultar-cliente","title":"Consultar Cliente","text":"<pre><code>{\n  \"name\": \"consultar_cliente_sgp\",\n  \"parameters\": {\n    \"cpf_cnpj\": \"123.456.789-00\"\n  }\n}\n</code></pre>"},{"location":"api/endpoints/#verificar-acesso","title":"Verificar Acesso","text":"<pre><code>{\n  \"name\": \"verificar_acesso_sgp\",\n  \"parameters\": {\n    \"contrato\": \"12345\"\n  }\n}\n</code></pre>"},{"location":"api/endpoints/#gerar-fatura","title":"Gerar Fatura","text":"<pre><code>{\n  \"name\": \"gerar_fatura_completa\",\n  \"parameters\": {\n    \"contrato\": \"12345\"\n  }\n}\n</code></pre>"},{"location":"api/endpoints/#criar-chamado-tecnico","title":"Criar Chamado T\u00e9cnico","text":"<pre><code>{\n  \"name\": \"criar_chamado_tecnico\",\n  \"parameters\": {\n    \"cpf_cnpj\": \"123.456.789-00\",\n    \"motivo\": \"Sem internet\",\n    \"sintomas\": \"LED vermelho piscando\"\n  }\n}\n</code></pre>"},{"location":"api/endpoints/#integracoes","title":"Integra\u00e7\u00f5es","text":""},{"location":"api/endpoints/#whatsapp","title":"WhatsApp","text":"<pre><code>GET /api/integrations/whatsapp/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#telegram","title":"Telegram","text":"<pre><code>GET /api/integrations/telegram/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#email","title":"Email","text":"<pre><code>GET /api/integrations/email/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#webchat","title":"Webchat","text":"<pre><code>GET /api/integrations/webchat/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#auditoria","title":"Auditoria","text":""},{"location":"api/endpoints/#logs-de-auditoria","title":"Logs de Auditoria","text":"<pre><code>GET /api/audit-logs/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre> <p>Par\u00e2metros de Query: - <code>action</code>: Tipo de a\u00e7\u00e3o - <code>user_id</code>: ID do usu\u00e1rio - <code>date_from</code>: Data inicial - <code>date_to</code>: Data final - <code>page</code>: N\u00famero da p\u00e1gina</p> <p>Resposta:</p> <pre><code>{\n  \"count\": 1000,\n  \"next\": \"http://localhost:8010/api/audit-logs/?page=2\",\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"action\": \"conversation_created\",\n      \"details\": {\n        \"conversation_id\": 1,\n        \"contact_name\": \"Jo\u00e3o Silva\"\n      },\n      \"user\": {\n        \"id\": 1,\n        \"username\": \"agente1\"\n      },\n      \"timestamp\": \"2024-01-01T10:00:00Z\"\n    }\n  ]\n}\n</code></pre>"},{"location":"api/endpoints/#webhooks","title":"Webhooks","text":""},{"location":"api/endpoints/#webhook-uazapievolution","title":"Webhook Uazapi/Evolution","text":"<pre><code>POST /webhook/evolution-uazapi/\nContent-Type: application/json\n\n{\n  \"event\": \"message\",\n  \"data\": {\n    \"message\": {\n      \"id\": \"message_id\",\n      \"from\": \"+5511999999999\",\n      \"to\": \"+5511888888888\",\n      \"content\": \"Ol\u00e1, como posso ajudar?\",\n      \"timestamp\": \"2024-01-01T10:00:00Z\"\n    }\n  }\n}\n</code></pre>"},{"location":"api/endpoints/#webhook-evolution-legado","title":"Webhook Evolution (Legado)","text":"<pre><code>POST /webhooks/evolution-uazapi/\nContent-Type: application/json\n\n{\n  \"event\": \"message\",\n  \"data\": {\n    \"message\": {\n      \"id\": \"message_id\",\n      \"from\": \"+5511999999999\",\n      \"to\": \"+5511888888888\",\n      \"content\": \"Ol\u00e1, como posso ajudar?\",\n      \"timestamp\": \"2024-01-01T10:00:00Z\"\n    }\n  }\n}\n</code></pre>"},{"location":"api/endpoints/#sistema","title":"Sistema","text":""},{"location":"api/endpoints/#health-check","title":"Health Check","text":"<pre><code>GET /api/health/\n</code></pre>"},{"location":"api/endpoints/#changelog","title":"Changelog","text":"<pre><code>GET /api/changelog/\n</code></pre>"},{"location":"api/endpoints/#arquivos-uazapi","title":"Arquivos Uazapi","text":"<pre><code>GET /api/uazapi/file/{file_id}/\nAuthorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/endpoints/#websocket-events","title":"WebSocket Events","text":""},{"location":"api/endpoints/#conexao","title":"Conex\u00e3o","text":"<pre><code>const ws = new WebSocket('ws://localhost:8010/ws/dashboard/');\n\nws.onopen = function(event) {\n    console.log('Conectado ao WebSocket');\n};\n\nws.onmessage = function(event) {\n    const data = JSON.parse(event.data);\n    console.log('Mensagem recebida:', data);\n};\n</code></pre>"},{"location":"api/endpoints/#eventos-disponiveis","title":"Eventos Dispon\u00edveis","text":""},{"location":"api/endpoints/#chat","title":"Chat","text":"<pre><code>// Nova mensagem\n{\n  \"type\": \"chat_message\",\n  \"data\": {\n    \"conversation_id\": 1,\n    \"message\": {\n      \"id\": 1,\n      \"content\": \"Nova mensagem\",\n      \"sender\": \"customer\"\n    }\n  }\n}\n\n// Rea\u00e7\u00e3o a mensagem\n{\n  \"type\": \"message_reaction\",\n  \"data\": {\n    \"message_id\": 1,\n    \"reaction\": \"\ud83d\udc4d\"\n  }\n}\n\n// Mensagem deletada\n{\n  \"type\": \"message_deleted\",\n  \"data\": {\n    \"message_id\": 1\n  }\n}\n</code></pre>"},{"location":"api/endpoints/#dashboard_1","title":"Dashboard","text":"<pre><code>// M\u00e9tricas atualizadas\n{\n  \"type\": \"dashboard_metrics\",\n  \"data\": {\n    \"total_conversations\": 100,\n    \"open_conversations\": 25,\n    \"average_satisfaction\": 4.2\n  }\n}\n\n// CSAT atualizado\n{\n  \"type\": \"csat_update\",\n  \"data\": {\n    \"conversation_id\": 1,\n    \"rating\": 5,\n    \"feedback\": \"Excelente!\"\n  }\n}\n\n// Log de auditoria\n{\n  \"type\": \"audit_log\",\n  \"data\": {\n    \"action\": \"conversation_created\",\n    \"details\": {\n      \"conversation_id\": 1\n    }\n  }\n}\n</code></pre>"},{"location":"api/endpoints/#status-do-usuario","title":"Status do Usu\u00e1rio","text":"<pre><code>// Status online/offline\n{\n  \"type\": \"user_status\",\n  \"data\": {\n    \"user_id\": 1,\n    \"status\": \"online\"\n  }\n}\n</code></pre>"},{"location":"api/endpoints/#autenticacao-websocket","title":"Autentica\u00e7\u00e3o WebSocket","text":"<pre><code>const ws = new WebSocket('ws://localhost:8010/ws/dashboard/?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...');\n</code></pre>"},{"location":"api/endpoints/#codigos-de-status","title":"C\u00f3digos de Status","text":""},{"location":"api/endpoints/#sucesso","title":"Sucesso","text":"<ul> <li>200: OK</li> <li>201: Criado</li> <li>204: Sem conte\u00fado</li> </ul>"},{"location":"api/endpoints/#erro-do-cliente","title":"Erro do Cliente","text":"<ul> <li>400: Requisi\u00e7\u00e3o inv\u00e1lida</li> <li>401: N\u00e3o autorizado</li> <li>403: Proibido</li> <li>404: N\u00e3o encontrado</li> <li>422: Entidade n\u00e3o process\u00e1vel</li> </ul>"},{"location":"api/endpoints/#erro-do-servidor","title":"Erro do Servidor","text":"<ul> <li>500: Erro interno do servidor</li> <li>502: Bad Gateway</li> <li>503: Servi\u00e7o indispon\u00edvel</li> </ul>"},{"location":"api/endpoints/#tratamento-de-erros","title":"Tratamento de Erros","text":""},{"location":"api/endpoints/#formato-de-erro","title":"Formato de Erro","text":"<pre><code>{\n  \"error\": \"ValidationError\",\n  \"message\": \"Dados inv\u00e1lidos\",\n  \"details\": {\n    \"field\": \"conversation_id\",\n    \"message\": \"Este campo \u00e9 obrigat\u00f3rio\"\n  }\n}\n</code></pre>"},{"location":"api/endpoints/#exemplos-de-erro","title":"Exemplos de Erro","text":"<pre><code>{\n  \"error\": \"AuthenticationError\",\n  \"message\": \"Token inv\u00e1lido ou expirado\"\n}\n</code></pre> <pre><code>{\n  \"error\": \"PermissionError\",\n  \"message\": \"Voc\u00ea n\u00e3o tem permiss\u00e3o para esta a\u00e7\u00e3o\"\n}\n</code></pre>"},{"location":"api/endpoints/#guia-do-postman","title":"Guia do Postman","text":"<p>Para facilitar o teste da API, criamos um Guia Completo do Postman com: - Configura\u00e7\u00e3o passo a passo - Solu\u00e7\u00e3o de problemas comuns - Scripts \u00fateis - Collection pronta para importar</p>"},{"location":"api/endpoints/#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<ol> <li>Autentica\u00e7\u00e3o - Aprenda sobre autentica\u00e7\u00e3o</li> <li>Guia do Postman - Configure o Postman</li> <li>WebSocket - Aprenda sobre WebSocket</li> <li>Webhooks - Aprenda sobre webhooks</li> <li>Uso - Aprenda a usar a interface</li> </ol>"},{"location":"api/postman-guide/","title":"Guia de Uso do Postman com NioChat","text":"<p>Este guia explica como configurar e usar o Postman para testar a API do NioChat.</p>"},{"location":"api/postman-guide/#configuracao-inicial","title":"Configura\u00e7\u00e3o Inicial","text":""},{"location":"api/postman-guide/#1-criar-nova-collection","title":"1. Criar Nova Collection","text":"<ol> <li>Abra o Postman</li> <li>Clique em \"New\" \u2192 \"Collection\"</li> <li>Nome: \"NioChat API\"</li> <li>Descri\u00e7\u00e3o: \"API do NioChat - Sistema de Atendimento WhatsApp\"</li> </ol>"},{"location":"api/postman-guide/#2-configurar-variaveis-de-ambiente","title":"2. Configurar Vari\u00e1veis de Ambiente","text":"<ol> <li>Clique em \"Environments\" \u2192 \"Create Environment\"</li> <li>Nome: \"NioChat Local\" ou \"NioChat Production\"</li> <li>Adicione as seguintes vari\u00e1veis:</li> </ol> Variable Initial Value Current Value <code>base_url</code> <code>http://localhost:8010</code> <code>http://localhost:8010</code> <code>token</code> (deixar vazio) (ser\u00e1 preenchido ap\u00f3s login)"},{"location":"api/postman-guide/#autenticacao","title":"Autentica\u00e7\u00e3o","text":""},{"location":"api/postman-guide/#1-endpoint-de-login","title":"1. Endpoint de Login","text":"<p>M\u00e9todo: <code>POST</code> URL: <code>{{base_url}}/api/auth/login/</code> Headers:</p> <pre><code>Content-Type: application/json\n</code></pre> <p>Body (raw JSON):</p> <pre><code>{\n  \"username\": \"seu_usuario\",\n  \"password\": \"sua_senha\"\n}\n</code></pre> <p>Script de Teste (Tests tab):</p> <pre><code>if (pm.response.code === 200) {\n    const response = pm.response.json();\n    pm.environment.set(\"token\", response.token);\n    console.log(\"Token salvo:\", response.token);\n    console.log(\"Resposta completa:\", response);\n} else {\n    console.log(\"Erro no login:\", pm.response.text());\n}\n</code></pre> <p>Resposta Esperada:</p> <pre><code>{\n  \"token\": \"afe94c2006465105312e24043b859e5c0628aadf\"\n}\n</code></pre>"},{"location":"api/postman-guide/#2-configurar-authorization-global","title":"2. Configurar Authorization Global","text":"<ol> <li>V\u00e1 para a aba \"Authorization\" da collection</li> <li>Type: \"Bearer Token\"</li> <li>Token: <code>{{token}}</code></li> </ol> <p>OU configure manualmente em cada request: 1. V\u00e1 para a aba \"Authorization\" do request 2. Type: \"Custom\" 3. Key: <code>Authorization</code> 4. Value: <code>Token {{token}}</code></p>"},{"location":"api/postman-guide/#endpoints-principais","title":"Endpoints Principais","text":""},{"location":"api/postman-guide/#1-listar-contatos","title":"1. Listar Contatos","text":"<p>M\u00e9todo: <code>GET</code> URL: <code>{{base_url}}/api/contacts/</code> Headers:</p> <pre><code>Authorization: Token {{token}}\n</code></pre> <p>Par\u00e2metros de Query (opcionais): - <code>search</code>: Busca por nome ou telefone - <code>page</code>: N\u00famero da p\u00e1gina (padr\u00e3o: 1) - <code>page_size</code>: Tamanho da p\u00e1gina (padr\u00e3o: 20)</p>"},{"location":"api/postman-guide/#2-informacoes-do-usuario","title":"2. Informa\u00e7\u00f5es do Usu\u00e1rio","text":"<p>M\u00e9todo: <code>GET</code> URL: <code>{{base_url}}/api/auth/me/</code> Headers:</p> <pre><code>Authorization: Token {{token}}\n</code></pre> <p>Resposta Esperada:</p> <pre><code>{\n    \"id\": 3,\n    \"username\": \"niochat\",\n    \"email\": \"contatofinnybot@gmail.com.br\",\n    \"first_name\": \"Nio\",\n    \"last_name\": \"chat\",\n    \"provedor_id\": 1,\n    \"user_type\": \"admin\",\n    \"permissions\": [],\n    \"sound_notifications_enabled\": true,\n    \"new_message_sound\": \"message_in_02.mp3\",\n    \"new_conversation_sound\": \"chat_new_08.mp3\",\n    \"session_timeout\": 60\n}\n</code></pre>"},{"location":"api/postman-guide/#3-listar-contatos","title":"3. Listar Contatos","text":"<p>M\u00e9todo: <code>GET</code> URL: <code>{{base_url}}/api/contacts/</code> Headers:</p> <pre><code>Authorization: Token {{token}}\n</code></pre> <p>Resposta Esperada:</p> <pre><code>{\n  \"count\": 2,\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"name\": \"Jo\u00e3o Silva\",\n      \"phone\": \"11999999999\",\n      \"avatar\": \"https://example.com/avatar1.jpg\",\n      \"inbox\": 1,\n      \"created_at\": \"2025-10-11T19:55:34.775872-03:00\",\n      \"updated_at\": \"2025-10-11T20:06:34.300428-03:00\",\n      \"is_online\": false,\n      \"last_seen\": null,\n      \"conversation_count\": 1,\n      \"unread_messages\": 0\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Maria Santos\",\n      \"phone\": \"11988888888\",\n      \"avatar\": \"https://example.com/avatar2.jpg\",\n      \"inbox\": 1,\n      \"created_at\": \"2025-10-11T20:04:40.459828-03:00\",\n      \"updated_at\": \"2025-10-11T20:06:34.300428-03:00\",\n      \"is_online\": false,\n      \"last_seen\": null,\n      \"conversation_count\": 1,\n      \"unread_messages\": 0\n    }\n  ]\n}\n</code></pre>"},{"location":"api/postman-guide/#4-detalhes-do-contato","title":"4. Detalhes do Contato","text":"<p>M\u00e9todo: <code>GET</code> URL: <code>{{base_url}}/api/contacts/{id}/</code> Headers:</p> <pre><code>Authorization: Token {{token}}\n</code></pre>"},{"location":"api/postman-guide/#5-criar-contato","title":"5. Criar Contato","text":"<p>M\u00e9todo: <code>POST</code> URL: <code>{{base_url}}/api/contacts/</code> Headers:</p> <pre><code>Authorization: Token {{token}}\nContent-Type: application/json\n</code></pre> <p>Body (raw JSON):</p> <pre><code>{\n  \"name\": \"Jo\u00e3o Silva\",\n  \"phone\": \"11999999999\",\n  \"email\": \"joao@exemplo.com\"\n}\n</code></pre>"},{"location":"api/postman-guide/#6-listar-conversas","title":"6. Listar Conversas","text":"<p>M\u00e9todo: <code>GET</code> URL: <code>{{base_url}}/api/conversations/</code> Headers:</p> <pre><code>Authorization: Token {{token}}\n</code></pre>"},{"location":"api/postman-guide/#7-timeout-de-sessao","title":"7. Timeout de Sess\u00e3o","text":"<p>M\u00e9todo: <code>POST</code> URL: <code>{{base_url}}/api/auth/session-timeout/</code> Headers:</p> <pre><code>Authorization: Token {{token}}\nContent-Type: application/json\n</code></pre> <p>Body (raw JSON):</p> <pre><code>{\n  \"timeout\": 60\n}\n</code></pre> <p>Resposta Esperada:</p> <pre><code>{\n  \"message\": \"Timeout da sess\u00e3o atualizado com sucesso\",\n  \"session_timeout\": 60\n}\n</code></pre>"},{"location":"api/postman-guide/#7-dashboard-stats","title":"7. Dashboard Stats","text":"<p>M\u00e9todo: <code>GET</code> URL: <code>{{base_url}}/api/dashboard/stats/</code> Headers:</p> <pre><code>Authorization: Token {{token}}\n</code></pre>"},{"location":"api/postman-guide/#8-analise-de-conversas","title":"8. An\u00e1lise de Conversas","text":"<p>M\u00e9todo: <code>GET</code> URL: <code>{{base_url}}/api/analysis/</code> Headers:</p> <pre><code>Authorization: Token {{token}}\n</code></pre>"},{"location":"api/postman-guide/#9-listar-mensagens","title":"9. Listar Mensagens","text":"<p>M\u00e9todo: <code>GET</code> URL: <code>{{base_url}}/api/messages/</code> Headers:</p> <pre><code>Authorization: Token {{token}}\n</code></pre>"},{"location":"api/postman-guide/#10-listar-provedores","title":"10. Listar Provedores","text":"<p>M\u00e9todo: <code>GET</code> URL: <code>{{base_url}}/api/provedores/</code> Headers:</p> <pre><code>Authorization: Token {{token}}\n</code></pre>"},{"location":"api/postman-guide/#solucao-de-problemas","title":"Solu\u00e7\u00e3o de Problemas","text":""},{"location":"api/postman-guide/#erro-401-nao-autorizado","title":"Erro 401 - N\u00e3o Autorizado","text":""},{"location":"api/postman-guide/#problema-as-credenciais-de-autenticacao-nao-foram-fornecidas","title":"Problema: \"As credenciais de autentica\u00e7\u00e3o n\u00e3o foram fornecidas\"","text":"<p>Solu\u00e7\u00e3o: 1. Verifique se fez login primeiro 2. Verifique se o token est\u00e1 sendo enviado corretamente 3. Verifique o formato do header Authorization</p>"},{"location":"api/postman-guide/#formato-correto-do-header","title":"Formato Correto do Header:","text":"<pre><code>Authorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre> <p>\u274c Formato Incorreto:</p> <pre><code>Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\nAuthorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n</code></pre>"},{"location":"api/postman-guide/#script-para-verificar-token","title":"Script para Verificar Token:","text":"<pre><code>// Adicione este script na aba \"Tests\" de cada request\nconst token = pm.environment.get(\"token\");\nif (!token) {\n    console.log(\"\u274c Token n\u00e3o encontrado. Fa\u00e7a login primeiro.\");\n    pm.test(\"Token exists\", () =&gt; {\n        pm.expect(token).to.not.be.undefined;\n    });\n} else {\n    console.log(\"\u2705 Token encontrado:\", token.substring(0, 20) + \"...\");\n}\n</code></pre>"},{"location":"api/postman-guide/#erro-403-proibido","title":"Erro 403 - Proibido","text":"<p>Solu\u00e7\u00e3o: 1. Verifique se o usu\u00e1rio tem permiss\u00e3o para acessar o endpoint 2. Verifique se est\u00e1 logado com o usu\u00e1rio correto 3. Verifique se o provedor est\u00e1 configurado corretamente</p>"},{"location":"api/postman-guide/#erro-400-requisicao-invalida","title":"Erro 400 - Requisi\u00e7\u00e3o Inv\u00e1lida","text":"<p>Solu\u00e7\u00e3o: 1. Verifique se a URL est\u00e1 correta 2. Verifique se o endpoint existe 3. Verifique se o servidor est\u00e1 rodando 4. Para <code>/api/auth/session-timeout/</code>: Inclua o body JSON com o par\u00e2metro <code>timeout</code></p> <p>Exemplo de Body Correto:</p> <pre><code>{\n  \"timeout\": 60\n}\n</code></pre> <p>Erro Comum:</p> <pre><code>{\n  \"error\": \"Timeout da sess\u00e3o n\u00e3o fornecido\"\n}\n</code></pre>"},{"location":"api/postman-guide/#erro-404-nao-encontrado","title":"Erro 404 - N\u00e3o Encontrado","text":"<p>Solu\u00e7\u00e3o: 1. Verifique se a URL est\u00e1 correta 2. Verifique se o endpoint existe 3. Verifique se o servidor est\u00e1 rodando</p>"},{"location":"api/postman-guide/#erro-500-erro-interno-do-servidor","title":"Erro 500 - Erro Interno do Servidor","text":"<p>Solu\u00e7\u00e3o: 1. Verifique os logs do servidor 2. Verifique se o banco de dados est\u00e1 funcionando 3. Verifique se todas as depend\u00eancias est\u00e3o instaladas</p>"},{"location":"api/postman-guide/#scripts-uteis","title":"Scripts \u00dateis","text":""},{"location":"api/postman-guide/#1-verificar-status-da-resposta","title":"1. Verificar Status da Resposta","text":"<pre><code>pm.test(\"Status code is 200\", () =&gt; {\n    pm.response.to.have.status(200);\n});\n\npm.test(\"Response has data\", () =&gt; {\n    const jsonData = pm.response.json();\n    pm.expect(jsonData).to.have.property('data');\n});\n</code></pre>"},{"location":"api/postman-guide/#2-salvar-id-do-contato","title":"2. Salvar ID do Contato","text":"<pre><code>if (pm.response.code === 201) {\n    const response = pm.response.json();\n    pm.environment.set(\"contact_id\", response.id);\n    console.log(\"ID do contato salvo:\", response.id);\n}\n</code></pre>"},{"location":"api/postman-guide/#3-verificar-estrutura-da-resposta","title":"3. Verificar Estrutura da Resposta","text":"<pre><code>pm.test(\"Response structure is correct\", () =&gt; {\n    const jsonData = pm.response.json();\n    pm.expect(jsonData).to.have.property('results');\n    pm.expect(jsonData).to.have.property('count');\n    pm.expect(jsonData).to.have.property('next');\n    pm.expect(jsonData).to.have.property('previous');\n});\n</code></pre>"},{"location":"api/postman-guide/#4-log-de-debug","title":"4. Log de Debug","text":"<pre><code>console.log(\"Request URL:\", pm.request.url);\nconsole.log(\"Request Headers:\", pm.request.headers);\nconsole.log(\"Response Status:\", pm.response.status);\nconsole.log(\"Response Time:\", pm.response.responseTime + \"ms\");\n</code></pre>"},{"location":"api/postman-guide/#collection-completa","title":"Collection Completa","text":""},{"location":"api/postman-guide/#estrutura-recomendada","title":"Estrutura Recomendada:","text":"<pre><code>NioChat API/\n\u251c\u2500\u2500 Authentication/\n\u2502   \u251c\u2500\u2500 Login\n\u2502   \u251c\u2500\u2500 Logout\n\u2502   \u2514\u2500\u2500 Get User Info\n\u251c\u2500\u2500 Users/\n\u2502   \u251c\u2500\u2500 List Users\n\u2502   \u251c\u2500\u2500 Get User\n\u2502   \u251c\u2500\u2500 Create User\n\u2502   \u2514\u2500\u2500 Update User\n\u251c\u2500\u2500 Contacts/\n\u2502   \u251c\u2500\u2500 List Contacts\n\u2502   \u251c\u2500\u2500 Get Contact\n\u2502   \u251c\u2500\u2500 Create Contact\n\u2502   \u2514\u2500\u2500 Update Contact\n\u251c\u2500\u2500 Conversations/\n\u2502   \u251c\u2500\u2500 List Conversations\n\u2502   \u251c\u2500\u2500 Get Conversation\n\u2502   \u2514\u2500\u2500 Create Conversation\n\u251c\u2500\u2500 Messages/\n\u2502   \u251c\u2500\u2500 List Messages\n\u2502   \u251c\u2500\u2500 Send Message\n\u2502   \u2514\u2500\u2500 Get Message\n\u2514\u2500\u2500 Dashboard/\n    \u251c\u2500\u2500 Get Stats\n    \u251c\u2500\u2500 Get CSAT Stats\n    \u2514\u2500\u2500 Get Recent Feedbacks\n</code></pre>"},{"location":"api/postman-guide/#configuracao-de-pre-request-scripts","title":"Configura\u00e7\u00e3o de Pre-request Scripts","text":""},{"location":"api/postman-guide/#para-toda-a-collection","title":"Para toda a Collection:","text":"<pre><code>// Verificar se o token existe\nconst token = pm.environment.get(\"token\");\nif (!token &amp;&amp; pm.info.requestName !== \"Login\") {\n    console.log(\"\u26a0\ufe0f Token n\u00e3o encontrado. Execute o request 'Login' primeiro.\");\n}\n</code></pre>"},{"location":"api/postman-guide/#para-requests-especificos","title":"Para requests espec\u00edficos:","text":"<pre><code>// Adicionar timestamp\npm.globals.set(\"timestamp\", new Date().toISOString());\n</code></pre>"},{"location":"api/postman-guide/#configuracao-de-tests","title":"Configura\u00e7\u00e3o de Tests","text":""},{"location":"api/postman-guide/#para-requests-de-autenticacao","title":"Para requests de autentica\u00e7\u00e3o:","text":"<pre><code>pm.test(\"Login successful\", () =&gt; {\n    pm.response.to.have.status(200);\n    const jsonData = pm.response.json();\n    pm.expect(jsonData).to.have.property('token');\n    pm.expect(jsonData).to.have.property('user');\n});\n</code></pre>"},{"location":"api/postman-guide/#para-requests-de-dados","title":"Para requests de dados:","text":"<pre><code>pm.test(\"Data retrieved successfully\", () =&gt; {\n    pm.response.to.have.status(200);\n    const jsonData = pm.response.json();\n    pm.expect(jsonData).to.be.an('object');\n});\n</code></pre>"},{"location":"api/postman-guide/#exportar-collection","title":"Exportar Collection","text":"<ol> <li>Clique no menu da collection (tr\u00eas pontos)</li> <li>Selecione \"Export\"</li> <li>Escolha \"Collection v2.1\"</li> <li>Salve o arquivo JSON</li> <li>Compartilhe com a equipe</li> </ol>"},{"location":"api/postman-guide/#importar-collection","title":"Importar Collection","text":"<ol> <li>Clique em \"Import\"</li> <li>Selecione o arquivo JSON da collection</li> <li>Confirme a importa\u00e7\u00e3o</li> <li>Configure as vari\u00e1veis de ambiente</li> </ol>"},{"location":"api/postman-guide/#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<ol> <li>Endpoints - Explore todos os endpoints</li> <li>WebSocket - Aprenda sobre WebSocket</li> <li>Webhooks - Aprenda sobre webhooks</li> <li>Troubleshooting - Resolva problemas</li> </ol>"},{"location":"api/webhooks/","title":"Webhooks","text":"<p>O NioChat utiliza webhooks para receber notifica\u00e7\u00f5es em tempo real de eventos do WhatsApp. Este documento explica como implementar e usar webhooks.</p>"},{"location":"api/webhooks/#webhook-uazapievolution","title":"Webhook Uazapi/Evolution","text":""},{"location":"api/webhooks/#url-do-webhook","title":"URL do Webhook","text":"<pre><code>POST /webhook/evolution-uazapi/\nPOST /webhooks/evolution-uazapi/\n</code></pre>"},{"location":"api/webhooks/#estrutura-da-requisicao","title":"Estrutura da Requisi\u00e7\u00e3o","text":"<pre><code>{\n  \"event\": \"message\",\n  \"data\": {\n    \"message\": {\n      \"id\": \"message_id\",\n      \"from\": \"+5511999999999\",\n      \"to\": \"+5511888888888\",\n      \"content\": \"Ol\u00e1, como posso ajudar?\",\n      \"timestamp\": \"2024-01-01T10:00:00Z\",\n      \"message_type\": \"text\"\n    }\n  }\n}\n</code></pre>"},{"location":"api/webhooks/#eventos-suportados","title":"Eventos Suportados","text":""},{"location":"api/webhooks/#mensagem-de-texto","title":"Mensagem de Texto","text":"<pre><code>{\n  \"event\": \"message\",\n  \"data\": {\n    \"message\": {\n      \"id\": \"message_id\",\n      \"from\": \"+5511999999999\",\n      \"to\": \"+5511888888888\",\n      \"content\": \"Ol\u00e1, como posso ajudar?\",\n      \"timestamp\": \"2024-01-01T10:00:00Z\",\n      \"message_type\": \"text\",\n      \"sender\": {\n        \"name\": \"Jo\u00e3o Silva\",\n        \"phone\": \"+5511999999999\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"api/webhooks/#mensagem-de-imagem","title":"Mensagem de Imagem","text":"<pre><code>{\n  \"event\": \"message\",\n  \"data\": {\n    \"message\": {\n      \"id\": \"message_id\",\n      \"from\": \"+5511999999999\",\n      \"to\": \"+5511888888888\",\n      \"content\": \"Imagem enviada\",\n      \"timestamp\": \"2024-01-01T10:00:00Z\",\n      \"message_type\": \"image\",\n      \"media\": {\n        \"url\": \"https://example.com/image.jpg\",\n        \"filename\": \"image.jpg\",\n        \"size\": 1024\n      },\n      \"sender\": {\n        \"name\": \"Jo\u00e3o Silva\",\n        \"phone\": \"+5511999999999\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"api/webhooks/#mensagem-de-audio","title":"Mensagem de \u00c1udio","text":"<pre><code>{\n  \"event\": \"message\",\n  \"data\": {\n    \"message\": {\n      \"id\": \"message_id\",\n      \"from\": \"+5511999999999\",\n      \"to\": \"+5511888888888\",\n      \"content\": \"\u00c1udio enviado\",\n      \"timestamp\": \"2024-01-01T10:00:00Z\",\n      \"message_type\": \"audio\",\n      \"media\": {\n        \"url\": \"https://example.com/audio.ogg\",\n        \"filename\": \"audio.ogg\",\n        \"size\": 2048,\n        \"duration\": 30\n      },\n      \"sender\": {\n        \"name\": \"Jo\u00e3o Silva\",\n        \"phone\": \"+5511999999999\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"api/webhooks/#mensagem-de-video","title":"Mensagem de V\u00eddeo","text":"<pre><code>{\n  \"event\": \"message\",\n  \"data\": {\n    \"message\": {\n      \"id\": \"message_id\",\n      \"from\": \"+5511999999999\",\n      \"to\": \"+5511888888888\",\n      \"content\": \"V\u00eddeo enviado\",\n      \"timestamp\": \"2024-01-01T10:00:00Z\",\n      \"message_type\": \"video\",\n      \"media\": {\n        \"url\": \"https://example.com/video.mp4\",\n        \"filename\": \"video.mp4\",\n        \"size\": 5120\n      },\n      \"sender\": {\n        \"name\": \"Jo\u00e3o Silva\",\n        \"phone\": \"+5511999999999\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"api/webhooks/#mensagem-de-documento","title":"Mensagem de Documento","text":"<pre><code>{\n  \"event\": \"message\",\n  \"data\": {\n    \"message\": {\n      \"id\": \"message_id\",\n      \"from\": \"+5511999999999\",\n      \"to\": \"+5511888888888\",\n      \"content\": \"Documento enviado\",\n      \"timestamp\": \"2024-01-01T10:00:00Z\",\n      \"message_type\": \"document\",\n      \"media\": {\n        \"url\": \"https://example.com/document.pdf\",\n        \"filename\": \"document.pdf\",\n        \"size\": 10240\n      },\n      \"sender\": {\n        \"name\": \"Jo\u00e3o Silva\",\n        \"phone\": \"+5511999999999\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"api/webhooks/#reacao-a-mensagem","title":"Rea\u00e7\u00e3o a Mensagem","text":"<pre><code>{\n  \"event\": \"reaction\",\n  \"data\": {\n    \"message_id\": \"message_id\",\n    \"reaction\": \"\ud83d\udc4d\",\n    \"from\": \"+5511999999999\",\n    \"timestamp\": \"2024-01-01T10:00:00Z\"\n  }\n}\n</code></pre>"},{"location":"api/webhooks/#mensagem-deletada","title":"Mensagem Deletada","text":"<pre><code>{\n  \"event\": \"message_deleted\",\n  \"data\": {\n    \"message_id\": \"message_id\",\n    \"from\": \"+5511999999999\",\n    \"timestamp\": \"2024-01-01T10:00:00Z\"\n  }\n}\n</code></pre>"},{"location":"api/webhooks/#status-de-entrega","title":"Status de Entrega","text":"<pre><code>{\n  \"event\": \"delivery_status\",\n  \"data\": {\n    \"message_id\": \"message_id\",\n    \"status\": \"delivered\",\n    \"timestamp\": \"2024-01-01T10:00:00Z\"\n  }\n}\n</code></pre>"},{"location":"api/webhooks/#status-de-leitura","title":"Status de Leitura","text":"<pre><code>{\n  \"event\": \"read_status\",\n  \"data\": {\n    \"message_id\": \"message_id\",\n    \"status\": \"read\",\n    \"timestamp\": \"2024-01-01T10:00:00Z\"\n  }\n}\n</code></pre>"},{"location":"api/webhooks/#implementacao-do-webhook","title":"Implementa\u00e7\u00e3o do Webhook","text":""},{"location":"api/webhooks/#python-django","title":"Python (Django)","text":"<pre><code>from django.http import JsonResponse\nfrom django.views.decorators.csrf import csrf_exempt\nfrom django.views.decorators.http import require_http_methods\nimport json\nimport logging\n\nlogger = logging.getLogger(__name__)\n\n@csrf_exempt\n@require_http_methods([\"POST\"])\ndef webhook_evolution_uazapi(request):\n    try:\n        data = json.loads(request.body)\n        event = data.get('event')\n        message_data = data.get('data', {}).get('message', {})\n\n        logger.info(f\"Webhook recebido: {event}\")\n\n        if event == 'message':\n            process_message(message_data)\n        elif event == 'reaction':\n            process_reaction(data.get('data', {}))\n        elif event == 'message_deleted':\n            process_message_deleted(data.get('data', {}))\n        elif event == 'delivery_status':\n            process_delivery_status(data.get('data', {}))\n        elif event == 'read_status':\n            process_read_status(data.get('data', {}))\n\n        return JsonResponse({'status': 'success'})\n\n    except Exception as e:\n        logger.error(f\"Erro no webhook: {e}\")\n        return JsonResponse({'status': 'error', 'message': str(e)}, status=500)\n\ndef process_message(message_data):\n    \"\"\"Processa mensagem recebida\"\"\"\n    message_id = message_data.get('id')\n    from_number = message_data.get('from')\n    to_number = message_data.get('to')\n    content = message_data.get('content')\n    message_type = message_data.get('message_type', 'text')\n\n    # Processar mensagem\n    logger.info(f\"Processando mensagem {message_id} de {from_number}\")\n\n    # Salvar no banco de dados\n    # Enviar para IA\n    # Atualizar dashboard via WebSocket\n\ndef process_reaction(reaction_data):\n    \"\"\"Processa rea\u00e7\u00e3o a mensagem\"\"\"\n    message_id = reaction_data.get('message_id')\n    reaction = reaction_data.get('reaction')\n\n    logger.info(f\"Rea\u00e7\u00e3o {reaction} na mensagem {message_id}\")\n\ndef process_message_deleted(deleted_data):\n    \"\"\"Processa mensagem deletada\"\"\"\n    message_id = deleted_data.get('message_id')\n\n    logger.info(f\"Mensagem {message_id} foi deletada\")\n\ndef process_delivery_status(status_data):\n    \"\"\"Processa status de entrega\"\"\"\n    message_id = status_data.get('message_id')\n    status = status_data.get('status')\n\n    logger.info(f\"Status de entrega da mensagem {message_id}: {status}\")\n\ndef process_read_status(status_data):\n    \"\"\"Processa status de leitura\"\"\"\n    message_id = status_data.get('message_id')\n    status = status_data.get('status')\n\n    logger.info(f\"Status de leitura da mensagem {message_id}: {status}\")\n</code></pre>"},{"location":"api/webhooks/#nodejs-express","title":"Node.js (Express)","text":"<pre><code>const express = require('express');\nconst app = express();\n\napp.use(express.json());\n\napp.post('/webhook/evolution-uazapi', (req, res) =&gt; {\n  try {\n    const { event, data } = req.body;\n    const message = data?.message;\n\n    console.log(`Webhook recebido: ${event}`);\n\n    switch (event) {\n      case 'message':\n        processMessage(message);\n        break;\n      case 'reaction':\n        processReaction(data);\n        break;\n      case 'message_deleted':\n        processMessageDeleted(data);\n        break;\n      case 'delivery_status':\n        processDeliveryStatus(data);\n        break;\n      case 'read_status':\n        processReadStatus(data);\n        break;\n      default:\n        console.log(`Evento desconhecido: ${event}`);\n    }\n\n    res.json({ status: 'success' });\n  } catch (error) {\n    console.error('Erro no webhook:', error);\n    res.status(500).json({ status: 'error', message: error.message });\n  }\n});\n\nfunction processMessage(message) {\n  const { id, from, to, content, message_type } = message;\n  console.log(`Processando mensagem ${id} de ${from}`);\n\n  // Processar mensagem\n  // Salvar no banco de dados\n  // Enviar para IA\n  // Atualizar dashboard via WebSocket\n}\n\nfunction processReaction(data) {\n  const { message_id, reaction } = data;\n  console.log(`Rea\u00e7\u00e3o ${reaction} na mensagem ${message_id}`);\n}\n\nfunction processMessageDeleted(data) {\n  const { message_id } = data;\n  console.log(`Mensagem ${message_id} foi deletada`);\n}\n\nfunction processDeliveryStatus(data) {\n  const { message_id, status } = data;\n  console.log(`Status de entrega da mensagem ${message_id}: ${status}`);\n}\n\nfunction processReadStatus(data) {\n  const { message_id, status } = data;\n  console.log(`Status de leitura da mensagem ${message_id}: ${status}`);\n}\n\napp.listen(3000, () =&gt; {\n  console.log('Servidor rodando na porta 3000');\n});\n</code></pre>"},{"location":"api/webhooks/#php","title":"PHP","text":"<pre><code>&lt;?php\nheader('Content-Type: application/json');\n\n$input = file_get_contents('php://input');\n$data = json_decode($input, true);\n\nif (!$data) {\n    http_response_code(400);\n    echo json_encode(['status' =&gt; 'error', 'message' =&gt; 'Dados inv\u00e1lidos']);\n    exit;\n}\n\n$event = $data['event'] ?? '';\n$messageData = $data['data']['message'] ?? [];\n\nerror_log(\"Webhook recebido: $event\");\n\nswitch ($event) {\n    case 'message':\n        processMessage($messageData);\n        break;\n    case 'reaction':\n        processReaction($data['data']);\n        break;\n    case 'message_deleted':\n        processMessageDeleted($data['data']);\n        break;\n    case 'delivery_status':\n        processDeliveryStatus($data['data']);\n        break;\n    case 'read_status':\n        processReadStatus($data['data']);\n        break;\n    default:\n        error_log(\"Evento desconhecido: $event\");\n}\n\nfunction processMessage($message) {\n    $id = $message['id'] ?? '';\n    $from = $message['from'] ?? '';\n    $content = $message['content'] ?? '';\n    $messageType = $message['message_type'] ?? 'text';\n\n    error_log(\"Processando mensagem $id de $from\");\n\n    // Processar mensagem\n    // Salvar no banco de dados\n    // Enviar para IA\n    // Atualizar dashboard via WebSocket\n}\n\nfunction processReaction($data) {\n    $messageId = $data['message_id'] ?? '';\n    $reaction = $data['reaction'] ?? '';\n\n    error_log(\"Rea\u00e7\u00e3o $reaction na mensagem $messageId\");\n}\n\nfunction processMessageDeleted($data) {\n    $messageId = $data['message_id'] ?? '';\n    error_log(\"Mensagem $messageId foi deletada\");\n}\n\nfunction processDeliveryStatus($data) {\n    $messageId = $data['message_id'] ?? '';\n    $status = $data['status'] ?? '';\n\n    error_log(\"Status de entrega da mensagem $messageId: $status\");\n}\n\nfunction processReadStatus($data) {\n    $messageId = $data['message_id'] ?? '';\n    $status = $data['status'] ?? '';\n\n    error_log(\"Status de leitura da mensagem $messageId: $status\");\n}\n\necho json_encode(['status' =&gt; 'success']);\n?&gt;\n</code></pre>"},{"location":"api/webhooks/#configuracao-do-webhook","title":"Configura\u00e7\u00e3o do Webhook","text":""},{"location":"api/webhooks/#uazapievolution","title":"Uazapi/Evolution","text":"<pre><code>{\n  \"webhook\": {\n    \"url\": \"https://seu-dominio.com/webhook/evolution-uazapi/\",\n    \"events\": [\n      \"message\",\n      \"reaction\",\n      \"message_deleted\",\n      \"delivery_status\",\n      \"read_status\"\n    ],\n    \"headers\": {\n      \"Authorization\": \"Bearer seu_token_aqui\"\n    }\n  }\n}\n</code></pre>"},{"location":"api/webhooks/#configuracao-no-niochat","title":"Configura\u00e7\u00e3o no NioChat","text":"<pre><code># settings.py\nWEBHOOK_SECRET = 'seu_secret_aqui'\nWEBHOOK_TIMEOUT = 30\nWEBHOOK_RETRY_ATTEMPTS = 3\n</code></pre>"},{"location":"api/webhooks/#validacao-de-webhook","title":"Valida\u00e7\u00e3o de Webhook","text":""},{"location":"api/webhooks/#verificacao-de-assinatura","title":"Verifica\u00e7\u00e3o de Assinatura","text":"<pre><code>import hmac\nimport hashlib\n\ndef verify_webhook_signature(payload, signature, secret):\n    \"\"\"Verifica a assinatura do webhook\"\"\"\n    expected_signature = hmac.new(\n        secret.encode(),\n        payload,\n        hashlib.sha256\n    ).hexdigest()\n\n    return hmac.compare_digest(signature, expected_signature)\n\n@csrf_exempt\n@require_http_methods([\"POST\"])\ndef webhook_evolution_uazapi(request):\n    # Verificar assinatura\n    signature = request.headers.get('X-Signature')\n    if not verify_webhook_signature(request.body, signature, WEBHOOK_SECRET):\n        return JsonResponse({'status': 'error', 'message': 'Assinatura inv\u00e1lida'}, status=401)\n\n    # Processar webhook\n    # ...\n</code></pre>"},{"location":"api/webhooks/#rate-limiting","title":"Rate Limiting","text":"<pre><code>from django.core.cache import cache\nfrom django.http import JsonResponse\n\ndef rate_limit_webhook(request):\n    \"\"\"Aplica rate limiting ao webhook\"\"\"\n    client_ip = request.META.get('REMOTE_ADDR')\n    cache_key = f\"webhook_rate_limit_{client_ip}\"\n\n    # Limite de 100 requisi\u00e7\u00f5es por minuto\n    current_count = cache.get(cache_key, 0)\n    if current_count &gt;= 100:\n        return JsonResponse({'status': 'error', 'message': 'Rate limit exceeded'}, status=429)\n\n    cache.set(cache_key, current_count + 1, 60)  # 60 segundos\n    return None\n</code></pre>"},{"location":"api/webhooks/#tratamento-de-erros","title":"Tratamento de Erros","text":""},{"location":"api/webhooks/#retry-automatico","title":"Retry Autom\u00e1tico","text":"<pre><code>import time\nfrom django.core.cache import cache\n\ndef process_webhook_with_retry(data, max_retries=3):\n    \"\"\"Processa webhook com retry autom\u00e1tico\"\"\"\n    for attempt in range(max_retries):\n        try:\n            # Processar webhook\n            process_webhook(data)\n            return True\n        except Exception as e:\n            if attempt == max_retries - 1:\n                # \u00daltima tentativa falhou\n                logger.error(f\"Webhook falhou ap\u00f3s {max_retries} tentativas: {e}\")\n                return False\n            else:\n                # Aguardar antes da pr\u00f3xima tentativa\n                time.sleep(2 ** attempt)  # Backoff exponencial\n\n    return False\n</code></pre>"},{"location":"api/webhooks/#logging-de-erros","title":"Logging de Erros","text":"<pre><code>import logging\n\nlogger = logging.getLogger(__name__)\n\n@csrf_exempt\n@require_http_methods([\"POST\"])\ndef webhook_evolution_uazapi(request):\n    try:\n        data = json.loads(request.body)\n        logger.info(f\"Webhook recebido: {data.get('event')}\")\n\n        # Processar webhook\n        process_webhook(data)\n\n        return JsonResponse({'status': 'success'})\n\n    except json.JSONDecodeError as e:\n        logger.error(f\"Erro ao decodificar JSON: {e}\")\n        return JsonResponse({'status': 'error', 'message': 'JSON inv\u00e1lido'}, status=400)\n\n    except Exception as e:\n        logger.error(f\"Erro no webhook: {e}\", exc_info=True)\n        return JsonResponse({'status': 'error', 'message': 'Erro interno'}, status=500)\n</code></pre>"},{"location":"api/webhooks/#monitoramento","title":"Monitoramento","text":""},{"location":"api/webhooks/#metricas-de-webhook","title":"M\u00e9tricas de Webhook","text":"<pre><code>from django.core.cache import cache\nfrom django.utils import timezone\n\ndef track_webhook_metrics(event, status):\n    \"\"\"Rastreia m\u00e9tricas do webhook\"\"\"\n    timestamp = timezone.now()\n\n    # Incrementar contador de eventos\n    cache_key = f\"webhook_events_{event}_{status}\"\n    cache.incr(cache_key, 1)\n    cache.expire(cache_key, 3600)  # 1 hora\n\n    # Log de m\u00e9tricas\n    logger.info(f\"Webhook metric: {event} - {status} at {timestamp}\")\n\n@csrf_exempt\n@require_http_methods([\"POST\"])\ndef webhook_evolution_uazapi(request):\n    try:\n        data = json.loads(request.body)\n        event = data.get('event')\n\n        # Processar webhook\n        process_webhook(data)\n\n        # Rastrear m\u00e9tricas\n        track_webhook_metrics(event, 'success')\n\n        return JsonResponse({'status': 'success'})\n\n    except Exception as e:\n        # Rastrear m\u00e9tricas de erro\n        track_webhook_metrics('error', 'failed')\n        raise e\n</code></pre>"},{"location":"api/webhooks/#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<ol> <li>Endpoints - Explore todos os endpoints da API</li> <li>WebSocket - Aprenda sobre WebSocket</li> <li>Autentica\u00e7\u00e3o - Aprenda sobre autentica\u00e7\u00e3o</li> </ol>"},{"location":"api/websocket/","title":"WebSocket","text":"<p>O NioChat utiliza WebSocket para comunica\u00e7\u00e3o em tempo real entre o frontend e backend. Este documento explica como implementar e usar WebSocket.</p>"},{"location":"api/websocket/#conexao","title":"Conex\u00e3o","text":""},{"location":"api/websocket/#url-de-conexao","title":"URL de Conex\u00e3o","text":"<pre><code>const ws = new WebSocket('ws://localhost:8010/ws/dashboard/');\n</code></pre>"},{"location":"api/websocket/#com-autenticacao","title":"Com Autentica\u00e7\u00e3o","text":"<pre><code>const token = 'seu_token_aqui';\nconst ws = new WebSocket(`ws://localhost:8010/ws/dashboard/?token=${token}`);\n</code></pre>"},{"location":"api/websocket/#implementacao-javascript","title":"Implementa\u00e7\u00e3o JavaScript","text":""},{"location":"api/websocket/#classe-websocket","title":"Classe WebSocket","text":"<pre><code>class NioChatWebSocket {\n  constructor(token) {\n    this.token = token;\n    this.ws = null;\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectInterval = 5000;\n    this.listeners = {};\n  }\n\n  connect() {\n    const url = `ws://localhost:8010/ws/dashboard/?token=${this.token}`;\n\n    this.ws = new WebSocket(url);\n\n    this.ws.onopen = (event) =&gt; {\n      console.log('WebSocket conectado');\n      this.reconnectAttempts = 0;\n      this.emit('connected', event);\n    };\n\n    this.ws.onmessage = (event) =&gt; {\n      try {\n        const data = JSON.parse(event.data);\n        this.handleMessage(data);\n      } catch (error) {\n        console.error('Erro ao processar mensagem:', error);\n      }\n    };\n\n    this.ws.onclose = (event) =&gt; {\n      console.log('WebSocket desconectado:', event.code, event.reason);\n      this.emit('disconnected', event);\n      this.attemptReconnect();\n    };\n\n    this.ws.onerror = (error) =&gt; {\n      console.error('Erro no WebSocket:', error);\n      this.emit('error', error);\n    };\n  }\n\n  handleMessage(data) {\n    const { type, data: messageData } = data;\n\n    switch (type) {\n      case 'chat_message':\n        this.emit('chat_message', messageData);\n        break;\n      case 'message_reaction':\n        this.emit('message_reaction', messageData);\n        break;\n      case 'message_deleted':\n        this.emit('message_deleted', messageData);\n        break;\n      case 'dashboard_metrics':\n        this.emit('dashboard_metrics', messageData);\n        break;\n      case 'csat_update':\n        this.emit('csat_update', messageData);\n        break;\n      case 'audit_log':\n        this.emit('audit_log', messageData);\n        break;\n      case 'user_status':\n        this.emit('user_status', messageData);\n        break;\n      default:\n        console.log('Tipo de mensagem desconhecido:', type);\n    }\n  }\n\n  attemptReconnect() {\n    if (this.reconnectAttempts &lt; this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      console.log(`Tentativa de reconex\u00e3o ${this.reconnectAttempts}/${this.maxReconnectAttempts}`);\n\n      setTimeout(() =&gt; {\n        this.connect();\n      }, this.reconnectInterval);\n    } else {\n      console.error('M\u00e1ximo de tentativas de reconex\u00e3o atingido');\n      this.emit('reconnect_failed');\n    }\n  }\n\n  send(data) {\n    if (this.ws &amp;&amp; this.ws.readyState === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify(data));\n    } else {\n      console.error('WebSocket n\u00e3o est\u00e1 conectado');\n    }\n  }\n\n  on(event, callback) {\n    if (!this.listeners[event]) {\n      this.listeners[event] = [];\n    }\n    this.listeners[event].push(callback);\n  }\n\n  off(event, callback) {\n    if (this.listeners[event]) {\n      this.listeners[event] = this.listeners[event].filter(cb =&gt; cb !== callback);\n    }\n  }\n\n  emit(event, data) {\n    if (this.listeners[event]) {\n      this.listeners[event].forEach(callback =&gt; callback(data));\n    }\n  }\n\n  disconnect() {\n    if (this.ws) {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n}\n\n// Uso\nconst ws = new NioChatWebSocket('seu_token_aqui');\n\n// Conectar\nws.connect();\n\n// Escutar eventos\nws.on('chat_message', (data) =&gt; {\n  console.log('Nova mensagem:', data);\n});\n\nws.on('dashboard_metrics', (data) =&gt; {\n  console.log('M\u00e9tricas atualizadas:', data);\n});\n\nws.on('csat_update', (data) =&gt; {\n  console.log('CSAT atualizado:', data);\n});\n\nws.on('connected', () =&gt; {\n  console.log('Conectado ao WebSocket');\n});\n\nws.on('disconnected', () =&gt; {\n  console.log('Desconectado do WebSocket');\n});\n\nws.on('error', (error) =&gt; {\n  console.error('Erro no WebSocket:', error);\n});\n</code></pre>"},{"location":"api/websocket/#eventos-disponiveis","title":"Eventos Dispon\u00edveis","text":""},{"location":"api/websocket/#chat","title":"Chat","text":""},{"location":"api/websocket/#nova-mensagem","title":"Nova Mensagem","text":"<pre><code>{\n  \"type\": \"chat_message\",\n  \"data\": {\n    \"conversation_id\": 1,\n    \"message\": {\n      \"id\": 1,\n      \"content\": \"Nova mensagem\",\n      \"sender\": \"customer\",\n      \"timestamp\": \"2024-01-01T10:00:00Z\",\n      \"message_type\": \"text\"\n    }\n  }\n}\n</code></pre>"},{"location":"api/websocket/#reacao-a-mensagem","title":"Rea\u00e7\u00e3o a Mensagem","text":"<pre><code>{\n  \"type\": \"message_reaction\",\n  \"data\": {\n    \"message_id\": 1,\n    \"reaction\": \"\ud83d\udc4d\",\n    \"user_id\": 1\n  }\n}\n</code></pre>"},{"location":"api/websocket/#mensagem-deletada","title":"Mensagem Deletada","text":"<pre><code>{\n  \"type\": \"message_deleted\",\n  \"data\": {\n    \"message_id\": 1,\n    \"deleted_by\": 1\n  }\n}\n</code></pre>"},{"location":"api/websocket/#dashboard","title":"Dashboard","text":""},{"location":"api/websocket/#metricas-atualizadas","title":"M\u00e9tricas Atualizadas","text":"<pre><code>{\n  \"type\": \"dashboard_metrics\",\n  \"data\": {\n    \"total_conversations\": 100,\n    \"open_conversations\": 25,\n    \"closed_conversations\": 75,\n    \"average_satisfaction\": 4.2,\n    \"resolution_rate\": 0.85,\n    \"response_time\": 120\n  }\n}\n</code></pre>"},{"location":"api/websocket/#csat-atualizado","title":"CSAT Atualizado","text":"<pre><code>{\n  \"type\": \"csat_update\",\n  \"data\": {\n    \"conversation_id\": 1,\n    \"rating\": 5,\n    \"feedback\": \"Excelente atendimento!\",\n    \"contact_name\": \"Jo\u00e3o Silva\",\n    \"timestamp\": \"2024-01-01T10:00:00Z\"\n  }\n}\n</code></pre>"},{"location":"api/websocket/#log-de-auditoria","title":"Log de Auditoria","text":"<pre><code>{\n  \"type\": \"audit_log\",\n  \"data\": {\n    \"id\": 1,\n    \"action\": \"conversation_created\",\n    \"details\": {\n      \"conversation_id\": 1,\n      \"contact_name\": \"Jo\u00e3o Silva\"\n    },\n    \"user\": {\n      \"id\": 1,\n      \"username\": \"agente1\"\n    },\n    \"timestamp\": \"2024-01-01T10:00:00Z\"\n  }\n}\n</code></pre>"},{"location":"api/websocket/#status-do-usuario","title":"Status do Usu\u00e1rio","text":""},{"location":"api/websocket/#usuario-onlineoffline","title":"Usu\u00e1rio Online/Offline","text":"<pre><code>{\n  \"type\": \"user_status\",\n  \"data\": {\n    \"user_id\": 1,\n    \"status\": \"online\",\n    \"last_seen\": \"2024-01-01T10:00:00Z\"\n  }\n}\n</code></pre>"},{"location":"api/websocket/#implementacao-react","title":"Implementa\u00e7\u00e3o React","text":""},{"location":"api/websocket/#hook-usewebsocket","title":"Hook useWebSocket","text":"<pre><code>import { useState, useEffect, useCallback } from 'react';\n\nexport const useWebSocket = (token) =&gt; {\n  const [ws, setWs] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [metrics, setMetrics] = useState(null);\n  const [csatUpdates, setCsatUpdates] = useState([]);\n\n  const connect = useCallback(() =&gt; {\n    if (!token) return;\n\n    const websocket = new WebSocket(`ws://localhost:8010/ws/dashboard/?token=${token}`);\n\n    websocket.onopen = () =&gt; {\n      setConnected(true);\n      setWs(websocket);\n    };\n\n    websocket.onmessage = (event) =&gt; {\n      const data = JSON.parse(event.data);\n\n      switch (data.type) {\n        case 'chat_message':\n          setMessages(prev =&gt; [...prev, data.data]);\n          break;\n        case 'dashboard_metrics':\n          setMetrics(data.data);\n          break;\n        case 'csat_update':\n          setCsatUpdates(prev =&gt; [...prev, data.data]);\n          break;\n        default:\n          console.log('Evento desconhecido:', data.type);\n      }\n    };\n\n    websocket.onclose = () =&gt; {\n      setConnected(false);\n      setWs(null);\n    };\n\n    websocket.onerror = (error) =&gt; {\n      console.error('Erro no WebSocket:', error);\n    };\n\n    return websocket;\n  }, [token]);\n\n  useEffect(() =&gt; {\n    const websocket = connect();\n\n    return () =&gt; {\n      if (websocket) {\n        websocket.close();\n      }\n    };\n  }, [connect]);\n\n  const sendMessage = useCallback((data) =&gt; {\n    if (ws &amp;&amp; ws.readyState === WebSocket.OPEN) {\n      ws.send(JSON.stringify(data));\n    }\n  }, [ws]);\n\n  return {\n    connected,\n    messages,\n    metrics,\n    csatUpdates,\n    sendMessage\n  };\n};\n</code></pre>"},{"location":"api/websocket/#componente-dashboard","title":"Componente Dashboard","text":"<pre><code>import React from 'react';\nimport { useWebSocket } from './hooks/useWebSocket';\n\nconst Dashboard = ({ token }) =&gt; {\n  const { connected, metrics, csatUpdates } = useWebSocket(token);\n\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;Dashboard&lt;/h1&gt;\n      &lt;p&gt;Status: {connected ? 'Conectado' : 'Desconectado'}&lt;/p&gt;\n\n      {metrics &amp;&amp; (\n        &lt;div&gt;\n          &lt;h2&gt;M\u00e9tricas&lt;/h2&gt;\n          &lt;p&gt;Total de Conversas: {metrics.total_conversations}&lt;/p&gt;\n          &lt;p&gt;Conversas Abertas: {metrics.open_conversations}&lt;/p&gt;\n          &lt;p&gt;Satisfa\u00e7\u00e3o M\u00e9dia: {metrics.average_satisfaction}&lt;/p&gt;\n        &lt;/div&gt;\n      )}\n\n      {csatUpdates.length &gt; 0 &amp;&amp; (\n        &lt;div&gt;\n          &lt;h2&gt;\u00daltimos CSATs&lt;/h2&gt;\n          {csatUpdates.map((csat, index) =&gt; (\n            &lt;div key={index}&gt;\n              &lt;p&gt;{csat.contact_name}: {csat.rating} - {csat.feedback}&lt;/p&gt;\n            &lt;/div&gt;\n          ))}\n        &lt;/div&gt;\n      )}\n    &lt;/div&gt;\n  );\n};\n\nexport default Dashboard;\n</code></pre>"},{"location":"api/websocket/#implementacao-vuejs","title":"Implementa\u00e7\u00e3o Vue.js","text":""},{"location":"api/websocket/#plugin-websocket","title":"Plugin WebSocket","text":"<pre><code>// websocket.js\nexport default {\n  install(Vue) {\n    Vue.prototype.$websocket = {\n      ws: null,\n      connected: false,\n      listeners: {},\n\n      connect(token) {\n        this.ws = new WebSocket(`ws://localhost:8010/ws/dashboard/?token=${token}`);\n\n        this.ws.onopen = () =&gt; {\n          this.connected = true;\n          this.emit('connected');\n        };\n\n        this.ws.onmessage = (event) =&gt; {\n          const data = JSON.parse(event.data);\n          this.emit(data.type, data.data);\n        };\n\n        this.ws.onclose = () =&gt; {\n          this.connected = false;\n          this.emit('disconnected');\n        };\n\n        this.ws.onerror = (error) =&gt; {\n          this.emit('error', error);\n        };\n      },\n\n      send(data) {\n        if (this.ws &amp;&amp; this.ws.readyState === WebSocket.OPEN) {\n          this.ws.send(JSON.stringify(data));\n        }\n      },\n\n      on(event, callback) {\n        if (!this.listeners[event]) {\n          this.listeners[event] = [];\n        }\n        this.listeners[event].push(callback);\n      },\n\n      off(event, callback) {\n        if (this.listeners[event]) {\n          this.listeners[event] = this.listeners[event].filter(cb =&gt; cb !== callback);\n        }\n      },\n\n      emit(event, data) {\n        if (this.listeners[event]) {\n          this.listeners[event].forEach(callback =&gt; callback(data));\n        }\n      },\n\n      disconnect() {\n        if (this.ws) {\n          this.ws.close();\n          this.ws = null;\n        }\n      }\n    };\n  }\n};\n</code></pre>"},{"location":"api/websocket/#componente-vue","title":"Componente Vue","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Dashboard&lt;/h1&gt;\n    &lt;p&gt;Status: {{ connected ? 'Conectado' : 'Desconectado' }}&lt;/p&gt;\n\n    &lt;div v-if=\"metrics\"&gt;\n      &lt;h2&gt;M\u00e9tricas&lt;/h2&gt;\n      &lt;p&gt;Total de Conversas: {{ metrics.total_conversations }}&lt;/p&gt;\n      &lt;p&gt;Conversas Abertas: {{ metrics.open_conversations }}&lt;/p&gt;\n      &lt;p&gt;Satisfa\u00e7\u00e3o M\u00e9dia: {{ metrics.average_satisfaction }}&lt;/p&gt;\n    &lt;/div&gt;\n\n    &lt;div v-if=\"csatUpdates.length &gt; 0\"&gt;\n      &lt;h2&gt;\u00daltimos CSATs&lt;/h2&gt;\n      &lt;div v-for=\"(csat, index) in csatUpdates\" :key=\"index\"&gt;\n        &lt;p&gt;{{ csat.contact_name }}: {{ csat.rating }} - {{ csat.feedback }}&lt;/p&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data() {\n    return {\n      connected: false,\n      metrics: null,\n      csatUpdates: []\n    };\n  },\n\n  mounted() {\n    const token = localStorage.getItem('niochat_token');\n    if (token) {\n      this.$websocket.connect(token);\n\n      this.$websocket.on('connected', () =&gt; {\n        this.connected = true;\n      });\n\n      this.$websocket.on('disconnected', () =&gt; {\n        this.connected = false;\n      });\n\n      this.$websocket.on('dashboard_metrics', (data) =&gt; {\n        this.metrics = data;\n      });\n\n      this.$websocket.on('csat_update', (data) =&gt; {\n        this.csatUpdates.push(data);\n      });\n    }\n  },\n\n  beforeDestroy() {\n    this.$websocket.disconnect();\n  }\n};\n&lt;/script&gt;\n</code></pre>"},{"location":"api/websocket/#implementacao-angular","title":"Implementa\u00e7\u00e3o Angular","text":""},{"location":"api/websocket/#servico-websocket","title":"Servi\u00e7o WebSocket","text":"<pre><code>import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebSocketService {\n  private ws: WebSocket;\n  private connected = false;\n  private messageSubject = new Subject&lt;any&gt;();\n\n  connect(token: string): void {\n    this.ws = new WebSocket(`ws://localhost:8010/ws/dashboard/?token=${token}`);\n\n    this.ws.onopen = () =&gt; {\n      this.connected = true;\n      this.messageSubject.next({ type: 'connected' });\n    };\n\n    this.ws.onmessage = (event) =&gt; {\n      const data = JSON.parse(event.data);\n      this.messageSubject.next(data);\n    };\n\n    this.ws.onclose = () =&gt; {\n      this.connected = false;\n      this.messageSubject.next({ type: 'disconnected' });\n    };\n\n    this.ws.onerror = (error) =&gt; {\n      this.messageSubject.next({ type: 'error', data: error });\n    };\n  }\n\n  send(data: any): void {\n    if (this.ws &amp;&amp; this.ws.readyState === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify(data));\n    }\n  }\n\n  getMessages(): Observable&lt;any&gt; {\n    return this.messageSubject.asObservable();\n  }\n\n  isConnected(): boolean {\n    return this.connected;\n  }\n\n  disconnect(): void {\n    if (this.ws) {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n}\n</code></pre>"},{"location":"api/websocket/#componente-angular","title":"Componente Angular","text":"<pre><code>import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { WebSocketService } from './websocket.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-dashboard',\n  template: `\n    &lt;div&gt;\n      &lt;h1&gt;Dashboard&lt;/h1&gt;\n      &lt;p&gt;Status: {{ connected ? 'Conectado' : 'Desconectado' }}&lt;/p&gt;\n\n      &lt;div *ngIf=\"metrics\"&gt;\n        &lt;h2&gt;M\u00e9tricas&lt;/h2&gt;\n        &lt;p&gt;Total de Conversas: {{ metrics.total_conversations }}&lt;/p&gt;\n        &lt;p&gt;Conversas Abertas: {{ metrics.open_conversations }}&lt;/p&gt;\n        &lt;p&gt;Satisfa\u00e7\u00e3o M\u00e9dia: {{ metrics.average_satisfaction }}&lt;/p&gt;\n      &lt;/div&gt;\n\n      &lt;div *ngIf=\"csatUpdates.length &gt; 0\"&gt;\n        &lt;h2&gt;\u00daltimos CSATs&lt;/h2&gt;\n        &lt;div *ngFor=\"let csat of csatUpdates; let i = index\"&gt;\n          &lt;p&gt;{{ csat.contact_name }}: {{ csat.rating }} - {{ csat.feedback }}&lt;/p&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  `\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  connected = false;\n  metrics: any = null;\n  csatUpdates: any[] = [];\n  private subscription: Subscription;\n\n  constructor(private websocketService: WebSocketService) {}\n\n  ngOnInit() {\n    const token = localStorage.getItem('niochat_token');\n    if (token) {\n      this.websocketService.connect(token);\n\n      this.subscription = this.websocketService.getMessages().subscribe(message =&gt; {\n        switch (message.type) {\n          case 'connected':\n            this.connected = true;\n            break;\n          case 'disconnected':\n            this.connected = false;\n            break;\n          case 'dashboard_metrics':\n            this.metrics = message.data;\n            break;\n          case 'csat_update':\n            this.csatUpdates.push(message.data);\n            break;\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.websocketService.disconnect();\n  }\n}\n</code></pre>"},{"location":"api/websocket/#tratamento-de-erros","title":"Tratamento de Erros","text":""},{"location":"api/websocket/#reconexao-automatica","title":"Reconex\u00e3o Autom\u00e1tica","text":"<pre><code>class WebSocketWithReconnect {\n  constructor(url, options = {}) {\n    this.url = url;\n    this.options = {\n      maxReconnectAttempts: 5,\n      reconnectInterval: 5000,\n      ...options\n    };\n    this.reconnectAttempts = 0;\n    this.listeners = {};\n  }\n\n  connect() {\n    this.ws = new WebSocket(this.url);\n\n    this.ws.onopen = () =&gt; {\n      this.reconnectAttempts = 0;\n      this.emit('connected');\n    };\n\n    this.ws.onclose = (event) =&gt; {\n      this.emit('disconnected', event);\n      this.attemptReconnect();\n    };\n\n    this.ws.onerror = (error) =&gt; {\n      this.emit('error', error);\n    };\n\n    this.ws.onmessage = (event) =&gt; {\n      const data = JSON.parse(event.data);\n      this.emit(data.type, data.data);\n    };\n  }\n\n  attemptReconnect() {\n    if (this.reconnectAttempts &lt; this.options.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      console.log(`Tentativa de reconex\u00e3o ${this.reconnectAttempts}/${this.options.maxReconnectAttempts}`);\n\n      setTimeout(() =&gt; {\n        this.connect();\n      }, this.options.reconnectInterval);\n    } else {\n      this.emit('reconnect_failed');\n    }\n  }\n\n  send(data) {\n    if (this.ws &amp;&amp; this.ws.readyState === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify(data));\n    } else {\n      console.error('WebSocket n\u00e3o est\u00e1 conectado');\n    }\n  }\n\n  on(event, callback) {\n    if (!this.listeners[event]) {\n      this.listeners[event] = [];\n    }\n    this.listeners[event].push(callback);\n  }\n\n  emit(event, data) {\n    if (this.listeners[event]) {\n      this.listeners[event].forEach(callback =&gt; callback(data));\n    }\n  }\n\n  disconnect() {\n    if (this.ws) {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n}\n</code></pre>"},{"location":"api/websocket/#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<ol> <li>Endpoints - Explore todos os endpoints da API</li> <li>Autentica\u00e7\u00e3o - Aprenda sobre autentica\u00e7\u00e3o</li> <li>Webhooks - Aprenda sobre webhooks</li> </ol>"},{"location":"configuration/supabase/","title":"Configura\u00e7\u00e3o do Supabase","text":"<p>O NioChat utiliza Supabase para dashboard em tempo real, auditoria e sistema CSAT. Este guia explica como configurar a integra\u00e7\u00e3o.</p>"},{"location":"configuration/supabase/#criar-projeto-no-supabase","title":"Criar Projeto no Supabase","text":""},{"location":"configuration/supabase/#1-acessar-supabase","title":"1. Acessar Supabase","text":"<ol> <li>Acesse supabase.com</li> <li>Fa\u00e7a login ou crie uma conta</li> <li>Clique em \"New Project\"</li> </ol>"},{"location":"configuration/supabase/#2-configurar-projeto","title":"2. Configurar Projeto","text":"<ul> <li>Nome: NioChat</li> <li>Database Password: Senha segura</li> <li>Region: Escolha a regi\u00e3o mais pr\u00f3xima</li> <li>Pricing Plan: Free (para desenvolvimento)</li> </ul>"},{"location":"configuration/supabase/#3-obter-credenciais","title":"3. Obter Credenciais","text":"<p>Ap\u00f3s criar o projeto, voc\u00ea encontrar\u00e1: - Project URL: <code>https://seu-projeto.supabase.co</code> - Anon Key: Chave p\u00fablica para autentica\u00e7\u00e3o - Service Role Key: Chave privada para opera\u00e7\u00f5es administrativas</p>"},{"location":"configuration/supabase/#configurar-banco-de-dados","title":"Configurar Banco de Dados","text":""},{"location":"configuration/supabase/#1-executar-sql-no-supabase","title":"1. Executar SQL no Supabase","text":"<p>Acesse o SQL Editor no Supabase e execute:</p> <pre><code>-- Criar tabela de conversas\nCREATE TABLE conversations (\n    id BIGINT PRIMARY KEY,\n    provedor_id BIGINT NOT NULL,\n    contact_id BIGINT NOT NULL,\n    inbox_id BIGINT,\n    status TEXT DEFAULT 'open',\n    assignee_id BIGINT,\n    created_at TIMESTAMPTZ DEFAULT NOW(),\n    updated_at TIMESTAMPTZ DEFAULT NOW(),\n    ended_at TIMESTAMPTZ,\n    additional_attributes JSONB\n);\n\n-- Criar tabela de contatos\nCREATE TABLE contacts (\n    id BIGINT PRIMARY KEY,\n    provedor_id BIGINT NOT NULL,\n    name TEXT NOT NULL,\n    phone TEXT,\n    email TEXT,\n    avatar TEXT,\n    created_at TIMESTAMPTZ DEFAULT NOW(),\n    updated_at TIMESTAMPTZ DEFAULT NOW(),\n    additional_attributes JSONB\n);\n\n-- Criar tabela de mensagens\nCREATE TABLE messages (\n    id BIGINT PRIMARY KEY,\n    conversation_id BIGINT NOT NULL,\n    contact_id BIGINT NOT NULL,\n    provedor_id BIGINT NOT NULL,\n    content TEXT,\n    message_type TEXT DEFAULT 'text',\n    is_from_customer BOOLEAN DEFAULT true,\n    file_url TEXT,\n    file_name TEXT,\n    file_size BIGINT,\n    external_id TEXT,\n    additional_attributes JSONB,\n    created_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Criar tabela de feedback CSAT\nCREATE TABLE csat_feedback (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    provedor_id BIGINT NOT NULL,\n    conversation_id BIGINT NOT NULL,\n    contact_id BIGINT NOT NULL,\n    emoji_rating TEXT,\n    rating_value INTEGER NOT NULL,\n    original_message TEXT,\n    contact_avatar TEXT,\n    feedback_sent_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Criar tabela de auditoria\nCREATE TABLE audit_logs (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    provedor_id BIGINT NOT NULL,\n    user_id BIGINT,\n    action TEXT NOT NULL,\n    details JSONB,\n    timestamp TIMESTAMPTZ DEFAULT NOW()\n);\n</code></pre>"},{"location":"configuration/supabase/#2-configurar-rls-row-level-security","title":"2. Configurar RLS (Row Level Security)","text":"<pre><code>-- Habilitar RLS\nALTER TABLE conversations ENABLE ROW LEVEL SECURITY;\nALTER TABLE contacts ENABLE ROW LEVEL SECURITY;\nALTER TABLE messages ENABLE ROW LEVEL SECURITY;\nALTER TABLE csat_feedback ENABLE ROW LEVEL SECURITY;\nALTER TABLE audit_logs ENABLE ROW LEVEL SECURITY;\n\n-- Pol\u00edticas RLS para isolamento por provedor\nCREATE POLICY \"Isolate by provedor_id\" ON conversations\n    FOR ALL USING (provedor_id = current_setting('request.jwt.claims', true)::json-&gt;&gt;'provedor_id'::bigint);\n\nCREATE POLICY \"Isolate by provedor_id\" ON contacts\n    FOR ALL USING (provedor_id = current_setting('request.jwt.claims', true)::json-&gt;&gt;'provedor_id'::bigint);\n\nCREATE POLICY \"Isolate by provedor_id\" ON messages\n    FOR ALL USING (provedor_id = current_setting('request.jwt.claims', true)::json-&gt;&gt;'provedor_id'::bigint);\n\nCREATE POLICY \"Isolate by provedor_id\" ON csat_feedback\n    FOR ALL USING (provedor_id = current_setting('request.jwt.claims', true)::json-&gt;&gt;'provedor_id'::bigint);\n\nCREATE POLICY \"Isolate by provedor_id\" ON audit_logs\n    FOR ALL USING (provedor_id = current_setting('request.jwt.claims', true)::json-&gt;&gt;'provedor_id'::bigint);\n</code></pre>"},{"location":"configuration/supabase/#3-criar-indices-para-performance","title":"3. Criar \u00cdndices para Performance","text":"<pre><code>-- \u00cdndices para conversas\nCREATE INDEX idx_conversations_provedor_id ON conversations(provedor_id);\nCREATE INDEX idx_conversations_status ON conversations(status);\nCREATE INDEX idx_conversations_assignee_id ON conversations(assignee_id);\nCREATE INDEX idx_conversations_created_at ON conversations(created_at);\n\n-- \u00cdndices para contatos\nCREATE INDEX idx_contacts_provedor_id ON contacts(provedor_id);\nCREATE INDEX idx_contacts_phone ON contacts(phone);\n\n-- \u00cdndices para mensagens\nCREATE INDEX idx_messages_conversation_id ON messages(conversation_id);\nCREATE INDEX idx_messages_provedor_id ON messages(provedor_id);\nCREATE INDEX idx_messages_created_at ON messages(created_at);\n\n-- \u00cdndices para CSAT\nCREATE INDEX idx_csat_provedor_id ON csat_feedback(provedor_id);\nCREATE INDEX idx_csat_rating_value ON csat_feedback(rating_value);\nCREATE INDEX idx_csat_feedback_sent_at ON csat_feedback(feedback_sent_at);\n\n-- \u00cdndices para auditoria\nCREATE INDEX idx_audit_provedor_id ON audit_logs(provedor_id);\nCREATE INDEX idx_audit_user_id ON audit_logs(user_id);\nCREATE INDEX idx_audit_action ON audit_logs(action);\nCREATE INDEX idx_audit_timestamp ON audit_logs(timestamp);\n</code></pre>"},{"location":"configuration/supabase/#configurar-variaveis-de-ambiente","title":"Configurar Vari\u00e1veis de Ambiente","text":""},{"location":"configuration/supabase/#1-arquivo-env","title":"1. Arquivo .env","text":"<pre><code># Supabase\nSUPABASE_URL=https://seu-projeto.supabase.co\nSUPABASE_ANON_KEY=sua_chave_anon_aqui\nSUPABASE_SERVICE_ROLE_KEY=sua_chave_service_role_aqui\n</code></pre>"},{"location":"configuration/supabase/#2-configuracao-no-django","title":"2. Configura\u00e7\u00e3o no Django","text":"<pre><code># settings.py\nSUPABASE_URL = os.getenv('SUPABASE_URL')\nSUPABASE_ANON_KEY = os.getenv('SUPABASE_ANON_KEY')\nSUPABASE_SERVICE_ROLE_KEY = os.getenv('SUPABASE_SERVICE_ROLE_KEY')\n</code></pre>"},{"location":"configuration/supabase/#configurar-dashboard","title":"Configurar Dashboard","text":""},{"location":"configuration/supabase/#1-criar-views-no-supabase","title":"1. Criar Views no Supabase","text":"<pre><code>-- View para m\u00e9tricas de conversas\nCREATE VIEW conversation_metrics AS\nSELECT \n    provedor_id,\n    COUNT(*) as total_conversations,\n    COUNT(CASE WHEN status = 'open' THEN 1 END) as open_conversations,\n    COUNT(CASE WHEN status = 'closed' THEN 1 END) as closed_conversations,\n    AVG(CASE WHEN status = 'closed' THEN \n        EXTRACT(EPOCH FROM (ended_at - created_at))/3600 \n    END) as avg_resolution_time_hours\nFROM conversations\nGROUP BY provedor_id;\n\n-- View para m\u00e9tricas CSAT\nCREATE VIEW csat_metrics AS\nSELECT \n    provedor_id,\n    COUNT(*) as total_feedbacks,\n    AVG(rating_value) as average_rating,\n    COUNT(CASE WHEN rating_value = 5 THEN 1 END) as excellent_count,\n    COUNT(CASE WHEN rating_value &gt;= 4 THEN 1 END) as satisfied_count,\n    COUNT(CASE WHEN rating_value &lt;= 2 THEN 1 END) as unsatisfied_count\nFROM csat_feedback\nGROUP BY provedor_id;\n</code></pre>"},{"location":"configuration/supabase/#2-configurar-real-time","title":"2. Configurar Real-time","text":"<pre><code>-- Habilitar real-time para tabelas\nALTER PUBLICATION supabase_realtime ADD TABLE conversations;\nALTER PUBLICATION supabase_realtime ADD TABLE messages;\nALTER PUBLICATION supabase_realtime ADD TABLE csat_feedback;\nALTER PUBLICATION supabase_realtime ADD TABLE audit_logs;\n</code></pre>"},{"location":"configuration/supabase/#configurar-autenticacao","title":"Configurar Autentica\u00e7\u00e3o","text":""},{"location":"configuration/supabase/#1-configurar-jwt","title":"1. Configurar JWT","text":"<pre><code># settings.py\nSUPABASE_JWT_SECRET = os.getenv('SUPABASE_JWT_SECRET')\n\n# Middleware para JWT\nMIDDLEWARE = [\n    'core.middleware.SupabaseJWTMiddleware',\n    # ... outros middlewares\n]\n</code></pre>"},{"location":"configuration/supabase/#2-middleware-jwt","title":"2. Middleware JWT","text":"<pre><code># core/middleware.py\nimport jwt\nfrom django.conf import settings\n\nclass SupabaseJWTMiddleware:\n    def __init__(self, get_response):\n        self.get_response = get_response\n\n    def __call__(self, request):\n        # Processar JWT do Supabase\n        auth_header = request.META.get('HTTP_AUTHORIZATION')\n        if auth_header and auth_header.startswith('Bearer '):\n            token = auth_header.split(' ')[1]\n            try:\n                payload = jwt.decode(\n                    token, \n                    settings.SUPABASE_JWT_SECRET, \n                    algorithms=['HS256']\n                )\n                request.supabase_user = payload\n            except jwt.InvalidTokenError:\n                pass\n\n        response = self.get_response(request)\n        return response\n</code></pre>"},{"location":"configuration/supabase/#configurar-webhooks","title":"Configurar Webhooks","text":""},{"location":"configuration/supabase/#1-webhook-para-atualizacoes","title":"1. Webhook para Atualiza\u00e7\u00f5es","text":"<pre><code># core/supabase_service.py\nimport requests\nfrom django.conf import settings\n\nclass SupabaseService:\n    def __init__(self):\n        self.url = settings.SUPABASE_URL\n        self.headers = {\n            'apikey': settings.SUPABASE_ANON_KEY,\n            'Authorization': f'Bearer {settings.SUPABASE_ANON_KEY}',\n            'Content-Type': 'application/json'\n        }\n\n    def send_webhook(self, event_type, data):\n        \"\"\"Enviar webhook para atualizar dashboard\"\"\"\n        webhook_url = f\"{self.url}/functions/v1/dashboard-update\"\n\n        payload = {\n            'event': event_type,\n            'data': data,\n            'timestamp': timezone.now().isoformat()\n        }\n\n        response = requests.post(\n            webhook_url,\n            json=payload,\n            headers=self.headers\n        )\n\n        return response.status_code == 200\n</code></pre>"},{"location":"configuration/supabase/#2-funcao-edge-para-webhook","title":"2. Fun\u00e7\u00e3o Edge para Webhook","text":"<pre><code>// supabase/functions/dashboard-update/index.ts\nimport { serve } from \"https://deno.land/std@0.168.0/http/server.ts\"\n\nserve(async (req) =&gt; {\n  const { event, data, timestamp } = await req.json()\n\n  // Processar evento\n  switch (event) {\n    case 'conversation_created':\n      // Atualizar dashboard\n      break\n    case 'message_sent':\n      // Atualizar chat\n      break\n    case 'csat_received':\n      // Atualizar m\u00e9tricas CSAT\n      break\n  }\n\n  return new Response(JSON.stringify({ success: true }), {\n    headers: { \"Content-Type\": \"application/json\" },\n  })\n})\n</code></pre>"},{"location":"configuration/supabase/#monitoramento","title":"Monitoramento","text":""},{"location":"configuration/supabase/#1-configurar-alertas","title":"1. Configurar Alertas","text":"<pre><code>-- Fun\u00e7\u00e3o para alertas\nCREATE OR REPLACE FUNCTION check_conversation_alerts()\nRETURNS TRIGGER AS $$\nBEGIN\n    -- Alertar se conversa aberta h\u00e1 mais de 1 hora\n    IF NEW.status = 'open' AND \n       EXTRACT(EPOCH FROM (NOW() - NEW.created_at))/3600 &gt; 1 THEN\n        -- Enviar notifica\u00e7\u00e3o\n        PERFORM pg_notify('conversation_alert', \n            json_build_object(\n                'conversation_id', NEW.id,\n                'provedor_id', NEW.provedor_id,\n                'alert_type', 'long_open_conversation'\n            )::text\n        );\n    END IF;\n\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Trigger para alertas\nCREATE TRIGGER conversation_alert_trigger\n    AFTER UPDATE ON conversations\n    FOR EACH ROW\n    EXECUTE FUNCTION check_conversation_alerts();\n</code></pre>"},{"location":"configuration/supabase/#2-metricas-de-performance","title":"2. M\u00e9tricas de Performance","text":"<pre><code>-- View para performance\nCREATE VIEW performance_metrics AS\nSELECT \n    provedor_id,\n    DATE_TRUNC('hour', created_at) as hour,\n    COUNT(*) as conversations_per_hour,\n    AVG(EXTRACT(EPOCH FROM (ended_at - created_at))/60) as avg_resolution_minutes,\n    COUNT(CASE WHEN status = 'closed' THEN 1 END) as resolved_conversations\nFROM conversations\nWHERE created_at &gt;= NOW() - INTERVAL '24 hours'\nGROUP BY provedor_id, DATE_TRUNC('hour', created_at)\nORDER BY hour DESC;\n</code></pre>"},{"location":"configuration/supabase/#troubleshooting","title":"Troubleshooting","text":""},{"location":"configuration/supabase/#problemas-comuns","title":"Problemas Comuns","text":""},{"location":"configuration/supabase/#erro-de-conexao","title":"Erro de Conex\u00e3o","text":"<pre><code># Verificar URL\ncurl -I https://seu-projeto.supabase.co\n\n# Verificar chave\ncurl -H \"apikey: sua_chave\" https://seu-projeto.supabase.co/rest/v1/\n</code></pre>"},{"location":"configuration/supabase/#erro-de-rls","title":"Erro de RLS","text":"<pre><code>-- Verificar pol\u00edticas\nSELECT * FROM pg_policies WHERE tablename = 'conversations';\n\n-- Testar acesso\nSELECT * FROM conversations WHERE provedor_id = 1;\n</code></pre>"},{"location":"configuration/supabase/#erro-de-real-time","title":"Erro de Real-time","text":"<pre><code>-- Verificar publica\u00e7\u00e3o\nSELECT * FROM pg_publication_tables WHERE pubname = 'supabase_realtime';\n\n-- Habilitar tabela\nALTER PUBLICATION supabase_realtime ADD TABLE conversations;\n</code></pre>"},{"location":"configuration/supabase/#comandos-uteis","title":"Comandos \u00dateis","text":""},{"location":"configuration/supabase/#verificar-status","title":"Verificar Status","text":"<pre><code># Testar conex\u00e3o\nfrom core.supabase_service import SupabaseService\nsupabase = SupabaseService()\nprint(supabase.test_connection())\n</code></pre>"},{"location":"configuration/supabase/#limpar-dados","title":"Limpar Dados","text":"<pre><code>-- Limpar dados de teste\nDELETE FROM audit_logs WHERE provedor_id = 999;\nDELETE FROM csat_feedback WHERE provedor_id = 999;\nDELETE FROM messages WHERE provedor_id = 999;\nDELETE FROM conversations WHERE provedor_id = 999;\nDELETE FROM contacts WHERE provedor_id = 999;\n</code></pre>"},{"location":"configuration/supabase/#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<ol> <li>Uso - Aprenda a usar o sistema</li> <li>API - Explore a API</li> <li>Troubleshooting - Resolva problemas</li> </ol>"},{"location":"development/contributing/","title":"Contribuindo para o NioChat","text":"<p>Obrigado por seu interesse em contribuir para o NioChat! Este guia explica como contribuir para o projeto.</p>"},{"location":"development/contributing/#como-contribuir","title":"Como Contribuir","text":""},{"location":"development/contributing/#1-reportar-problemas","title":"1. Reportar Problemas","text":"<ul> <li>Use o GitHub Issues</li> <li>Descreva o problema detalhadamente</li> <li>Inclua logs e screenshots se poss\u00edvel</li> <li>Use labels apropriadas</li> </ul>"},{"location":"development/contributing/#2-sugerir-melhorias","title":"2. Sugerir Melhorias","text":"<ul> <li>Use o GitHub Discussions</li> <li>Descreva a melhoria proposta</li> <li>Explique o benef\u00edcio para os usu\u00e1rios</li> <li>Considere a implementa\u00e7\u00e3o</li> </ul>"},{"location":"development/contributing/#3-enviar-pull-requests","title":"3. Enviar Pull Requests","text":"<ul> <li>Fork o reposit\u00f3rio</li> <li>Crie uma branch para sua feature</li> <li>Implemente as mudan\u00e7as</li> <li>Teste suas mudan\u00e7as</li> <li>Envie o pull request</li> </ul>"},{"location":"development/contributing/#processo-de-desenvolvimento","title":"Processo de Desenvolvimento","text":""},{"location":"development/contributing/#1-configurar-ambiente","title":"1. Configurar Ambiente","text":"<pre><code># Fork e clone\ngit clone https://github.com/seu-usuario/niochat.git\ncd niochat\n\n# Configurar backend\ncd backend\npython -m venv venv\nsource venv/bin/activate\npip install -r requirements.txt\n\n# Configurar frontend\ncd ../frontend/frontend\nnpm install\n</code></pre>"},{"location":"development/contributing/#2-criar-branch","title":"2. Criar Branch","text":"<pre><code># Criar branch para feature\ngit checkout -b feature/nova-funcionalidade\n\n# Criar branch para bugfix\ngit checkout -b bugfix/corrigir-problema\n</code></pre>"},{"location":"development/contributing/#3-implementar-mudancas","title":"3. Implementar Mudan\u00e7as","text":"<ul> <li>Siga as conven\u00e7\u00f5es de c\u00f3digo</li> <li>Escreva testes para novas funcionalidades</li> <li>Atualize a documenta\u00e7\u00e3o se necess\u00e1rio</li> <li>Mantenha o c\u00f3digo limpo e leg\u00edvel</li> </ul>"},{"location":"development/contributing/#4-testar-mudancas","title":"4. Testar Mudan\u00e7as","text":"<pre><code># Testes backend\ncd backend\npython manage.py test\n\n# Testes frontend\ncd frontend/frontend\nnpm test\n\n# Lint\nnpm run lint\n</code></pre>"},{"location":"development/contributing/#5-enviar-pull-request","title":"5. Enviar Pull Request","text":"<pre><code># Commit das mudan\u00e7as\ngit add .\ngit commit -m \"feat: adicionar nova funcionalidade\"\n\n# Push para seu fork\ngit push origin feature/nova-funcionalidade\n\n# Criar pull request no GitHub\n</code></pre>"},{"location":"development/contributing/#convencoes-de-codigo","title":"Conven\u00e7\u00f5es de C\u00f3digo","text":""},{"location":"development/contributing/#1-python-backend","title":"1. Python (Backend)","text":"<pre><code># Nomes de vari\u00e1veis e fun\u00e7\u00f5es\ndef process_message(message_text: str) -&gt; str:\n    \"\"\"Processar mensagem com IA.\"\"\"\n    return ai_service.generate_response(message_text)\n\n# Nomes de classes\nclass ConversationService:\n    \"\"\"Servi\u00e7o para gerenciar conversas.\"\"\"\n\n    def create_conversation(self, contact_id: int) -&gt; Conversation:\n        \"\"\"Criar nova conversa.\"\"\"\n        pass\n\n# Nomes de constantes\nMAX_MESSAGE_LENGTH = 1000\nDEFAULT_TIMEOUT = 30\n</code></pre>"},{"location":"development/contributing/#2-javascript-frontend","title":"2. JavaScript (Frontend)","text":"<pre><code>// Nomes de vari\u00e1veis e fun\u00e7\u00f5es\nconst processMessage = (messageText) =&gt; {\n  return aiService.generateResponse(messageText);\n};\n\n// Nomes de componentes\nconst ConversationList = ({ conversations }) =&gt; {\n  return (\n    &lt;div className=\"conversation-list\"&gt;\n      {conversations.map(conversation =&gt; (\n        &lt;ConversationItem key={conversation.id} conversation={conversation} /&gt;\n      ))}\n    &lt;/div&gt;\n  );\n};\n\n// Nomes de constantes\nconst MAX_MESSAGE_LENGTH = 1000;\nconst DEFAULT_TIMEOUT = 30;\n</code></pre>"},{"location":"development/contributing/#3-commits","title":"3. Commits","text":"<pre><code># Formato: tipo: descri\u00e7\u00e3o\nfeat: adicionar nova funcionalidade\nfix: corrigir problema\ndocs: atualizar documenta\u00e7\u00e3o\nstyle: formata\u00e7\u00e3o de c\u00f3digo\nrefactor: refatorar c\u00f3digo\ntest: adicionar testes\nchore: tarefas de manuten\u00e7\u00e3o\n</code></pre>"},{"location":"development/contributing/#estrutura-de-pull-request","title":"Estrutura de Pull Request","text":""},{"location":"development/contributing/#1-titulo","title":"1. T\u00edtulo","text":"<ul> <li>Descreva claramente a mudan\u00e7a</li> <li>Use o formato: <code>tipo: descri\u00e7\u00e3o</code></li> <li>Seja conciso mas descritivo</li> </ul>"},{"location":"development/contributing/#2-descricao","title":"2. Descri\u00e7\u00e3o","text":"<pre><code>## Descri\u00e7\u00e3o\nDescreva o que foi implementado ou corrigido.\n\n## Tipo de Mudan\u00e7a\n- [ ] Bug fix\n- [ ] Nova funcionalidade\n- [ ] Breaking change\n- [ ] Documenta\u00e7\u00e3o\n\n## Como Testar\n1. Passo 1\n2. Passo 2\n3. Passo 3\n\n## Checklist\n- [ ] C\u00f3digo testado\n- [ ] Documenta\u00e7\u00e3o atualizada\n- [ ] Testes adicionados\n- [ ] Lint passou\n</code></pre>"},{"location":"development/contributing/#3-checklist","title":"3. Checklist","text":"<ul> <li>[ ] C\u00f3digo testado localmente</li> <li>[ ] Testes unit\u00e1rios passaram</li> <li>[ ] Lint passou</li> <li>[ ] Documenta\u00e7\u00e3o atualizada</li> <li>[ ] Screenshots inclu\u00eddas (se aplic\u00e1vel)</li> </ul>"},{"location":"development/contributing/#tipos-de-contribuicao","title":"Tipos de Contribui\u00e7\u00e3o","text":""},{"location":"development/contributing/#1-bug-fixes","title":"1. Bug Fixes","text":"<ul> <li>Identifique o problema</li> <li>Crie um teste que reproduza o bug</li> <li>Implemente a corre\u00e7\u00e3o</li> <li>Verifique que o teste passa</li> <li>Documente a corre\u00e7\u00e3o</li> </ul>"},{"location":"development/contributing/#2-novas-funcionalidades","title":"2. Novas Funcionalidades","text":"<ul> <li>Discuta a funcionalidade primeiro</li> <li>Implemente com testes</li> <li>Atualize documenta\u00e7\u00e3o</li> <li>Considere impacto na performance</li> <li>Mantenha compatibilidade</li> </ul>"},{"location":"development/contributing/#3-melhorias-de-performance","title":"3. Melhorias de Performance","text":"<ul> <li>Me\u00e7a o impacto</li> <li>Documente as melhorias</li> <li>Mantenha funcionalidade</li> <li>Teste em diferentes cen\u00e1rios</li> <li>Considere trade-offs</li> </ul>"},{"location":"development/contributing/#4-documentacao","title":"4. Documenta\u00e7\u00e3o","text":"<ul> <li>Seja claro e conciso</li> <li>Use exemplos pr\u00e1ticos</li> <li>Mantenha consist\u00eancia</li> <li>Atualize regularmente</li> <li>Inclua screenshots</li> </ul>"},{"location":"development/contributing/#testes","title":"Testes","text":""},{"location":"development/contributing/#1-testes-unitarios","title":"1. Testes Unit\u00e1rios","text":"<pre><code># backend/tests/test_models.py\nclass ConversationModelTest(TestCase):\n    def test_create_conversation(self):\n        \"\"\"Testar cria\u00e7\u00e3o de conversa.\"\"\"\n        contact = Contact.objects.create(name=\"Teste\")\n        conversation = Conversation.objects.create(contact=contact)\n        self.assertEqual(conversation.status, 'open')\n</code></pre>"},{"location":"development/contributing/#2-testes-de-integracao","title":"2. Testes de Integra\u00e7\u00e3o","text":"<pre><code># backend/tests/test_api.py\nclass ConversationAPITest(APITestCase):\n    def test_list_conversations(self):\n        \"\"\"Testar listagem de conversas.\"\"\"\n        response = self.client.get('/api/conversations/')\n        self.assertEqual(response.status_code, 200)\n</code></pre>"},{"location":"development/contributing/#3-testes-frontend","title":"3. Testes Frontend","text":"<pre><code>// frontend/tests/ConversationList.test.jsx\nimport { render, screen } from '@testing-library/react';\nimport ConversationList from '../components/ConversationList';\n\ntest('renders conversation list', () =&gt; {\n  const conversations = [\n    { id: 1, name: 'Teste', status: 'open' }\n  ];\n  render(&lt;ConversationList conversations={conversations} /&gt;);\n  expect(screen.getByText('Teste')).toBeInTheDocument();\n});\n</code></pre>"},{"location":"development/contributing/#code-review","title":"Code Review","text":""},{"location":"development/contributing/#1-como-revisar","title":"1. Como Revisar","text":"<ul> <li>Verifique a funcionalidade</li> <li>Teste o c\u00f3digo localmente</li> <li>Verifique testes</li> <li>Comente sugest\u00f5es construtivas</li> <li>Aprove se estiver satisfeito</li> </ul>"},{"location":"development/contributing/#2-o-que-procurar","title":"2. O que Procurar","text":"<ul> <li>Funcionalidade correta</li> <li>C\u00f3digo limpo e leg\u00edvel</li> <li>Testes adequados</li> <li>Documenta\u00e7\u00e3o atualizada</li> <li>Performance adequada</li> <li>Seguran\u00e7a</li> </ul>"},{"location":"development/contributing/#3-comentarios","title":"3. Coment\u00e1rios","text":"<ul> <li>Seja construtivo</li> <li>Explique o porqu\u00ea</li> <li>Sugira alternativas</li> <li>Reconhe\u00e7a boas pr\u00e1ticas</li> <li>Seja respeitoso</li> </ul>"},{"location":"development/contributing/#comunidade","title":"Comunidade","text":""},{"location":"development/contributing/#1-codigo-de-conduta","title":"1. C\u00f3digo de Conduta","text":"<ul> <li>Seja respeitoso</li> <li>Seja inclusivo</li> <li>Seja construtivo</li> <li>Seja paciente</li> <li>Seja colaborativo</li> </ul>"},{"location":"development/contributing/#2-comunicacao","title":"2. Comunica\u00e7\u00e3o","text":"<ul> <li>Use issues para problemas</li> <li>Use discussions para ideias</li> <li>Use pull requests para c\u00f3digo</li> <li>Seja claro e direto</li> <li>Seja paciente com respostas</li> </ul>"},{"location":"development/contributing/#3-suporte","title":"3. Suporte","text":"<ul> <li>Leia a documenta\u00e7\u00e3o primeiro</li> <li>Procure em issues existentes</li> <li>Seja espec\u00edfico no problema</li> <li>Inclua logs e screenshots</li> <li>Seja paciente</li> </ul>"},{"location":"development/contributing/#roadmap","title":"Roadmap","text":""},{"location":"development/contributing/#1-funcionalidades-planejadas","title":"1. Funcionalidades Planejadas","text":"<ul> <li>[ ] Integra\u00e7\u00e3o com Telegram</li> <li>[ ] Sistema de templates</li> <li>[ ] Analytics avan\u00e7ados</li> <li>[ ] API GraphQL</li> <li>[ ] Mobile app</li> </ul>"},{"location":"development/contributing/#2-melhorias-tecnicas","title":"2. Melhorias T\u00e9cnicas","text":"<ul> <li>[ ] Testes E2E</li> <li>[ ] CI/CD melhorado</li> <li>[ ] Monitoramento avan\u00e7ado</li> <li>[ ] Cache distribu\u00eddo</li> <li>[ ] Microservi\u00e7os</li> </ul>"},{"location":"development/contributing/#3-documentacao","title":"3. Documenta\u00e7\u00e3o","text":"<ul> <li>[ ] Tutoriais em v\u00eddeo</li> <li>[ ] Exemplos pr\u00e1ticos</li> <li>[ ] Guias de deploy</li> <li>[ ] Troubleshooting</li> <li>[ ] FAQ</li> </ul>"},{"location":"development/contributing/#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<ol> <li>Estrutura - Entenda a estrutura do projeto</li> <li>Troubleshooting - Resolva problemas</li> <li>API - Explore a API</li> <li>Configura\u00e7\u00e3o - Configure integra\u00e7\u00f5es</li> </ol>"},{"location":"development/contributing/#contato","title":"Contato","text":"<ul> <li>GitHub: juniorssilvaa/niochat</li> <li>Email: suporte@niochat.com.br</li> <li>Discord: Link do servidor</li> <li>Twitter: @niochat</li> </ul> <p>Obrigado por contribuir para o NioChat! \ud83d\ude80</p>"},{"location":"development/structure/","title":"Estrutura do Projeto","text":"<p>Este documento explica a estrutura do projeto NioChat e como navegar pelo c\u00f3digo.</p>"},{"location":"development/structure/#estrutura-geral","title":"Estrutura Geral","text":"<pre><code>niochat/\n\u251c\u2500\u2500 backend/                 # Django Backend\n\u2502   \u251c\u2500\u2500 niochat/           # Configura\u00e7\u00f5es Django\n\u2502   \u251c\u2500\u2500 core/              # Aplica\u00e7\u00e3o principal\n\u2502   \u251c\u2500\u2500 conversations/      # Sistema de conversas\n\u2502   \u251c\u2500\u2500 integrations/       # Integra\u00e7\u00f5es externas\n\u2502   \u2514\u2500\u2500 requirements.txt    # Depend\u00eancias Python\n\u251c\u2500\u2500 frontend/               # React Frontend\n\u2502   \u2514\u2500\u2500 frontend/           # Aplica\u00e7\u00e3o React\n\u2502       \u251c\u2500\u2500 src/           # C\u00f3digo fonte\n\u2502       \u251c\u2500\u2500 public/        # Arquivos p\u00fablicos\n\u2502       \u2514\u2500\u2500 package.json   # Depend\u00eancias Node.js\n\u251c\u2500\u2500 docs/                   # Documenta\u00e7\u00e3o\n\u251c\u2500\u2500 nginx/                  # Configura\u00e7\u00f5es Nginx\n\u251c\u2500\u2500 systemd/                # Servi\u00e7os Systemd\n\u2514\u2500\u2500 scripts/                # Scripts utilit\u00e1rios\n</code></pre>"},{"location":"development/structure/#backend-django","title":"Backend (Django)","text":""},{"location":"development/structure/#estrutura-do-backend","title":"Estrutura do Backend","text":"<pre><code>backend/\n\u251c\u2500\u2500 niochat/                # Configura\u00e7\u00f5es Django\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 settings.py         # Configura\u00e7\u00f5es\n\u2502   \u251c\u2500\u2500 urls.py            # URLs principais\n\u2502   \u251c\u2500\u2500 wsgi.py            # WSGI\n\u2502   \u251c\u2500\u2500 asgi.py            # ASGI\n\u2502   \u2514\u2500\u2500 celery.py          # Configura\u00e7\u00e3o Celery\n\u251c\u2500\u2500 core/                   # Aplica\u00e7\u00e3o principal\n\u2502   \u251c\u2500\u2500 models.py          # Modelos principais\n\u2502   \u251c\u2500\u2500 views.py           # Views principais\n\u2502   \u251c\u2500\u2500 serializers.py     # Serializers\n\u2502   \u251c\u2500\u2500 urls.py            # URLs da API\n\u2502   \u251c\u2500\u2500 openai_service.py  # Servi\u00e7o OpenAI\n\u2502   \u251c\u2500\u2500 supabase_service.py # Servi\u00e7o Supabase\n\u2502   \u251c\u2500\u2500 sgp_client.py      # Cliente SGP\n\u2502   \u2514\u2500\u2500 uazapi_client.py   # Cliente Uazapi\n\u251c\u2500\u2500 conversations/          # Sistema de conversas\n\u2502   \u251c\u2500\u2500 models.py          # Modelos de conversa\n\u2502   \u251c\u2500\u2500 views.py           # Views de conversa\n\u2502   \u251c\u2500\u2500 serializers.py     # Serializers\n\u2502   \u251c\u2500\u2500 urls.py            # URLs\n\u2502   \u251c\u2500\u2500 csat_automation.py # Automa\u00e7\u00e3o CSAT\n\u2502   \u251c\u2500\u2500 csat_service.py    # Servi\u00e7o CSAT\n\u2502   \u251c\u2500\u2500 tasks.py           # Tarefas Celery\n\u2502   \u2514\u2500\u2500 signals.py         # Signals Django\n\u251c\u2500\u2500 integrations/           # Integra\u00e7\u00f5es\n\u2502   \u251c\u2500\u2500 models.py          # Modelos de integra\u00e7\u00e3o\n\u2502   \u251c\u2500\u2500 views.py           # Views de integra\u00e7\u00e3o\n\u2502   \u251c\u2500\u2500 urls.py            # URLs\n\u2502   \u2514\u2500\u2500 utils.py           # Utilit\u00e1rios\n\u251c\u2500\u2500 manage.py              # Script de gerenciamento\n\u2514\u2500\u2500 requirements.txt       # Depend\u00eancias\n</code></pre>"},{"location":"development/structure/#aplicacoes-django","title":"Aplica\u00e7\u00f5es Django","text":""},{"location":"development/structure/#1-core-aplicacao-principal","title":"1. Core (Aplica\u00e7\u00e3o Principal)","text":"<ul> <li>Responsabilidade: Funcionalidades centrais</li> <li>Modelos: User, Provedor, Canal, Company</li> <li>Views: Autentica\u00e7\u00e3o, dashboard, configura\u00e7\u00f5es</li> <li>Servi\u00e7os: OpenAI, Supabase, SGP, Uazapi</li> </ul>"},{"location":"development/structure/#2-conversations-sistema-de-conversas","title":"2. Conversations (Sistema de Conversas)","text":"<ul> <li>Responsabilidade: Gerenciamento de conversas</li> <li>Modelos: Conversation, Message, Contact, Inbox</li> <li>Views: CRUD de conversas, mensagens</li> <li>Features: CSAT, transfer\u00eancia, atribui\u00e7\u00e3o</li> </ul>"},{"location":"development/structure/#3-integrations-integracoes","title":"3. Integrations (Integra\u00e7\u00f5es)","text":"<ul> <li>Responsabilidade: Integra\u00e7\u00f5es externas</li> <li>Modelos: Integration, Webhook</li> <li>Views: Webhooks, configura\u00e7\u00f5es</li> <li>Features: WhatsApp, Telegram, Email</li> </ul>"},{"location":"development/structure/#frontend-react","title":"Frontend (React)","text":""},{"location":"development/structure/#estrutura-do-frontend","title":"Estrutura do Frontend","text":"<pre><code>frontend/frontend/\n\u251c\u2500\u2500 src/                    # C\u00f3digo fonte\n\u2502   \u251c\u2500\u2500 components/         # Componentes React\n\u2502   \u2502   \u251c\u2500\u2500 dashboard/     # Componentes do dashboard\n\u2502   \u2502   \u251c\u2500\u2500 chat/          # Componentes de chat\n\u2502   \u2502   \u251c\u2500\u2500 ui/            # Componentes UI\n\u2502   \u2502   \u2514\u2500\u2500 layout/        # Componentes de layout\n\u2502   \u251c\u2500\u2500 hooks/             # Custom hooks\n\u2502   \u251c\u2500\u2500 services/          # Servi\u00e7os API\n\u2502   \u251c\u2500\u2500 utils/             # Utilit\u00e1rios\n\u2502   \u251c\u2500\u2500 context/           # Context API\n\u2502   \u251c\u2500\u2500 types/             # TypeScript types\n\u2502   \u2514\u2500\u2500 App.jsx            # Componente principal\n\u251c\u2500\u2500 public/                 # Arquivos p\u00fablicos\n\u251c\u2500\u2500 package.json           # Depend\u00eancias\n\u2514\u2500\u2500 vite.config.js         # Configura\u00e7\u00e3o Vite\n</code></pre>"},{"location":"development/structure/#componentes-principais","title":"Componentes Principais","text":""},{"location":"development/structure/#1-dashboard","title":"1. Dashboard","text":"<ul> <li>DashboardPrincipal: Dashboard principal</li> <li>ConversationAnalysis: An\u00e1lise de conversas</li> <li>AgentPerformanceTable: Performance dos agentes</li> <li>CSATDashboard: Dashboard CSAT</li> </ul>"},{"location":"development/structure/#2-chat","title":"2. Chat","text":"<ul> <li>ConversationList: Lista de conversas</li> <li>ChatInterface: Interface de chat</li> <li>MessageList: Lista de mensagens</li> <li>MessageInput: Input de mensagem</li> </ul>"},{"location":"development/structure/#3-ui","title":"3. UI","text":"<ul> <li>Button: Bot\u00e3o reutiliz\u00e1vel</li> <li>Modal: Modal reutiliz\u00e1vel</li> <li>Table: Tabela reutiliz\u00e1vel</li> <li>Form: Formul\u00e1rio reutiliz\u00e1vel</li> </ul>"},{"location":"development/structure/#configuracoes","title":"Configura\u00e7\u00f5es","text":""},{"location":"development/structure/#1-django-settings","title":"1. Django Settings","text":"<pre><code># settings.py\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'channels',\n    'core',\n    'conversations',\n    'integrations',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n</code></pre>"},{"location":"development/structure/#2-urls-principais","title":"2. URLs Principais","text":"<pre><code># niochat/urls.py\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include('core.urls')),\n    path('api/', include('conversations.urls')),\n    path('api/', include('integrations.urls')),\n    path('webhook/evolution-uazapi/', webhook_evolution_uazapi),\n]\n</code></pre>"},{"location":"development/structure/#3-configuracao-celery","title":"3. Configura\u00e7\u00e3o Celery","text":"<pre><code># niochat/celery.py\nfrom celery import Celery\nfrom django.conf import settings\n\napp = Celery('niochat')\napp.config_from_object('django.conf:settings', namespace='CELERY')\napp.autodiscover_tasks()\n</code></pre>"},{"location":"development/structure/#modelos-de-dados","title":"Modelos de Dados","text":""},{"location":"development/structure/#1-core-models","title":"1. Core Models","text":"<pre><code># core/models.py\nclass Provedor(models.Model):\n    name = models.CharField(max_length=100)\n    description = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n\nclass User(AbstractUser):\n    provedor = models.ForeignKey(Provedor, on_delete=models.CASCADE)\n    is_agent = models.BooleanField(default=False)\n    is_admin = models.BooleanField(default=False)\n</code></pre>"},{"location":"development/structure/#2-conversation-models","title":"2. Conversation Models","text":"<pre><code># conversations/models.py\nclass Conversation(models.Model):\n    contact = models.ForeignKey(Contact, on_delete=models.CASCADE)\n    provedor = models.ForeignKey(Provedor, on_delete=models.CASCADE)\n    status = models.CharField(max_length=20, default='open')\n    assignee = models.ForeignKey(User, on_delete=models.SET_NULL, null=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n\nclass Message(models.Model):\n    conversation = models.ForeignKey(Conversation, on_delete=models.CASCADE)\n    content = models.TextField()\n    message_type = models.CharField(max_length=20, default='text')\n    is_from_customer = models.BooleanField(default=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n</code></pre>"},{"location":"development/structure/#apis-e-endpoints","title":"APIs e Endpoints","text":""},{"location":"development/structure/#1-core-api","title":"1. Core API","text":"<pre><code># core/urls.py\nurlpatterns = [\n    path('auth/login/', CustomAuthToken.as_view()),\n    path('auth/me/', UserMeView.as_view()),\n    path('dashboard/stats/', DashboardStatsView.as_view()),\n    path('atendimento/ia/', AtendimentoIAView.as_view()),\n]\n</code></pre>"},{"location":"development/structure/#2-conversations-api","title":"2. Conversations API","text":"<pre><code># conversations/urls.py\nurlpatterns = [\n    path('conversations/', ConversationViewSet.as_view()),\n    path('messages/', MessageViewSet.as_view()),\n    path('csat/feedbacks/', CSATFeedbackViewSet.as_view()),\n]\n</code></pre>"},{"location":"development/structure/#servicos","title":"Servi\u00e7os","text":""},{"location":"development/structure/#1-openai-service","title":"1. OpenAI Service","text":"<pre><code># core/openai_service.py\nclass OpenAIService:\n    def generate_response(self, message, context):\n        # Gerar resposta da IA\n        pass\n\n    def transcribe_audio(self, audio_file):\n        # Transcrever \u00e1udio\n        pass\n\n    def analyze_sentiment(self, text):\n        # Analisar sentimento\n        pass\n</code></pre>"},{"location":"development/structure/#2-supabase-service","title":"2. Supabase Service","text":"<pre><code># core/supabase_service.py\nclass SupabaseService:\n    def save_conversation(self, data):\n        # Salvar conversa\n        pass\n\n    def save_message(self, data):\n        # Salvar mensagem\n        pass\n\n    def save_csat(self, data):\n        # Salvar CSAT\n        pass\n</code></pre>"},{"location":"development/structure/#tarefas-celery","title":"Tarefas Celery","text":""},{"location":"development/structure/#1-csat-automation","title":"1. CSAT Automation","text":"<pre><code># conversations/tasks.py\n@shared_task\ndef send_csat_message(csat_request_id):\n    # Enviar mensagem CSAT\n    pass\n\n@shared_task\ndef process_csat_response(message_text, conversation_id):\n    # Processar resposta CSAT\n    pass\n</code></pre>"},{"location":"development/structure/#2-background-tasks","title":"2. Background Tasks","text":"<pre><code># conversations/tasks.py\n@shared_task\ndef sync_to_supabase():\n    # Sincronizar com Supabase\n    pass\n\n@shared_task\ndef cleanup_old_data():\n    # Limpar dados antigos\n    pass\n</code></pre>"},{"location":"development/structure/#websocket","title":"WebSocket","text":""},{"location":"development/structure/#1-consumers","title":"1. Consumers","text":"<pre><code># conversations/consumers.py\nclass DashboardConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        # Conectar ao WebSocket\n        pass\n\n    async def disconnect(self, close_code):\n        # Desconectar\n        pass\n\n    async def receive(self, text_data):\n        # Receber mensagem\n        pass\n</code></pre>"},{"location":"development/structure/#2-routing","title":"2. Routing","text":"<pre><code># conversations/routing.py\nwebsocket_urlpatterns = [\n    path('ws/dashboard/', DashboardConsumer.as_asgi()),\n    path('ws/chat/', ChatConsumer.as_asgi()),\n]\n</code></pre>"},{"location":"development/structure/#testes","title":"Testes","text":""},{"location":"development/structure/#1-testes-unitarios","title":"1. Testes Unit\u00e1rios","text":"<pre><code># tests/test_models.py\nclass ConversationModelTest(TestCase):\n    def test_create_conversation(self):\n        # Testar cria\u00e7\u00e3o de conversa\n        pass\n</code></pre>"},{"location":"development/structure/#2-testes-de-integracao","title":"2. Testes de Integra\u00e7\u00e3o","text":"<pre><code># tests/test_api.py\nclass ConversationAPITest(APITestCase):\n    def test_list_conversations(self):\n        # Testar API de conversas\n        pass\n</code></pre>"},{"location":"development/structure/#deploy","title":"Deploy","text":""},{"location":"development/structure/#1-docker","title":"1. Docker","text":"<pre><code># Dockerfile.backend\nFROM python:3.12\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install -r requirements.txt\nCOPY . .\nCMD [\"python\", \"manage.py\", \"runserver\", \"0.0.0.0:8010\"]\n</code></pre>"},{"location":"development/structure/#2-systemd","title":"2. Systemd","text":"<pre><code># systemd/niochat-backend.service\n[Unit]\nDescription=NioChat Backend\nAfter=network.target\n\n[Service]\nType=exec\nUser=www-data\nWorkingDirectory=/opt/niochat/backend\nExecStart=/opt/niochat/backend/venv/bin/python manage.py runserver 0.0.0.0:8010\nRestart=always\n</code></pre>"},{"location":"development/structure/#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<ol> <li>Contribui\u00e7\u00e3o - Como contribuir</li> <li>Troubleshooting - Resolver problemas</li> <li>API - Explore a API</li> <li>Configura\u00e7\u00e3o - Configure integra\u00e7\u00f5es</li> </ol>"},{"location":"development/troubleshooting/","title":"Troubleshooting","text":"<p>Este guia ajuda a resolver problemas comuns no NioChat.</p>"},{"location":"development/troubleshooting/#problemas-de-instalacao","title":"Problemas de Instala\u00e7\u00e3o","text":""},{"location":"development/troubleshooting/#python-nao-encontrado","title":"Python n\u00e3o encontrado","text":"<pre><code># Ubuntu/Debian\nsudo apt install python3 python3-pip python3-venv\n\n# CentOS/RHEL\nsudo yum install python3 python3-pip\n</code></pre>"},{"location":"development/troubleshooting/#nodejs-nao-encontrado","title":"Node.js n\u00e3o encontrado","text":"<pre><code># Ubuntu/Debian\ncurl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -\nsudo apt install nodejs\n\n# CentOS/RHEL\ncurl -fsSL https://rpm.nodesource.com/setup_16.x | sudo bash -\nsudo yum install nodejs\n</code></pre>"},{"location":"development/troubleshooting/#postgresql-nao-encontrado","title":"PostgreSQL n\u00e3o encontrado","text":"<pre><code># Ubuntu/Debian\nsudo apt install postgresql postgresql-contrib\n\n# CentOS/RHEL\nsudo yum install postgresql postgresql-server\nsudo postgresql-setup initdb\nsudo systemctl enable postgresql\nsudo systemctl start postgresql\n</code></pre>"},{"location":"development/troubleshooting/#redis-nao-encontrado","title":"Redis n\u00e3o encontrado","text":"<pre><code># Ubuntu/Debian\nsudo apt install redis-server\n\n# CentOS/RHEL\nsudo yum install redis\nsudo systemctl enable redis\nsudo systemctl start redis\n</code></pre>"},{"location":"development/troubleshooting/#problemas-de-backend","title":"Problemas de Backend","text":""},{"location":"development/troubleshooting/#erro-de-migracao","title":"Erro de migra\u00e7\u00e3o","text":"<pre><code># Verificar status das migra\u00e7\u00f5es\npython manage.py showmigrations\n\n# Aplicar migra\u00e7\u00f5es pendentes\npython manage.py migrate\n\n# Resetar migra\u00e7\u00f5es (cuidado!)\npython manage.py migrate --fake-initial\n</code></pre>"},{"location":"development/troubleshooting/#erro-de-banco-de-dados","title":"Erro de banco de dados","text":"<pre><code># Verificar conex\u00e3o\npython manage.py dbshell\n\n# Testar conex\u00e3o\npython manage.py shell\n&gt;&gt;&gt; from django.db import connection\n&gt;&gt;&gt; connection.ensure_connection()\n</code></pre>"},{"location":"development/troubleshooting/#erro-de-redis","title":"Erro de Redis","text":"<pre><code># Verificar status\nredis-cli ping\n\n# Verificar logs\nsudo journalctl -u redis-server\n</code></pre>"},{"location":"development/troubleshooting/#erro-de-celery","title":"Erro de Celery","text":"<pre><code># Verificar status\ncelery -A niochat inspect active\n\n# Verificar workers\ncelery -A niochat inspect stats\n\n# Reiniciar worker\nsudo systemctl restart niochat-celery\n</code></pre>"},{"location":"development/troubleshooting/#problemas-de-frontend","title":"Problemas de Frontend","text":""},{"location":"development/troubleshooting/#erro-de-build","title":"Erro de build","text":"<pre><code># Limpar cache\nnpm cache clean --force\n\n# Remover node_modules\nrm -rf node_modules package-lock.json\n\n# Reinstalar\nnpm install\n\n# Build\nnpm run build\n</code></pre>"},{"location":"development/troubleshooting/#erro-de-dependencias","title":"Erro de depend\u00eancias","text":"<pre><code># Verificar vers\u00e3o do Node\nnode --version\n\n# Atualizar npm\nnpm install -g npm@latest\n\n# Verificar depend\u00eancias\nnpm audit\nnpm audit fix\n</code></pre>"},{"location":"development/troubleshooting/#problemas-de-api","title":"Problemas de API","text":""},{"location":"development/troubleshooting/#erro-500","title":"Erro 500","text":"<pre><code># Verificar logs\ntail -f logs/django.log\n\n# Verificar settings\npython manage.py check\n\n# Verificar banco\npython manage.py dbshell\n</code></pre>"},{"location":"development/troubleshooting/#erro-404","title":"Erro 404","text":"<pre><code># Verificar URLs\npython manage.py show_urls\n\n# Verificar rotas\npython manage.py shell\n&gt;&gt;&gt; from django.urls import reverse\n&gt;&gt;&gt; reverse('api:conversations-list')\n</code></pre>"},{"location":"development/troubleshooting/#erro-de-autenticacao","title":"Erro de autentica\u00e7\u00e3o","text":"<pre><code># Verificar tokens\npython manage.py shell\n&gt;&gt;&gt; from rest_framework.authtoken.models import Token\n&gt;&gt;&gt; Token.objects.all()\n\n# Criar token\npython manage.py shell\n&gt;&gt;&gt; from django.contrib.auth.models import User\n&gt;&gt;&gt; from rest_framework.authtoken.models import Token\n&gt;&gt;&gt; user = User.objects.get(username='admin')\n&gt;&gt;&gt; token = Token.objects.create(user=user)\n&gt;&gt;&gt; print(token.key)\n</code></pre>"},{"location":"development/troubleshooting/#problemas-de-websocket","title":"Problemas de WebSocket","text":""},{"location":"development/troubleshooting/#conexao-falha","title":"Conex\u00e3o falha","text":"<pre><code>// Verificar URL\nconst ws = new WebSocket('ws://localhost:8010/ws/dashboard/');\n\n// Verificar autentica\u00e7\u00e3o\nconst ws = new WebSocket('ws://localhost:8010/ws/dashboard/?token=seu_token');\n\n// Verificar logs\ntail -f logs/django.log\n</code></pre>"},{"location":"development/troubleshooting/#mensagens-nao-chegam","title":"Mensagens n\u00e3o chegam","text":"<pre><code># Verificar status do WebSocket\npython manage.py shell\n&gt;&gt;&gt; from channels.layers import get_channel_layer\n&gt;&gt;&gt; channel_layer = get_channel_layer()\n&gt;&gt;&gt; channel_layer.send('test', {'type': 'test'})\n</code></pre>"},{"location":"development/troubleshooting/#problemas-de-integracao","title":"Problemas de Integra\u00e7\u00e3o","text":""},{"location":"development/troubleshooting/#uazapi-nao-conecta","title":"Uazapi n\u00e3o conecta","text":"<pre><code># Verificar URL\ncurl -I https://seu-provedor.uazapi.com\n\n# Verificar token\ncurl -H \"Authorization: Bearer seu_token\" https://seu-provedor.uazapi.com/api/status\n</code></pre>"},{"location":"development/troubleshooting/#openai-nao-responde","title":"OpenAI n\u00e3o responde","text":"<pre><code># Verificar API key\npython manage.py shell\n&gt;&gt;&gt; from core.openai_service import openai_service\n&gt;&gt;&gt; openai_service.test_connection()\n</code></pre>"},{"location":"development/troubleshooting/#supabase-nao-conecta","title":"Supabase n\u00e3o conecta","text":"<pre><code># Verificar configura\u00e7\u00e3o\npython manage.py shell\n&gt;&gt;&gt; from core.supabase_service import supabase_service\n&gt;&gt;&gt; supabase_service.test_connection()\n</code></pre>"},{"location":"development/troubleshooting/#problemas-de-performance","title":"Problemas de Performance","text":""},{"location":"development/troubleshooting/#lento","title":"Lento","text":"<pre><code># Verificar CPU\ntop\n\n# Verificar mem\u00f3ria\nfree -h\n\n# Verificar disco\ndf -h\n\n# Verificar processos\nps aux | grep python\n</code></pre>"},{"location":"development/troubleshooting/#alto-uso-de-memoria","title":"Alto uso de mem\u00f3ria","text":"<pre><code># Verificar Redis\nredis-cli info memory\n\n# Verificar PostgreSQL\nsudo -u postgres psql -c \"SELECT * FROM pg_stat_activity;\"\n\n# Verificar Celery\ncelery -A niochat inspect stats\n</code></pre>"},{"location":"development/troubleshooting/#problemas-de-logs","title":"Problemas de Logs","text":""},{"location":"development/troubleshooting/#logs-nao-aparecem","title":"Logs n\u00e3o aparecem","text":"<pre><code># Verificar configura\u00e7\u00e3o\npython manage.py shell\n&gt;&gt;&gt; import logging\n&gt;&gt;&gt; logger = logging.getLogger('django')\n&gt;&gt;&gt; logger.info('Teste')\n\n# Verificar arquivo de log\nls -la logs/\ntail -f logs/django.log\n</code></pre>"},{"location":"development/troubleshooting/#logs-muito-grandes","title":"Logs muito grandes","text":"<pre><code># Rotacionar logs\nsudo logrotate -f /etc/logrotate.d/django\n\n# Limpar logs antigos\nfind logs/ -name \"*.log\" -mtime +7 -delete\n</code></pre>"},{"location":"development/troubleshooting/#problemas-de-seguranca","title":"Problemas de Seguran\u00e7a","text":""},{"location":"development/troubleshooting/#erro-de-csrf","title":"Erro de CSRF","text":"<pre><code># Verificar configura\u00e7\u00e3o\npython manage.py shell\n&gt;&gt;&gt; from django.conf import settings\n&gt;&gt;&gt; settings.CSRF_TRUSTED_ORIGINS\n</code></pre>"},{"location":"development/troubleshooting/#erro-de-cors","title":"Erro de CORS","text":"<pre><code># Verificar configura\u00e7\u00e3o\npython manage.py shell\n&gt;&gt;&gt; from django.conf import settings\n&gt;&gt;&gt; settings.CORS_ALLOWED_ORIGINS\n</code></pre>"},{"location":"development/troubleshooting/#problemas-de-deploy","title":"Problemas de Deploy","text":""},{"location":"development/troubleshooting/#build-falha","title":"Build falha","text":"<pre><code># Verificar depend\u00eancias\npip check\n\n# Verificar requirements\npip install -r requirements.txt\n\n# Verificar Python\npython --version\n</code></pre>"},{"location":"development/troubleshooting/#deploy-nao-funciona","title":"Deploy n\u00e3o funciona","text":"<pre><code># Verificar permiss\u00f5es\nls -la /opt/niochat/\n\n# Verificar servi\u00e7os\nsudo systemctl status niochat-backend\nsudo systemctl status niochat-celery\n</code></pre>"},{"location":"development/troubleshooting/#comandos-uteis","title":"Comandos \u00dateis","text":""},{"location":"development/troubleshooting/#verificar-status","title":"Verificar status","text":"<pre><code># Servi\u00e7os\nsudo systemctl status niochat-backend\nsudo systemctl status niochat-celery\nsudo systemctl status niochat-celery-beat\n\n# Banco de dados\nsudo -u postgres psql -d niochat -c \"SELECT version();\"\n\n# Redis\nredis-cli ping\n\n# Nginx\nsudo nginx -t\n</code></pre>"},{"location":"development/troubleshooting/#limpar-cache","title":"Limpar cache","text":"<pre><code># Django\npython manage.py clear_cache\n\n# Redis\nredis-cli flushall\n\n# Nginx\nsudo nginx -s reload\n</code></pre>"},{"location":"development/troubleshooting/#reiniciar-servicos","title":"Reiniciar servi\u00e7os","text":"<pre><code># Todos os servi\u00e7os\nsudo systemctl restart niochat-backend\nsudo systemctl restart niochat-celery\nsudo systemctl restart niochat-celery-beat\n\n# Nginx\nsudo systemctl restart nginx\n\n# PostgreSQL\nsudo systemctl restart postgresql\n\n# Redis\nsudo systemctl restart redis-server\n</code></pre>"},{"location":"development/troubleshooting/#logs-importantes","title":"Logs Importantes","text":""},{"location":"development/troubleshooting/#django","title":"Django","text":"<pre><code>tail -f logs/django.log\n</code></pre>"},{"location":"development/troubleshooting/#celery","title":"Celery","text":"<pre><code>tail -f logs/celery.log\n</code></pre>"},{"location":"development/troubleshooting/#nginx","title":"Nginx","text":"<pre><code>tail -f /var/log/nginx/access.log\ntail -f /var/log/nginx/error.log\n</code></pre>"},{"location":"development/troubleshooting/#sistema","title":"Sistema","text":"<pre><code>journalctl -u niochat-backend -f\njournalctl -u niochat-celery -f\n</code></pre>"},{"location":"development/troubleshooting/#contato","title":"Contato","text":"<p>Se voc\u00ea n\u00e3o conseguir resolver o problema:</p> <ol> <li>GitHub Issues: Reportar problema</li> <li>Email: suporte@niochat.com.br</li> <li>Documenta\u00e7\u00e3o: Navegue pelas se\u00e7\u00f5es da documenta\u00e7\u00e3o</li> </ol>"},{"location":"development/troubleshooting/#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<ol> <li>Instala\u00e7\u00e3o - Configure o ambiente</li> <li>Configura\u00e7\u00e3o - Configure integra\u00e7\u00f5es</li> <li>Uso - Aprenda a usar o sistema</li> <li>API - Explore a API</li> </ol>"},{"location":"installation/development/","title":"Instala\u00e7\u00e3o em Desenvolvimento","text":"<p>Este guia explica como configurar o ambiente de desenvolvimento do NioChat.</p>"},{"location":"installation/development/#pre-requisitos","title":"Pr\u00e9-requisitos","text":""},{"location":"installation/development/#software-necessario","title":"Software Necess\u00e1rio","text":"<ul> <li>Python: 3.8 ou superior</li> <li>Node.js: 16 ou superior</li> <li>PostgreSQL: 12 ou superior</li> <li>Redis: 6 ou superior</li> <li>Git: Para clonar o reposit\u00f3rio</li> </ul>"},{"location":"installation/development/#sistema-operacional","title":"Sistema Operacional","text":"<ul> <li>Ubuntu: 20.04+</li> <li>CentOS: 8+</li> <li>macOS: 10.15+</li> <li>Windows: 10+ (com WSL recomendado)</li> </ul>"},{"location":"installation/development/#instalacao","title":"Instala\u00e7\u00e3o","text":""},{"location":"installation/development/#1-clone-do-repositorio","title":"1. Clone do Reposit\u00f3rio","text":"<pre><code>git clone https://github.com/juniorssilvaa/niochat.git\ncd niochat\n</code></pre>"},{"location":"installation/development/#2-configurar-backend","title":"2. Configurar Backend","text":""},{"location":"installation/development/#criar-ambiente-virtual","title":"Criar Ambiente Virtual","text":"<pre><code>cd backend\npython -m venv venv\nsource venv/bin/activate  # Linux/macOS\n# ou\nvenv\\Scripts\\activate  # Windows\n</code></pre>"},{"location":"installation/development/#instalar-dependencias","title":"Instalar Depend\u00eancias","text":"<pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"installation/development/#configurar-banco-de-dados","title":"Configurar Banco de Dados","text":"<pre><code># Criar banco de dados\ncreatedb niochat\n\n# Aplicar migra\u00e7\u00f5es\npython manage.py migrate\n\n# Criar superusu\u00e1rio\npython manage.py createsuperuser\n\n# Coletar arquivos est\u00e1ticos\npython manage.py collectstatic\n</code></pre>"},{"location":"installation/development/#3-configurar-frontend","title":"3. Configurar Frontend","text":""},{"location":"installation/development/#instalar-dependencias_1","title":"Instalar Depend\u00eancias","text":"<pre><code>cd frontend/frontend\nnpm install\n</code></pre>"},{"location":"installation/development/#build-de-desenvolvimento","title":"Build de Desenvolvimento","text":"<pre><code>npm run build\n</code></pre>"},{"location":"installation/development/#4-configurar-variaveis-de-ambiente","title":"4. Configurar Vari\u00e1veis de Ambiente","text":""},{"location":"installation/development/#criar-arquivo-env","title":"Criar arquivo .env","text":"<pre><code>cd backend\ncp .env.example .env\n</code></pre>"},{"location":"installation/development/#configurar-env","title":"Configurar .env","text":"<pre><code># Django\nDEBUG=True\nSECRET_KEY=sua_chave_secreta_aqui\nALLOWED_HOSTS=localhost,127.0.0.1\n\n# Banco de Dados\nDATABASE_URL=postgresql://usuario:senha@localhost:5432/niochat\n\n# Redis (porta 6380)\nREDIS_URL=redis://:SUA_SENHA_REDIS@154.38.176.17:6380/0\nREDIS_HOST=154.38.176.17\nREDIS_PORT=6380\nREDIS_PASSWORD=SUA_SENHA_REDIS\n\n# RabbitMQ (para Celery broker)\nCELERY_BROKER_URL=amqp://admin:SUA_SENHA_RABBITMQ@154.38.176.17:5672\nCELERY_RESULT_BACKEND=redis://:SUA_SENHA_REDIS@154.38.176.17:6380/0\nCELERY_RESULT_EXPIRES=300\nCELERY_TASK_IGNORE_RESULT=False\n\n# OpenAI\nOPENAI_API_KEY=sua_chave_openai\n\n# Supabase\nSUPABASE_URL=sua_url_supabase\nSUPABASE_ANON_KEY=sua_chave_supabase\n\n# Uazapi\nUAZAPI_URL=https://seu-provedor.uazapi.com\nUAZAPI_TOKEN=seu_token_uazapi\n</code></pre>"},{"location":"installation/development/#executar-o-sistema","title":"Executar o Sistema","text":""},{"location":"installation/development/#1-iniciar-servicos","title":"1. Iniciar Servi\u00e7os","text":""},{"location":"installation/development/#terminal-1-backend","title":"Terminal 1 - Backend","text":"<pre><code>cd backend\nsource venv/bin/activate\npython manage.py runserver 0.0.0.0:8010\n</code></pre>"},{"location":"installation/development/#terminal-2-celery-worker","title":"Terminal 2 - Celery Worker","text":"<pre><code>cd backend\nsource venv/bin/activate\ncelery -A niochat worker -l info\n</code></pre>"},{"location":"installation/development/#terminal-3-celery-beat","title":"Terminal 3 - Celery Beat","text":"<pre><code>cd backend\nsource venv/bin/activate\ncelery -A niochat beat -l info\n</code></pre>"},{"location":"installation/development/#terminal-4-frontend","title":"Terminal 4 - Frontend","text":"<pre><code>cd frontend/frontend\nnpm run dev\n</code></pre>"},{"location":"installation/development/#2-acessar-o-sistema","title":"2. Acessar o Sistema","text":"<ul> <li>Frontend: http://localhost:5173</li> <li>Backend: http://localhost:8010</li> <li>Admin: http://localhost:8010/admin</li> </ul>"},{"location":"installation/development/#configuracao-adicional","title":"Configura\u00e7\u00e3o Adicional","text":""},{"location":"installation/development/#redis-porta-6380","title":"Redis (Porta 6380)","text":"<pre><code># Ubuntu/Debian\nsudo apt install redis-server\nsudo systemctl start redis-server\n\n# CentOS/RHEL\nsudo yum install redis\nsudo systemctl start redis\n\n# macOS\nbrew install redis\nbrew services start redis\n\n# Configurar Redis para porta 6380 (se necess\u00e1rio)\n# Editar /etc/redis/redis.conf\n# port 6380\n# requirepass SUA_SENHA_REDIS\n</code></pre>"},{"location":"installation/development/#rabbitmq-para-celery","title":"RabbitMQ (para Celery)","text":"<pre><code># Ubuntu/Debian\nsudo apt install rabbitmq-server\nsudo systemctl start rabbitmq-server\nsudo systemctl enable rabbitmq-server\n\n# CentOS/RHEL\nsudo yum install rabbitmq-server\nsudo systemctl start rabbitmq-server\nsudo systemctl enable rabbitmq-server\n\n# macOS\nbrew install rabbitmq\nbrew services start rabbitmq\n\n# Configurar usu\u00e1rio e senha\nsudo rabbitmqctl add_user admin SUA_SENHA_RABBITMQ\nsudo rabbitmqctl set_user_tags admin administrator\nsudo rabbitmqctl set_permissions -p / admin \".*\" \".*\" \".*\"\n</code></pre>"},{"location":"installation/development/#postgresql","title":"PostgreSQL","text":"<pre><code># Ubuntu/Debian\nsudo apt install postgresql postgresql-contrib\nsudo -u postgres createdb niochat\n\n# CentOS/RHEL\nsudo yum install postgresql postgresql-server\nsudo postgresql-setup initdb\nsudo systemctl start postgresql\nsudo -u postgres createdb niochat\n\n# macOS\nbrew install postgresql\nbrew services start postgresql\ncreatedb niochat\n</code></pre>"},{"location":"installation/development/#desenvolvimento","title":"Desenvolvimento","text":""},{"location":"installation/development/#estrutura-do-projeto","title":"Estrutura do Projeto","text":"<pre><code>niochat/\n\u251c\u2500\u2500 backend/                 # Django Backend\n\u2502   \u251c\u2500\u2500 niochat/           # Configura\u00e7\u00f5es Django\n\u2502   \u251c\u2500\u2500 core/              # Aplica\u00e7\u00e3o principal\n\u2502   \u251c\u2500\u2500 conversations/      # Sistema de conversas\n\u2502   \u251c\u2500\u2500 integrations/       # Integra\u00e7\u00f5es externas\n\u2502   \u2514\u2500\u2500 requirements.txt    # Depend\u00eancias Python\n\u251c\u2500\u2500 frontend/               # React Frontend\n\u2502   \u2514\u2500\u2500 frontend/           # Aplica\u00e7\u00e3o React\n\u2502       \u251c\u2500\u2500 src/           # C\u00f3digo fonte\n\u2502       \u251c\u2500\u2500 public/        # Arquivos p\u00fablicos\n\u2502       \u2514\u2500\u2500 package.json   # Depend\u00eancias Node.js\n\u2514\u2500\u2500 docs/                   # Documenta\u00e7\u00e3o\n</code></pre>"},{"location":"installation/development/#comandos-uteis","title":"Comandos \u00dateis","text":""},{"location":"installation/development/#backend","title":"Backend","text":"<pre><code># Aplicar migra\u00e7\u00f5es\npython manage.py migrate\n\n# Criar migra\u00e7\u00e3o\npython manage.py makemigrations\n\n# Shell Django\npython manage.py shell\n\n# Testes\npython manage.py test\n\n# Coletar est\u00e1ticos\npython manage.py collectstatic\n</code></pre>"},{"location":"installation/development/#frontend","title":"Frontend","text":"<pre><code># Instalar depend\u00eancias\nnpm install\n\n# Desenvolvimento\nnpm run dev\n\n# Build produ\u00e7\u00e3o\nnpm run build\n\n# Testes\nnpm test\n\n# Lint\nnpm run lint\n</code></pre>"},{"location":"installation/development/#debugging","title":"Debugging","text":""},{"location":"installation/development/#logs-do-django","title":"Logs do Django","text":"<pre><code># Ver logs em tempo real\ntail -f logs/django.log\n\n# Configurar n\u00edvel de log\nexport DJANGO_LOG_LEVEL=DEBUG\n</code></pre>"},{"location":"installation/development/#logs-do-celery","title":"Logs do Celery","text":"<pre><code># Ver logs do worker\ntail -f logs/celery.log\n\n# Verificar workers ativos\ncelery -A niochat inspect active\n</code></pre>"},{"location":"installation/development/#logs-do-redis","title":"Logs do Redis","text":"<pre><code># Monitorar Redis\nredis-cli monitor\n\n# Verificar conex\u00e3o\nredis-cli ping\n</code></pre>"},{"location":"installation/development/#troubleshooting","title":"Troubleshooting","text":""},{"location":"installation/development/#problemas-comuns","title":"Problemas Comuns","text":""},{"location":"installation/development/#porta-ja-em-uso","title":"Porta j\u00e1 em uso","text":"<pre><code># Verificar processos na porta\nlsof -i :8010\nlsof -i :5173\n\n# Matar processo\nkill -9 PID\n</code></pre>"},{"location":"installation/development/#erro-de-banco-de-dados","title":"Erro de banco de dados","text":"<pre><code># Verificar conex\u00e3o\npython manage.py dbshell\n\n# Resetar banco\npython manage.py flush\n</code></pre>"},{"location":"installation/development/#erro-de-redis","title":"Erro de Redis","text":"<pre><code># Verificar status\nredis-cli -h 154.38.176.17 -p 6380 -a SUA_SENHA_REDIS ping\n\n# Reiniciar Redis\nsudo systemctl restart redis-server\n</code></pre>"},{"location":"installation/development/#erro-de-rabbitmq","title":"Erro de RabbitMQ","text":"<pre><code># Verificar status\nsudo systemctl status rabbitmq-server\n\n# Verificar conex\u00e3o\nrabbitmqctl status\n\n# Reiniciar RabbitMQ\nsudo systemctl restart rabbitmq-server\n</code></pre>"},{"location":"installation/development/#erro-de-dependencias","title":"Erro de depend\u00eancias","text":"<pre><code># Atualizar pip\npip install --upgrade pip\n\n# Reinstalar depend\u00eancias\npip install -r requirements.txt --force-reinstall\n</code></pre>"},{"location":"installation/development/#comandos-de-diagnostico","title":"Comandos de Diagn\u00f3stico","text":""},{"location":"installation/development/#verificar-status","title":"Verificar Status","text":"<pre><code># Django\npython manage.py check\n\n# Banco de dados\npython manage.py dbshell\n\n# Redis\nredis-cli -h 154.38.176.17 -p 6380 -a SUA_SENHA_REDIS ping\n\n# RabbitMQ\nrabbitmqctl status\n\n# Celery\ncelery -A niochat inspect stats\n</code></pre>"},{"location":"installation/development/#limpar-cache","title":"Limpar Cache","text":"<pre><code># Django\npython manage.py clear_cache\n\n# Redis\nredis-cli flushall\n\n# Node.js\nnpm cache clean --force\n</code></pre>"},{"location":"installation/development/#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<ol> <li>Configura\u00e7\u00e3o - Configure integra\u00e7\u00f5es</li> <li>Uso - Aprenda a usar o sistema</li> <li>API - Explore a API</li> <li>Troubleshooting - Resolva problemas</li> </ol>"},{"location":"installation/production/","title":"Instala\u00e7\u00e3o em Produ\u00e7\u00e3o","text":"<p>Este guia explica como instalar e configurar o NioChat em um ambiente de produ\u00e7\u00e3o.</p>"},{"location":"installation/production/#pre-requisitos","title":"Pr\u00e9-requisitos","text":""},{"location":"installation/production/#servidor","title":"Servidor","text":"<ul> <li>Sistema Operacional: Ubuntu 20.04+ ou CentOS 8+</li> <li>RAM: M\u00ednimo 4GB, recomendado 8GB+</li> <li>CPU: M\u00ednimo 2 cores, recomendado 4 cores+</li> <li>Disco: M\u00ednimo 50GB, recomendado 100GB+</li> <li>Rede: Conex\u00e3o est\u00e1vel com internet</li> </ul>"},{"location":"installation/production/#software","title":"Software","text":"<ul> <li>Python: 3.8+</li> <li>Node.js: 16+</li> <li>PostgreSQL: 12+</li> <li>Redis: 6+</li> <li>Nginx: 1.18+</li> <li>Docker: 20+ (opcional)</li> </ul>"},{"location":"installation/production/#instalacao-do-sistema","title":"Instala\u00e7\u00e3o do Sistema","text":""},{"location":"installation/production/#1-atualizar-sistema","title":"1. Atualizar Sistema","text":"<pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\n</code></pre>"},{"location":"installation/production/#2-instalar-dependencias","title":"2. Instalar Depend\u00eancias","text":"<pre><code>sudo apt install -y python3 python3-pip python3-venv nodejs npm postgresql redis-server nginx git\n</code></pre>"},{"location":"installation/production/#3-configurar-postgresql","title":"3. Configurar PostgreSQL","text":"<pre><code>sudo -u postgres psql\n</code></pre> <pre><code>CREATE DATABASE niochat;\nCREATE USER niochat WITH PASSWORD 'senha_segura';\nGRANT ALL PRIVILEGES ON DATABASE niochat TO niochat;\n\\q\n</code></pre>"},{"location":"installation/production/#4-configurar-redis-porta-6380","title":"4. Configurar Redis (Porta 6380)","text":"<pre><code>sudo systemctl enable redis-server\nsudo systemctl start redis-server\n\n# Configurar porta 6380 e senha\nsudo nano /etc/redis/redis.conf\n# Adicionar:\n# port 6380\n# requirepass SUA_SENHA_REDIS\n# bind 0.0.0.0\n\nsudo systemctl restart redis-server\n</code></pre>"},{"location":"installation/production/#5-configurar-rabbitmq","title":"5. Configurar RabbitMQ","text":"<pre><code>sudo apt install rabbitmq-server\nsudo systemctl enable rabbitmq-server\nsudo systemctl start rabbitmq-server\n\n# Configurar usu\u00e1rio e senha\nsudo rabbitmqctl add_user admin SUA_SENHA_RABBITMQ\nsudo rabbitmqctl set_user_tags admin administrator\nsudo rabbitmqctl set_permissions -p / admin \".*\" \".*\" \".*\"\n</code></pre>"},{"location":"installation/production/#instalacao-do-niochat","title":"Instala\u00e7\u00e3o do NioChat","text":""},{"location":"installation/production/#1-clone-do-repositorio","title":"1. Clone do Reposit\u00f3rio","text":"<pre><code>cd /opt\nsudo git clone https://github.com/juniorssilvaa/niochat.git\nsudo chown -R $USER:$USER niochat\ncd niochat\n</code></pre>"},{"location":"installation/production/#2-configurar-backend","title":"2. Configurar Backend","text":"<pre><code>cd backend\npython3 -m venv venv\nsource venv/bin/activate\npip install -r requirements.txt\n</code></pre>"},{"location":"installation/production/#3-configurar-frontend","title":"3. Configurar Frontend","text":"<pre><code>cd frontend/frontend\nnpm install\nnpm run build\n</code></pre>"},{"location":"installation/production/#4-configurar-variaveis-de-ambiente","title":"4. Configurar Vari\u00e1veis de Ambiente","text":"<pre><code>sudo nano /opt/niochat/backend/.env\n</code></pre> <pre><code># Django\nDEBUG=False\nSECRET_KEY=sua_chave_secreta_aqui\nALLOWED_HOSTS=seu-dominio.com,www.seu-dominio.com\n\n# Banco de Dados\nDATABASE_URL=postgresql://niochat:senha_segura@localhost:5432/niochat\n\n# Redis (porta 6380)\nREDIS_URL=redis://:SUA_SENHA_REDIS@154.38.176.17:6380/0\nREDIS_HOST=154.38.176.17\nREDIS_PORT=6380\nREDIS_PASSWORD=SUA_SENHA_REDIS\n\n# RabbitMQ (para Celery broker)\nCELERY_BROKER_URL=amqp://admin:SUA_SENHA_RABBITMQ@154.38.176.17:5672\nCELERY_RESULT_BACKEND=redis://:SUA_SENHA_REDIS@154.38.176.17:6380/0\nCELERY_RESULT_EXPIRES=300\nCELERY_TASK_IGNORE_RESULT=False\n\n# OpenAI\nOPENAI_API_KEY=sua_chave_openai\n\n# Supabase\nSUPABASE_URL=sua_url_supabase\nSUPABASE_ANON_KEY=sua_chave_supabase\n\n# Uazapi\nUAZAPI_URL=https://seu-provedor.uazapi.com\nUAZAPI_TOKEN=seu_token_uazapi\n\n# Email\nEMAIL_HOST=smtp.gmail.com\nEMAIL_PORT=587\nEMAIL_USE_TLS=True\nEMAIL_HOST_USER=seu-email@gmail.com\nEMAIL_HOST_PASSWORD=sua_senha_app\n\n# Webhook\nWEBHOOK_SECRET=seu_secret_webhook\n</code></pre>"},{"location":"installation/production/#5-configurar-django","title":"5. Configurar Django","text":"<pre><code>cd /opt/niochat/backend\nsource venv/bin/activate\npython manage.py migrate\npython manage.py collectstatic --noinput\npython manage.py createsuperuser\n</code></pre>"},{"location":"installation/production/#configuracao-do-nginx","title":"Configura\u00e7\u00e3o do Nginx","text":""},{"location":"installation/production/#1-criar-configuracao","title":"1. Criar Configura\u00e7\u00e3o","text":"<pre><code>sudo nano /etc/nginx/sites-available/niochat\n</code></pre> <pre><code>server {\n    listen 80;\n    server_name seu-dominio.com www.seu-dominio.com;\n\n    # Redirecionar para HTTPS\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name seu-dominio.com www.seu-dominio.com;\n\n    # SSL\n    ssl_certificate /etc/letsencrypt/live/seu-dominio.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/seu-dominio.com/privkey.pem;\n\n    # Frontend\n    location / {\n        root /opt/niochat/frontend/frontend/dist;\n        try_files $uri $uri/ /index.html;\n    }\n\n    # Backend API\n    location /api/ {\n        proxy_pass http://127.0.0.1:8010;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n\n    # WebSocket\n    location /ws/ {\n        proxy_pass http://127.0.0.1:8010;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n\n    # Webhooks\n    location /webhook/ {\n        proxy_pass http://127.0.0.1:8010;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n\n    # Admin\n    location /admin/ {\n        proxy_pass http://127.0.0.1:8010;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n</code></pre>"},{"location":"installation/production/#2-ativar-site","title":"2. Ativar Site","text":"<pre><code>sudo ln -s /etc/nginx/sites-available/niochat /etc/nginx/sites-enabled/\nsudo nginx -t\nsudo systemctl reload nginx\n</code></pre>"},{"location":"installation/production/#configuracao-do-ssl","title":"Configura\u00e7\u00e3o do SSL","text":""},{"location":"installation/production/#1-instalar-certbot","title":"1. Instalar Certbot","text":"<pre><code>sudo apt install certbot python3-certbot-nginx\n</code></pre>"},{"location":"installation/production/#2-obter-certificado","title":"2. Obter Certificado","text":"<pre><code>sudo certbot --nginx -d seu-dominio.com -d www.seu-dominio.com\n</code></pre>"},{"location":"installation/production/#3-renovacao-automatica","title":"3. Renova\u00e7\u00e3o Autom\u00e1tica","text":"<pre><code>sudo crontab -e\n</code></pre> <pre><code>0 12 * * * /usr/bin/certbot renew --quiet\n</code></pre>"},{"location":"installation/production/#configuracao-do-systemd","title":"Configura\u00e7\u00e3o do Systemd","text":""},{"location":"installation/production/#1-servico-backend","title":"1. Servi\u00e7o Backend","text":"<pre><code>sudo nano /etc/systemd/system/niochat-backend.service\n</code></pre> <pre><code>[Unit]\nDescription=NioChat Backend\nAfter=network.target\n\n[Service]\nType=exec\nUser=www-data\nGroup=www-data\nWorkingDirectory=/opt/niochat/backend\nEnvironment=PATH=/opt/niochat/backend/venv/bin\nExecStart=/opt/niochat/backend/venv/bin/python manage.py runserver 0.0.0.0:8010\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"installation/production/#2-servico-celery","title":"2. Servi\u00e7o Celery","text":"<pre><code>sudo nano /etc/systemd/system/niochat-celery.service\n</code></pre> <pre><code>[Unit]\nDescription=NioChat Celery Worker\nAfter=network.target\n\n[Service]\nType=exec\nUser=www-data\nGroup=www-data\nWorkingDirectory=/opt/niochat/backend\nEnvironment=PATH=/opt/niochat/backend/venv/bin\nExecStart=/opt/niochat/backend/venv/bin/celery -A niochat worker -l info\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"installation/production/#3-servico-celery-beat","title":"3. Servi\u00e7o Celery Beat","text":"<pre><code>sudo nano /etc/systemd/system/niochat-celery-beat.service\n</code></pre> <pre><code>[Unit]\nDescription=NioChat Celery Beat\nAfter=network.target\n\n[Service]\nType=exec\nUser=www-data\nGroup=www-data\nWorkingDirectory=/opt/niochat/backend\nEnvironment=PATH=/opt/niochat/backend/venv/bin\nExecStart=/opt/niochat/backend/venv/bin/celery -A niochat beat -l info\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"installation/production/#4-ativar-servicos","title":"4. Ativar Servi\u00e7os","text":"<pre><code>sudo systemctl daemon-reload\nsudo systemctl enable niochat-backend\nsudo systemctl enable niochat-celery\nsudo systemctl enable niochat-celery-beat\nsudo systemctl start niochat-backend\nsudo systemctl start niochat-celery\nsudo systemctl start niochat-celery-beat\n</code></pre>"},{"location":"installation/production/#configuracao-do-firewall","title":"Configura\u00e7\u00e3o do Firewall","text":""},{"location":"installation/production/#1-ufw","title":"1. UFW","text":"<pre><code>sudo ufw allow 22\nsudo ufw allow 80\nsudo ufw allow 443\nsudo ufw enable\n</code></pre>"},{"location":"installation/production/#2-verificar-status","title":"2. Verificar Status","text":"<pre><code>sudo ufw status\n</code></pre>"},{"location":"installation/production/#monitoramento","title":"Monitoramento","text":""},{"location":"installation/production/#1-logs-do-sistema","title":"1. Logs do Sistema","text":"<pre><code>sudo journalctl -u niochat-backend -f\nsudo journalctl -u niochat-celery -f\nsudo journalctl -u niochat-celery-beat -f\n</code></pre>"},{"location":"installation/production/#2-logs-do-nginx","title":"2. Logs do Nginx","text":"<pre><code>sudo tail -f /var/log/nginx/access.log\nsudo tail -f /var/log/nginx/error.log\n</code></pre>"},{"location":"installation/production/#3-logs-da-aplicacao","title":"3. Logs da Aplica\u00e7\u00e3o","text":"<pre><code>sudo tail -f /opt/niochat/backend/logs/django.log\nsudo tail -f /opt/niochat/backend/logs/celery.log\n</code></pre>"},{"location":"installation/production/#backup","title":"Backup","text":""},{"location":"installation/production/#1-script-de-backup","title":"1. Script de Backup","text":"<pre><code>sudo nano /opt/niochat/backup.sh\n</code></pre> <pre><code>#!/bin/bash\nDATE=$(date +%Y%m%d_%H%M%S)\nBACKUP_DIR=\"/opt/backups\"\nDB_NAME=\"niochat\"\nDB_USER=\"niochat\"\nDB_PASS=\"senha_segura\"\n\n# Criar diret\u00f3rio de backup\nmkdir -p $BACKUP_DIR\n\n# Backup do banco de dados\npg_dump -h localhost -U $DB_USER -d $DB_NAME &gt; $BACKUP_DIR/db_$DATE.sql\n\n# Backup dos arquivos\ntar -czf $BACKUP_DIR/files_$DATE.tar.gz /opt/niochat\n\n# Remover backups antigos (manter 7 dias)\nfind $BACKUP_DIR -name \"*.sql\" -mtime +7 -delete\nfind $BACKUP_DIR -name \"*.tar.gz\" -mtime +7 -delete\n\necho \"Backup conclu\u00eddo: $DATE\"\n</code></pre>"},{"location":"installation/production/#2-tornar-executavel","title":"2. Tornar Execut\u00e1vel","text":"<pre><code>sudo chmod +x /opt/niochat/backup.sh\n</code></pre>"},{"location":"installation/production/#3-agendar-backup","title":"3. Agendar Backup","text":"<pre><code>sudo crontab -e\n</code></pre> <pre><code>0 2 * * * /opt/niochat/backup.sh\n</code></pre>"},{"location":"installation/production/#atualizacoes","title":"Atualiza\u00e7\u00f5es","text":""},{"location":"installation/production/#1-script-de-atualizacao","title":"1. Script de Atualiza\u00e7\u00e3o","text":"<pre><code>sudo nano /opt/niochat/update.sh\n</code></pre> <pre><code>#!/bin/bash\ncd /opt/niochat\n\n# Backup antes da atualiza\u00e7\u00e3o\n./backup.sh\n\n# Parar servi\u00e7os\nsudo systemctl stop niochat-backend\nsudo systemctl stop niochat-celery\nsudo systemctl stop niochat-celery-beat\n\n# Atualizar c\u00f3digo\ngit pull origin main\n\n# Atualizar depend\u00eancias\ncd backend\nsource venv/bin/activate\npip install -r requirements.txt\n\n# Migra\u00e7\u00f5es\npython manage.py migrate\npython manage.py collectstatic --noinput\n\n# Rebuild frontend\ncd ../frontend/frontend\nnpm install\nnpm run build\n\n# Reiniciar servi\u00e7os\nsudo systemctl start niochat-backend\nsudo systemctl start niochat-celery\nsudo systemctl start niochat-celery-beat\n\necho \"Atualiza\u00e7\u00e3o conclu\u00edda\"\n</code></pre>"},{"location":"installation/production/#2-tornar-executavel_1","title":"2. Tornar Execut\u00e1vel","text":"<pre><code>sudo chmod +x /opt/niochat/update.sh\n</code></pre>"},{"location":"installation/production/#verificacao","title":"Verifica\u00e7\u00e3o","text":""},{"location":"installation/production/#1-status-dos-servicos","title":"1. Status dos Servi\u00e7os","text":"<pre><code>sudo systemctl status niochat-backend\nsudo systemctl status niochat-celery\nsudo systemctl status niochat-celery-beat\n</code></pre>"},{"location":"installation/production/#2-teste-de-conectividade","title":"2. Teste de Conectividade","text":"<pre><code>curl -I https://seu-dominio.com\ncurl -I https://seu-dominio.com/api/health/\n</code></pre>"},{"location":"installation/production/#3-teste-de-websocket","title":"3. Teste de WebSocket","text":"<pre><code>const ws = new WebSocket('wss://seu-dominio.com/ws/dashboard/');\nws.onopen = () =&gt; console.log('WebSocket conectado');\n</code></pre>"},{"location":"installation/production/#troubleshooting","title":"Troubleshooting","text":""},{"location":"installation/production/#problemas-comuns","title":"Problemas Comuns","text":""},{"location":"installation/production/#1-servico-nao-inicia","title":"1. Servi\u00e7o n\u00e3o inicia","text":"<pre><code>sudo journalctl -u niochat-backend --no-pager\n</code></pre>"},{"location":"installation/production/#2-erro-de-permissao","title":"2. Erro de permiss\u00e3o","text":"<pre><code>sudo chown -R www-data:www-data /opt/niochat\n</code></pre>"},{"location":"installation/production/#3-erro-de-banco-de-dados","title":"3. Erro de banco de dados","text":"<pre><code>sudo -u postgres psql -d niochat -c \"SELECT * FROM django_migrations;\"\n</code></pre>"},{"location":"installation/production/#4-erro-de-redis","title":"4. Erro de Redis","text":"<pre><code>redis-cli -h 154.38.176.17 -p 6380 -a SUA_SENHA_REDIS ping\n</code></pre>"},{"location":"installation/production/#5-erro-de-rabbitmq","title":"5. Erro de RabbitMQ","text":"<pre><code>sudo systemctl status rabbitmq-server\nrabbitmqctl status\n</code></pre>"},{"location":"installation/production/#6-erro-de-nginx","title":"6. Erro de Nginx","text":"<pre><code>sudo nginx -t\nsudo systemctl reload nginx\n</code></pre>"},{"location":"installation/production/#logs-importantes","title":"Logs Importantes","text":"<pre><code># Django\ntail -f /opt/niochat/backend/logs/django.log\n\n# Celery\ntail -f /opt/niochat/backend/logs/celery.log\n\n# Nginx\ntail -f /var/log/nginx/error.log\n\n# Sistema\njournalctl -u niochat-backend -f\n</code></pre>"},{"location":"installation/production/#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<ol> <li>Configura\u00e7\u00e3o - Configure integra\u00e7\u00f5es</li> <li>Uso - Aprenda a usar o sistema</li> <li>API - Explore a API</li> <li>Troubleshooting - Resolva problemas</li> </ol>"},{"location":"overview/architecture/","title":"Arquitetura do Sistema","text":"<p>O NioChat foi projetado com uma arquitetura moderna e escal\u00e1vel, utilizando as melhores pr\u00e1ticas de desenvolvimento.</p>"},{"location":"overview/architecture/#visao-geral-da-arquitetura","title":"Vis\u00e3o Geral da Arquitetura","text":"<pre><code>graph TB\n    subgraph \"Frontend\"\n        A[React App]\n        B[Dashboard]\n        C[Chat Interface]\n        D[Admin Panel]\n    end\n\n    subgraph \"Backend\"\n        E[Django API]\n        F[WebSocket]\n        G[Celery Tasks]\n        H[Redis Cache]\n    end\n\n    subgraph \"Integra\u00e7\u00f5es\"\n        I[WhatsApp Uazapi]\n        J[OpenAI ChatGPT]\n        K[SGP System]\n        L[Supabase]\n    end\n\n    subgraph \"Banco de Dados\"\n        M[PostgreSQL]\n        N[Redis]\n        O[Supabase]\n    end\n\n    A --&gt; E\n    B --&gt; E\n    C --&gt; F\n    D --&gt; E\n\n    E --&gt; G\n    E --&gt; H\n    F --&gt; H\n\n    E --&gt; I\n    E --&gt; J\n    E --&gt; K\n    E --&gt; L\n\n    E --&gt; M\n    G --&gt; N\n    L --&gt; O\n</code></pre>"},{"location":"overview/architecture/#componentes-principais","title":"Componentes Principais","text":""},{"location":"overview/architecture/#1-frontend-react","title":"1. Frontend (React)","text":"<ul> <li>Responsabilidade: Interface do usu\u00e1rio</li> <li>Tecnologia: React 18 + Vite</li> <li>Caracter\u00edsticas: SPA, tempo real, responsivo</li> <li>Comunica\u00e7\u00e3o: REST API + WebSocket</li> </ul>"},{"location":"overview/architecture/#2-backend-django","title":"2. Backend (Django)","text":"<ul> <li>Responsabilidade: L\u00f3gica de neg\u00f3cio e API</li> <li>Tecnologia: Django 5.2 + DRF</li> <li>Caracter\u00edsticas: RESTful, WebSocket, autentica\u00e7\u00e3o</li> <li>Comunica\u00e7\u00e3o: HTTP/WebSocket</li> </ul>"},{"location":"overview/architecture/#3-processamento-assincrono-celery","title":"3. Processamento Ass\u00edncrono (Celery)","text":"<ul> <li>Responsabilidade: Tarefas em background</li> <li>Tecnologia: Celery + Redis</li> <li>Caracter\u00edsticas: Escal\u00e1vel, confi\u00e1vel</li> <li>Uso: CSAT, notifica\u00e7\u00f5es, processamento</li> </ul>"},{"location":"overview/architecture/#4-cache-redis","title":"4. Cache (Redis)","text":"<ul> <li>Responsabilidade: Cache e sess\u00f5es</li> <li>Tecnologia: Redis</li> <li>Caracter\u00edsticas: Alta performance, persistente</li> <li>Uso: Sess\u00f5es, cache, filas</li> </ul>"},{"location":"overview/architecture/#5-banco-de-dados-postgresql","title":"5. Banco de Dados (PostgreSQL)","text":"<ul> <li>Responsabilidade: Dados principais</li> <li>Tecnologia: PostgreSQL</li> <li>Caracter\u00edsticas: ACID, escal\u00e1vel</li> <li>Uso: Dados transacionais</li> </ul>"},{"location":"overview/architecture/#6-dashboard-supabase","title":"6. Dashboard (Supabase)","text":"<ul> <li>Responsabilidade: M\u00e9tricas e relat\u00f3rios</li> <li>Tecnologia: Supabase</li> <li>Caracter\u00edsticas: Tempo real, isolamento</li> <li>Uso: Dashboard, auditoria, CSAT</li> </ul>"},{"location":"overview/architecture/#fluxo-de-dados","title":"Fluxo de Dados","text":""},{"location":"overview/architecture/#1-recebimento-de-mensagem","title":"1. Recebimento de Mensagem","text":"<pre><code>WhatsApp \u2192 Uazapi \u2192 Webhook \u2192 Django \u2192 IA \u2192 Resposta\n</code></pre>"},{"location":"overview/architecture/#2-processamento-com-ia","title":"2. Processamento com IA","text":"<pre><code>Mensagem \u2192 OpenAI \u2192 Function Calls \u2192 SGP \u2192 Dados \u2192 Resposta\n</code></pre>"},{"location":"overview/architecture/#3-dashboard-em-tempo-real","title":"3. Dashboard em Tempo Real","text":"<pre><code>Evento \u2192 Supabase \u2192 WebSocket \u2192 Frontend \u2192 Atualiza\u00e7\u00e3o\n</code></pre>"},{"location":"overview/architecture/#4-sistema-csat","title":"4. Sistema CSAT","text":"<pre><code>Fechamento \u2192 Celery \u2192 1.5min \u2192 Envio \u2192 Feedback \u2192 IA \u2192 An\u00e1lise\n</code></pre>"},{"location":"overview/architecture/#padroes-arquiteturais","title":"Padr\u00f5es Arquiteturais","text":""},{"location":"overview/architecture/#1-multi-tenant","title":"1. Multi-Tenant","text":"<ul> <li>Isolamento: Cada provedor tem seus dados</li> <li>Seguran\u00e7a: Row Level Security (RLS)</li> <li>Escalabilidade: Horizontal e vertical</li> <li>Manuten\u00e7\u00e3o: Independente por provedor</li> </ul>"},{"location":"overview/architecture/#2-event-driven","title":"2. Event-Driven","text":"<ul> <li>Eventos: Mensagens, conversas, CSAT</li> <li>Processamento: Ass\u00edncrono com Celery</li> <li>Notifica\u00e7\u00f5es: Tempo real via WebSocket</li> <li>Auditoria: Log de todos os eventos</li> </ul>"},{"location":"overview/architecture/#3-microservicos","title":"3. Microservi\u00e7os","text":"<ul> <li>Separa\u00e7\u00e3o: Frontend, Backend, IA, SGP</li> <li>Comunica\u00e7\u00e3o: APIs REST e WebSocket</li> <li>Deploy: Independente</li> <li>Escalabilidade: Por componente</li> </ul>"},{"location":"overview/architecture/#4-cqrs-command-query-responsibility-segregation","title":"4. CQRS (Command Query Responsibility Segregation)","text":"<ul> <li>Commands: Opera\u00e7\u00f5es de escrita</li> <li>Queries: Consultas de leitura</li> <li>Separa\u00e7\u00e3o: Dados transacionais vs. anal\u00edticos</li> <li>Performance: Otimizada para cada tipo</li> </ul>"},{"location":"overview/architecture/#seguranca","title":"Seguran\u00e7a","text":""},{"location":"overview/architecture/#1-autenticacao","title":"1. Autentica\u00e7\u00e3o","text":"<ul> <li>M\u00e9todo: Token-based authentication</li> <li>Seguran\u00e7a: JWT com expira\u00e7\u00e3o</li> <li>Renova\u00e7\u00e3o: Autom\u00e1tica</li> <li>Logout: Invalida\u00e7\u00e3o de token</li> </ul>"},{"location":"overview/architecture/#2-autorizacao","title":"2. Autoriza\u00e7\u00e3o","text":"<ul> <li>N\u00edveis: Superuser, Admin, Agent, Viewer</li> <li>Permiss\u00f5es: Granulares por recurso</li> <li>Contexto: Por provedor</li> <li>Auditoria: Log de todas as a\u00e7\u00f5es</li> </ul>"},{"location":"overview/architecture/#3-isolamento-de-dados","title":"3. Isolamento de Dados","text":"<ul> <li>RLS: Row Level Security no Supabase</li> <li>Filtros: Autom\u00e1ticos por provedor</li> <li>Vazamento: Imposs\u00edvel entre provedores</li> <li>Compliance: LGPD e GDPR</li> </ul>"},{"location":"overview/architecture/#4-criptografia","title":"4. Criptografia","text":"<ul> <li>Transmiss\u00e3o: HTTPS/TLS</li> <li>Armazenamento: Dados sens\u00edveis criptografados</li> <li>Chaves: Rota\u00e7\u00e3o autom\u00e1tica</li> <li>Backup: Criptografado</li> </ul>"},{"location":"overview/architecture/#performance","title":"Performance","text":""},{"location":"overview/architecture/#1-cache-strategy","title":"1. Cache Strategy","text":"<ul> <li>Redis: Sess\u00f5es e cache</li> <li>CDN: Arquivos est\u00e1ticos</li> <li>Database: \u00cdndices otimizados</li> <li>API: Rate limiting</li> </ul>"},{"location":"overview/architecture/#2-escalabilidade","title":"2. Escalabilidade","text":"<ul> <li>Horizontal: M\u00faltiplas inst\u00e2ncias</li> <li>Vertical: Recursos adicionais</li> <li>Load Balancing: Distribui\u00e7\u00e3o de carga</li> <li>Auto-scaling: Baseado em m\u00e9tricas</li> </ul>"},{"location":"overview/architecture/#3-monitoramento","title":"3. Monitoramento","text":"<ul> <li>M\u00e9tricas: Performance em tempo real</li> <li>Alertas: Notifica\u00e7\u00f5es autom\u00e1ticas</li> <li>Logs: Centralizados</li> <li>Dashboards: Visualiza\u00e7\u00e3o</li> </ul>"},{"location":"overview/architecture/#integracoes","title":"Integra\u00e7\u00f5es","text":""},{"location":"overview/architecture/#1-whatsapp-uazapi","title":"1. WhatsApp (Uazapi)","text":"<ul> <li>Protocolo: Webhook</li> <li>Formato: JSON</li> <li>Seguran\u00e7a: Assinatura digital</li> <li>Retry: Autom\u00e1tico</li> </ul>"},{"location":"overview/architecture/#2-openai","title":"2. OpenAI","text":"<ul> <li>Protocolo: HTTPS</li> <li>Formato: JSON</li> <li>Rate Limiting: Configur\u00e1vel</li> <li>Fallback: Resposta padr\u00e3o</li> </ul>"},{"location":"overview/architecture/#3-sgp","title":"3. SGP","text":"<ul> <li>Protocolo: HTTPS</li> <li>Formato: JSON/XML</li> <li>Cache: Dados tempor\u00e1rios</li> <li>Timeout: Configur\u00e1vel</li> </ul>"},{"location":"overview/architecture/#4-supabase","title":"4. Supabase","text":"<ul> <li>Protocolo: HTTPS</li> <li>Formato: JSON</li> <li>Real-time: WebSocket</li> <li>RLS: Row Level Security</li> </ul>"},{"location":"overview/architecture/#deploy-e-infraestrutura","title":"Deploy e Infraestrutura","text":""},{"location":"overview/architecture/#1-desenvolvimento","title":"1. Desenvolvimento","text":"<ul> <li>Local: Docker Compose</li> <li>Hot Reload: Autom\u00e1tico</li> <li>Debug: Logs detalhados</li> <li>Testing: Unit e integration</li> </ul>"},{"location":"overview/architecture/#2-producao","title":"2. Produ\u00e7\u00e3o","text":"<ul> <li>Servidor: Ubuntu/CentOS</li> <li>Proxy: Nginx</li> <li>SSL: Let's Encrypt</li> <li>Monitoring: Systemd</li> </ul>"},{"location":"overview/architecture/#3-cicd","title":"3. CI/CD","text":"<ul> <li>GitHub Actions: Autom\u00e1tico</li> <li>Testing: Autom\u00e1tico</li> <li>Deploy: Autom\u00e1tico</li> <li>Rollback: Autom\u00e1tico</li> </ul>"},{"location":"overview/architecture/#monitoramento-e-observabilidade","title":"Monitoramento e Observabilidade","text":""},{"location":"overview/architecture/#1-metricas","title":"1. M\u00e9tricas","text":"<ul> <li>Sistema: CPU, RAM, Disco</li> <li>Aplica\u00e7\u00e3o: Requests, erros, lat\u00eancia</li> <li>Neg\u00f3cio: Conversas, CSAT, resolu\u00e7\u00e3o</li> <li>Custom: M\u00e9tricas espec\u00edficas</li> </ul>"},{"location":"overview/architecture/#2-logs","title":"2. Logs","text":"<ul> <li>Aplica\u00e7\u00e3o: Django, Celery</li> <li>Sistema: Nginx, PostgreSQL</li> <li>Integra\u00e7\u00f5es: APIs externas</li> <li>Auditoria: Todas as a\u00e7\u00f5es</li> </ul>"},{"location":"overview/architecture/#3-alertas","title":"3. Alertas","text":"<ul> <li>Sistema: Recursos baixos</li> <li>Aplica\u00e7\u00e3o: Erros altos</li> <li>Neg\u00f3cio: CSAT baixo</li> <li>Integra\u00e7\u00e3o: APIs fora</li> </ul>"},{"location":"overview/architecture/#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<ol> <li>Funcionalidades - Explore todas as funcionalidades</li> <li>Instala\u00e7\u00e3o - Configure o ambiente</li> <li>API - Explore a API</li> <li>Configura\u00e7\u00e3o - Configure integra\u00e7\u00f5es</li> </ol>"},{"location":"overview/features/","title":"Funcionalidades","text":"<p>O NioChat oferece um conjunto completo de funcionalidades para atendimento via WhatsApp com IA inteligente.</p>"},{"location":"overview/features/#ia-inteligente","title":"IA Inteligente","text":""},{"location":"overview/features/#chatgpt-integrado","title":"ChatGPT Integrado","text":"<ul> <li>Atendimento Automatizado: IA responde perguntas comuns automaticamente</li> <li>Contexto Conversacional: Mant\u00e9m contexto da conversa</li> <li>Personaliza\u00e7\u00e3o: IA \u00fanica para cada provedor</li> <li>Aprendizado Cont\u00ednuo: Melhora com o tempo</li> </ul>"},{"location":"overview/features/#transcricao-de-audio","title":"Transcri\u00e7\u00e3o de \u00c1udio","text":"<ul> <li>Convers\u00e3o Autom\u00e1tica: Mensagens de voz convertidas para texto</li> <li>Suporte a M\u00faltiplos Idiomas: Portugu\u00eas, ingl\u00eas, espanhol</li> <li>Alta Precis\u00e3o: 95%+ de precis\u00e3o na transcri\u00e7\u00e3o</li> <li>Processamento em Tempo Real: Transcri\u00e7\u00e3o instant\u00e2nea</li> </ul>"},{"location":"overview/features/#consulta-sgp-automatica","title":"Consulta SGP Autom\u00e1tica","text":"<ul> <li>Dados Reais: IA consulta informa\u00e7\u00f5es reais do cliente</li> <li>Function Calls: Execu\u00e7\u00e3o autom\u00e1tica de fun\u00e7\u00f5es do SGP</li> <li>Integra\u00e7\u00e3o Transparente: Cliente n\u00e3o percebe a consulta</li> <li>Dados Atualizados: Informa\u00e7\u00f5es sempre atualizadas</li> </ul>"},{"location":"overview/features/#whatsapp-completo","title":"WhatsApp Completo","text":""},{"location":"overview/features/#uazapievolution-api","title":"Uazapi/Evolution API","text":"<ul> <li>Integra\u00e7\u00e3o Nativa: Conecta diretamente com WhatsApp Business</li> <li>Webhooks em Tempo Real: Recebimento instant\u00e2neo de mensagens</li> <li>Status de Entrega: Confirma\u00e7\u00e3o de recebimento</li> <li>M\u00faltiplas Inst\u00e2ncias: Suporte a v\u00e1rios n\u00fameros</li> </ul>"},{"location":"overview/features/#midia-completa","title":"M\u00eddia Completa","text":"<ul> <li>Imagens: Suporte a JPG, PNG, GIF</li> <li>V\u00eddeos: MP4, AVI, MOV</li> <li>\u00c1udios: OGG, MP3, WAV</li> <li>Documentos: PDF, DOC, XLS, PPT</li> <li>Stickers: Suporte completo a stickers</li> </ul>"},{"location":"overview/features/#interacoes-avancadas","title":"Intera\u00e7\u00f5es Avan\u00e7adas","text":"<ul> <li>Rea\u00e7\u00f5es: Emojis e rea\u00e7\u00f5es personalizadas</li> <li>Exclus\u00e3o de Mensagens: Deletar mensagens enviadas</li> <li>Status de Leitura: Confirma\u00e7\u00e3o de visualiza\u00e7\u00e3o</li> <li>Respostas R\u00e1pidas: Templates de mensagens</li> </ul>"},{"location":"overview/features/#dashboard-e-metricas","title":"Dashboard e M\u00e9tricas","text":""},{"location":"overview/features/#metricas-em-tempo-real","title":"M\u00e9tricas em Tempo Real","text":"<ul> <li>Total de Conversas: Contador em tempo real</li> <li>Conversas Abertas: Fechadas e pendentes</li> <li>Taxa de Resolu\u00e7\u00e3o: Percentual de problemas resolvidos</li> <li>Tempo de Resposta: M\u00e9dia de tempo de resposta</li> <li>Satisfa\u00e7\u00e3o do Cliente: CSAT autom\u00e1tico</li> </ul>"},{"location":"overview/features/#graficos-interativos","title":"Gr\u00e1ficos Interativos","text":"<ul> <li>Evolu\u00e7\u00e3o Temporal: Gr\u00e1ficos de linha</li> <li>Distribui\u00e7\u00e3o por Equipe: Gr\u00e1ficos de pizza</li> <li>Performance por Agente: Gr\u00e1ficos de barras</li> <li>Tend\u00eancias: An\u00e1lise de tend\u00eancias</li> </ul>"},{"location":"overview/features/#filtros-avancados","title":"Filtros Avan\u00e7ados","text":"<ul> <li>Por Data: Filtros por per\u00edodo</li> <li>Por Usu\u00e1rio: Performance individual</li> <li>Por Equipe: M\u00e9tricas por equipe</li> <li>Por Provedor: Isolamento de dados</li> </ul>"},{"location":"overview/features/#sistema-csat","title":"Sistema CSAT","text":""},{"location":"overview/features/#coleta-automatica","title":"Coleta Autom\u00e1tica","text":"<ul> <li>Envio Autom\u00e1tico: 1.5 minutos ap\u00f3s fechamento</li> <li>Mensagem Personalizada: Texto personalizado por provedor</li> <li>M\u00faltiplos Canais: WhatsApp, SMS, Email</li> <li>Agendamento: Envio em hor\u00e1rios espec\u00edficos</li> </ul>"},{"location":"overview/features/#analise-ia","title":"An\u00e1lise IA","text":"<ul> <li>Interpreta\u00e7\u00e3o Autom\u00e1tica: IA analisa feedback textual</li> <li>Mapeamento de Emojis: \ud83d\ude21 (1) a \ud83e\udd29 (5)</li> <li>Palavras-chave: Identifica sentimentos</li> <li>Corre\u00e7\u00e3o Autom\u00e1tica: Corrige mapeamentos incorretos</li> </ul>"},{"location":"overview/features/#dashboard-csat","title":"Dashboard CSAT","text":"<ul> <li>M\u00e9tricas Visuais: Gr\u00e1ficos de satisfa\u00e7\u00e3o</li> <li>Hist\u00f3rico Detalhado: \u00daltimos feedbacks</li> <li>Fotos de Perfil: Avatars dos clientes</li> <li>Mensagens Originais: Feedback completo</li> </ul>"},{"location":"overview/features/#sistema-multi-tenant","title":"Sistema Multi-Tenant","text":""},{"location":"overview/features/#isolamento-total","title":"Isolamento Total","text":"<ul> <li>Dados Separados: Cada provedor tem seus dados</li> <li>RLS (Row Level Security): Isolamento no Supabase</li> <li>Permiss\u00f5es Granulares: Controle fino de acesso</li> <li>Auditoria Completa: Log de todas as a\u00e7\u00f5es</li> </ul>"},{"location":"overview/features/#equipes","title":"Equipes","text":"<ul> <li>Organiza\u00e7\u00e3o: Estrutura hier\u00e1rquica</li> <li>Permiss\u00f5es: Controle de acesso por equipe</li> <li>Transfer\u00eancia: Entre agentes e equipes</li> <li>Visibilidade: Controle de visibilidade</li> </ul>"},{"location":"overview/features/#usuarios","title":"Usu\u00e1rios","text":"<ul> <li>Perfis: Diferentes tipos de usu\u00e1rio</li> <li>Permiss\u00f5es: Controle granular</li> <li>Sess\u00f5es: Gerenciamento de sess\u00f5es</li> <li>Seguran\u00e7a: Autentica\u00e7\u00e3o robusta</li> </ul>"},{"location":"overview/features/#integracoes","title":"Integra\u00e7\u00f5es","text":""},{"location":"overview/features/#sgp-sistema-de-gestao-de-provedores","title":"SGP (Sistema de Gest\u00e3o de Provedores)","text":"<ul> <li>Consulta de Clientes: Busca por CPF/CNPJ</li> <li>Verifica\u00e7\u00e3o de Acesso: Status da conex\u00e3o</li> <li>Gera\u00e7\u00e3o de Faturas: PIX e boleto autom\u00e1tico</li> <li>Chamados T\u00e9cnicos: Cria\u00e7\u00e3o autom\u00e1tica</li> <li>Hist\u00f3rico: Consulta de hist\u00f3rico</li> </ul>"},{"location":"overview/features/#supabase","title":"Supabase","text":"<ul> <li>Dashboard: M\u00e9tricas em tempo real</li> <li>Auditoria: Log de todas as a\u00e7\u00f5es</li> <li>CSAT: Sistema de satisfa\u00e7\u00e3o</li> <li>Dados: Armazenamento de dados</li> </ul>"},{"location":"overview/features/#uazapievolution","title":"Uazapi/Evolution","text":"<ul> <li>WhatsApp Business: Integra\u00e7\u00e3o nativa</li> <li>M\u00faltiplas Inst\u00e2ncias: V\u00e1rios n\u00fameros</li> <li>Webhooks: Eventos em tempo real</li> <li>M\u00eddia: Suporte completo</li> </ul>"},{"location":"overview/features/#chat-interno","title":"Chat Interno","text":""},{"location":"overview/features/#salas-de-chat","title":"Salas de Chat","text":"<ul> <li>Cria\u00e7\u00e3o: Salas por equipe ou projeto</li> <li>Participantes: Adi\u00e7\u00e3o/remo\u00e7\u00e3o de membros</li> <li>Mensagens: Chat em tempo real</li> <li>Hist\u00f3rico: Mensagens salvas</li> </ul>"},{"location":"overview/features/#chat-privado","title":"Chat Privado","text":"<ul> <li>Mensagens Diretas: Entre usu\u00e1rios</li> <li>Notifica\u00e7\u00f5es: Alertas de mensagens</li> <li>Status: Online/offline</li> <li>Hist\u00f3rico: Mensagens salvas</li> </ul>"},{"location":"overview/features/#auditoria","title":"Auditoria","text":""},{"location":"overview/features/#logs-detalhados","title":"Logs Detalhados","text":"<ul> <li>A\u00e7\u00f5es: Todas as a\u00e7\u00f5es do sistema</li> <li>Usu\u00e1rios: Quem fez o qu\u00ea</li> <li>Timestamps: Quando aconteceu</li> <li>Detalhes: Informa\u00e7\u00f5es completas</li> </ul>"},{"location":"overview/features/#filtros","title":"Filtros","text":"<ul> <li>Por A\u00e7\u00e3o: Tipo de a\u00e7\u00e3o</li> <li>Por Usu\u00e1rio: A\u00e7\u00f5es de usu\u00e1rio espec\u00edfico</li> <li>Por Data: Per\u00edodo espec\u00edfico</li> <li>Por Provedor: Isolamento de dados</li> </ul>"},{"location":"overview/features/#exportacao","title":"Exporta\u00e7\u00e3o","text":"<ul> <li>PDF: Relat\u00f3rios em PDF</li> <li>Excel: Dados em planilha</li> <li>CSV: Dados estruturados</li> <li>JSON: Dados brutos</li> </ul>"},{"location":"overview/features/#seguranca","title":"Seguran\u00e7a","text":""},{"location":"overview/features/#autenticacao","title":"Autentica\u00e7\u00e3o","text":"<ul> <li>Tokens: Autentica\u00e7\u00e3o por token</li> <li>Sess\u00f5es: Gerenciamento de sess\u00f5es</li> <li>Timeout: Expira\u00e7\u00e3o autom\u00e1tica</li> <li>Refresh: Renova\u00e7\u00e3o de tokens</li> </ul>"},{"location":"overview/features/#autorizacao","title":"Autoriza\u00e7\u00e3o","text":"<ul> <li>Permiss\u00f5es: Controle granular</li> <li>Roles: Pap\u00e9is de usu\u00e1rio</li> <li>Equipes: Permiss\u00f5es por equipe</li> <li>Provedores: Isolamento de dados</li> </ul>"},{"location":"overview/features/#dados","title":"Dados","text":"<ul> <li>Criptografia: Dados sens\u00edveis protegidos</li> <li>Backup: Backup autom\u00e1tico</li> <li>SSL/TLS: Comunica\u00e7\u00e3o segura</li> <li>Monitoramento: Logs de seguran\u00e7a</li> </ul>"},{"location":"overview/features/#performance","title":"Performance","text":""},{"location":"overview/features/#otimizacoes","title":"Otimiza\u00e7\u00f5es","text":"<ul> <li>Cache: Redis para cache</li> <li>Consultas: Otimiza\u00e7\u00e3o de queries</li> <li>\u00cdndices: \u00cdndices de banco de dados</li> <li>CDN: Entrega de conte\u00fado</li> </ul>"},{"location":"overview/features/#escalabilidade","title":"Escalabilidade","text":"<ul> <li>Horizontal: M\u00faltiplos servidores</li> <li>Vertical: Recursos adicionais</li> <li>Load Balancing: Distribui\u00e7\u00e3o de carga</li> <li>Microservi\u00e7os: Arquitetura modular</li> </ul>"},{"location":"overview/features/#monitoramento","title":"Monitoramento","text":"<ul> <li>M\u00e9tricas: Performance em tempo real</li> <li>Alertas: Notifica\u00e7\u00f5es de problemas</li> <li>Logs: Logs detalhados</li> <li>Dashboards: Visualiza\u00e7\u00e3o de m\u00e9tricas</li> </ul>"},{"location":"overview/features/#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<ol> <li>Instala\u00e7\u00e3o - Configure o ambiente</li> <li>Configura\u00e7\u00e3o - Configure integra\u00e7\u00f5es</li> <li>Uso - Aprenda a usar o sistema</li> <li>API - Explore a API</li> </ol>"},{"location":"overview/introduction/","title":"Introdu\u00e7\u00e3o ao NioChat","text":"<p>O NioChat \u00e9 um sistema completo de atendimento via WhatsApp com intelig\u00eancia artificial, desenvolvido para revolucionar o atendimento ao cliente.</p>"},{"location":"overview/introduction/#o-que-e-o-niochat","title":"O que \u00e9 o NioChat?","text":"<p>O NioChat \u00e9 uma plataforma de atendimento inteligente que combina:</p> <ul> <li>Intelig\u00eancia Artificial Avan\u00e7ada: ChatGPT integrado para respostas autom\u00e1ticas</li> <li>Integra\u00e7\u00e3o WhatsApp: Conex\u00e3o nativa com WhatsApp Business</li> <li>Sistema SGP: Consulta autom\u00e1tica de dados do cliente</li> <li>Dashboard em Tempo Real: M\u00e9tricas e an\u00e1lises instant\u00e2neas</li> <li>Sistema CSAT: Coleta autom\u00e1tica de satisfa\u00e7\u00e3o do cliente</li> </ul>"},{"location":"overview/introduction/#principais-beneficios","title":"Principais Benef\u00edcios","text":""},{"location":"overview/introduction/#para-empresas","title":"Para Empresas","text":"<ul> <li>Redu\u00e7\u00e3o de Custos: Atendimento automatizado 24/7</li> <li>Aumento de Produtividade: IA resolve 80% das consultas</li> <li>Melhoria na Satisfa\u00e7\u00e3o: Respostas r\u00e1pidas e precisas</li> <li>Insights Valiosos: M\u00e9tricas detalhadas de atendimento</li> </ul>"},{"location":"overview/introduction/#para-clientes","title":"Para Clientes","text":"<ul> <li>Atendimento Instant\u00e2neo: Respostas imediatas</li> <li>Disponibilidade 24/7: Sempre dispon\u00edvel</li> <li>Respostas Precisas: Baseadas em dados reais</li> <li>Experi\u00eancia Personalizada: Atendimento humanizado</li> </ul>"},{"location":"overview/introduction/#como-funciona","title":"Como Funciona","text":""},{"location":"overview/introduction/#1-cliente-envia-mensagem","title":"1. Cliente Envia Mensagem","text":"<p>O cliente envia uma mensagem via WhatsApp para o n\u00famero da empresa.</p>"},{"location":"overview/introduction/#2-ia-processa-a-mensagem","title":"2. IA Processa a Mensagem","text":"<p>A IA analisa a mensagem e determina a melhor resposta ou a\u00e7\u00e3o.</p>"},{"location":"overview/introduction/#3-consulta-dados-sgp-se-necessario","title":"3. Consulta Dados SGP (se necess\u00e1rio)","text":"<p>Se necess\u00e1rio, a IA consulta automaticamente o sistema SGP para obter dados do cliente.</p>"},{"location":"overview/introduction/#4-resposta-automatica","title":"4. Resposta Autom\u00e1tica","text":"<p>A IA envia uma resposta personalizada baseada nos dados obtidos.</p>"},{"location":"overview/introduction/#5-dashboard-atualizado","title":"5. Dashboard Atualizado","text":"<p>Todas as intera\u00e7\u00f5es s\u00e3o registradas e exibidas no dashboard em tempo real.</p>"},{"location":"overview/introduction/#casos-de-uso","title":"Casos de Uso","text":""},{"location":"overview/introduction/#provedores-de-internet","title":"Provedores de Internet","text":"<ul> <li>Consulta de Faturas: Cliente pede fatura \u2192 IA consulta SGP \u2192 gera PIX/Boleto</li> <li>Suporte T\u00e9cnico: Cliente relata problema \u2192 IA verifica status \u2192 cria chamado</li> <li>Verifica\u00e7\u00e3o de Status: Cliente pergunta sobre conex\u00e3o \u2192 IA consulta status real</li> </ul>"},{"location":"overview/introduction/#empresas-de-servicos","title":"Empresas de Servi\u00e7os","text":"<ul> <li>Atendimento Automatizado: IA responde perguntas comuns</li> <li>Agendamento: Integra\u00e7\u00e3o com sistemas de agendamento</li> <li>Feedback: Coleta autom\u00e1tica de satisfa\u00e7\u00e3o</li> </ul>"},{"location":"overview/introduction/#tecnologias-utilizadas","title":"Tecnologias Utilizadas","text":""},{"location":"overview/introduction/#backend","title":"Backend","text":"<ul> <li>Django 5.2: Framework web robusto</li> <li>Django REST Framework: API REST completa</li> <li>Channels: WebSocket para tempo real</li> <li>Celery: Processamento ass\u00edncrono</li> <li>Redis: Cache e sess\u00f5es</li> <li>PostgreSQL: Banco de dados principal</li> </ul>"},{"location":"overview/introduction/#frontend","title":"Frontend","text":"<ul> <li>React 18: Interface moderna</li> <li>Vite: Build tool r\u00e1pido</li> <li>Tailwind CSS: Estiliza\u00e7\u00e3o</li> <li>Shadcn/ui: Componentes</li> <li>WebSocket: Tempo real</li> </ul>"},{"location":"overview/introduction/#integracoes","title":"Integra\u00e7\u00f5es","text":"<ul> <li>Uazapi/Evolution: WhatsApp Business</li> <li>OpenAI ChatGPT: IA avan\u00e7ada</li> <li>Supabase: Dashboard e dados</li> <li>SGP: Sistema de gest\u00e3o</li> </ul>"},{"location":"overview/introduction/#arquitetura","title":"Arquitetura","text":"<pre><code>Frontend (React) \u2192 Backend (Django) \u2192 Integra\u00e7\u00f5es\n     \u2193                \u2193                    \u2193\nDashboard \u2190\u2192 API REST \u2190\u2192 WhatsApp (Uazapi)\n     \u2193                \u2193                    \u2193\nSupabase \u2190\u2192 WebSocket \u2190\u2192 IA (OpenAI)\n     \u2193                \u2193                    \u2193\nAuditoria \u2190\u2192 Celery \u2190\u2192 SGP System\n</code></pre>"},{"location":"overview/introduction/#fluxo-de-dados","title":"Fluxo de Dados","text":"<ol> <li>Cliente envia mensagem \u2192 WhatsApp \u2192 Uazapi \u2192 Django</li> <li>IA processa \u2192 OpenAI \u2192 SGP (se necess\u00e1rio) \u2192 Resposta</li> <li>Dados salvos \u2192 Supabase (conversas, contatos, mensagens, CSAT)</li> <li>Dashboard atualiza \u2192 Frontend via API REST</li> <li>CSAT autom\u00e1tico \u2192 1.5min ap\u00f3s fechamento \u2192 IA interpreta feedback</li> </ol>"},{"location":"overview/introduction/#seguranca","title":"Seguran\u00e7a","text":""},{"location":"overview/introduction/#multi-tenant","title":"Multi-tenant","text":"<ul> <li>Isolamento Total: Cada provedor tem seus dados</li> <li>Row Level Security: Supabase com RLS</li> <li>Permiss\u00f5es Granulares: Controle fino de acesso</li> <li>Auditoria Completa: Log de todas as a\u00e7\u00f5es</li> </ul>"},{"location":"overview/introduction/#dados","title":"Dados","text":"<ul> <li>Criptografia: Dados sens\u00edveis protegidos</li> <li>Backup: Backup autom\u00e1tico</li> <li>SSL/TLS: Comunica\u00e7\u00e3o criptografada</li> <li>Monitoramento: Logs e alertas</li> </ul>"},{"location":"overview/introduction/#performance","title":"Performance","text":"<ul> <li>Tempo de Resposta: &lt; 200ms</li> <li>Uptime: 99.9%</li> <li>Escalabilidade: 1000+ usu\u00e1rios simult\u00e2neos</li> <li>Disponibilidade: 24/7</li> </ul>"},{"location":"overview/introduction/#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<ol> <li>Arquitetura - Entenda a arquitetura do sistema</li> <li>Funcionalidades - Explore todas as funcionalidades</li> <li>Instala\u00e7\u00e3o - Configure o ambiente</li> <li>API - Explore a API</li> </ol>"},{"location":"supabase/integration/","title":"Integra\u00e7\u00e3o com Supabase","text":"<p>O NioChat utiliza Supabase para dashboard em tempo real, auditoria e sistema CSAT. Este guia explica como implementar e usar a integra\u00e7\u00e3o.</p>"},{"location":"supabase/integration/#visao-geral","title":"Vis\u00e3o Geral","text":""},{"location":"supabase/integration/#funcionalidades","title":"Funcionalidades","text":"<ul> <li>Dashboard em Tempo Real: M\u00e9tricas atualizadas instantaneamente</li> <li>Auditoria Completa: Log de todas as a\u00e7\u00f5es do sistema</li> <li>Sistema CSAT: Coleta e an\u00e1lise de satisfa\u00e7\u00e3o do cliente</li> <li>Isolamento de Dados: Cada provedor tem seus dados separados</li> <li>Real-time Updates: Atualiza\u00e7\u00f5es via WebSocket</li> </ul>"},{"location":"supabase/integration/#arquitetura","title":"Arquitetura","text":"<pre><code>NioChat Backend \u2192 Supabase \u2192 Dashboard Frontend\n     \u2193              \u2193              \u2193\n  Django API    PostgreSQL    React App\n     \u2193              \u2193              \u2193\n  WebSocket    Real-time     WebSocket\n</code></pre>"},{"location":"supabase/integration/#configuracao-inicial","title":"Configura\u00e7\u00e3o Inicial","text":""},{"location":"supabase/integration/#1-criar-projeto-supabase","title":"1. Criar Projeto Supabase","text":"<pre><code># Acessar Supabase\nhttps://supabase.com\n\n# Criar novo projeto\n- Nome: NioChat\n- Database Password: senha_segura\n- Region: escolher mais pr\u00f3xima\n</code></pre>"},{"location":"supabase/integration/#2-obter-credenciais","title":"2. Obter Credenciais","text":"<pre><code># Adicionar ao .env\nSUPABASE_URL=https://seu-projeto.supabase.co\nSUPABASE_ANON_KEY=sua_chave_anon_aqui\nSUPABASE_SERVICE_ROLE_KEY=sua_chave_service_role_aqui\n</code></pre>"},{"location":"supabase/integration/#3-configurar-django","title":"3. Configurar Django","text":"<pre><code># settings.py\nSUPABASE_URL = os.getenv('SUPABASE_URL')\nSUPABASE_ANON_KEY = os.getenv('SUPABASE_ANON_KEY')\nSUPABASE_SERVICE_ROLE_KEY = os.getenv('SUPABASE_SERVICE_ROLE_KEY')\n</code></pre>"},{"location":"supabase/integration/#estrutura-do-banco","title":"Estrutura do Banco","text":""},{"location":"supabase/integration/#1-tabelas-principais","title":"1. Tabelas Principais","text":""},{"location":"supabase/integration/#conversas","title":"Conversas","text":"<pre><code>CREATE TABLE conversations (\n    id BIGINT PRIMARY KEY,\n    provedor_id BIGINT NOT NULL,\n    contact_id BIGINT NOT NULL,\n    inbox_id BIGINT,\n    status TEXT DEFAULT 'open',\n    assignee_id BIGINT,\n    created_at TIMESTAMPTZ DEFAULT NOW(),\n    updated_at TIMESTAMPTZ DEFAULT NOW(),\n    ended_at TIMESTAMPTZ,\n    additional_attributes JSONB\n);\n</code></pre>"},{"location":"supabase/integration/#contatos","title":"Contatos","text":"<pre><code>CREATE TABLE contacts (\n    id BIGINT PRIMARY KEY,\n    provedor_id BIGINT NOT NULL,\n    name TEXT NOT NULL,\n    phone TEXT,\n    email TEXT,\n    avatar TEXT,\n    created_at TIMESTAMPTZ DEFAULT NOW(),\n    updated_at TIMESTAMPTZ DEFAULT NOW(),\n    additional_attributes JSONB\n);\n</code></pre>"},{"location":"supabase/integration/#mensagens","title":"Mensagens","text":"<pre><code>CREATE TABLE messages (\n    id BIGINT PRIMARY KEY,\n    conversation_id BIGINT NOT NULL,\n    contact_id BIGINT NOT NULL,\n    provedor_id BIGINT NOT NULL,\n    content TEXT,\n    message_type TEXT DEFAULT 'text',\n    is_from_customer BOOLEAN DEFAULT true,\n    file_url TEXT,\n    file_name TEXT,\n    file_size BIGINT,\n    external_id TEXT,\n    additional_attributes JSONB,\n    created_at TIMESTAMPTZ DEFAULT NOW()\n);\n</code></pre>"},{"location":"supabase/integration/#csat-feedback","title":"CSAT Feedback","text":"<pre><code>CREATE TABLE csat_feedback (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    provedor_id BIGINT NOT NULL,\n    conversation_id BIGINT NOT NULL,\n    contact_id BIGINT NOT NULL,\n    emoji_rating TEXT,\n    rating_value INTEGER NOT NULL,\n    original_message TEXT,\n    contact_avatar TEXT,\n    feedback_sent_at TIMESTAMPTZ DEFAULT NOW()\n);\n</code></pre>"},{"location":"supabase/integration/#logs-de-auditoria","title":"Logs de Auditoria","text":"<pre><code>CREATE TABLE audit_logs (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    provedor_id BIGINT NOT NULL,\n    user_id BIGINT,\n    action TEXT NOT NULL,\n    details JSONB,\n    timestamp TIMESTAMPTZ DEFAULT NOW()\n);\n</code></pre>"},{"location":"supabase/integration/#2-indices-para-performance","title":"2. \u00cdndices para Performance","text":"<pre><code>-- Conversas\nCREATE INDEX idx_conversations_provedor_id ON conversations(provedor_id);\nCREATE INDEX idx_conversations_status ON conversations(status);\nCREATE INDEX idx_conversations_assignee_id ON conversations(assignee_id);\nCREATE INDEX idx_conversations_created_at ON conversations(created_at);\n\n-- Contatos\nCREATE INDEX idx_contacts_provedor_id ON contacts(provedor_id);\nCREATE INDEX idx_contacts_phone ON contacts(phone);\n\n-- Mensagens\nCREATE INDEX idx_messages_conversation_id ON messages(conversation_id);\nCREATE INDEX idx_messages_provedor_id ON messages(provedor_id);\nCREATE INDEX idx_messages_created_at ON messages(created_at);\n\n-- CSAT\nCREATE INDEX idx_csat_provedor_id ON csat_feedback(provedor_id);\nCREATE INDEX idx_csat_rating_value ON csat_feedback(rating_value);\nCREATE INDEX idx_csat_feedback_sent_at ON csat_feedback(feedback_sent_at);\n\n-- Auditoria\nCREATE INDEX idx_audit_provedor_id ON audit_logs(provedor_id);\nCREATE INDEX idx_audit_user_id ON audit_logs(user_id);\nCREATE INDEX idx_audit_action ON audit_logs(action);\nCREATE INDEX idx_audit_timestamp ON audit_logs(timestamp);\n</code></pre>"},{"location":"supabase/integration/#row-level-security-rls","title":"Row Level Security (RLS)","text":""},{"location":"supabase/integration/#1-habilitar-rls","title":"1. Habilitar RLS","text":"<pre><code>-- Habilitar RLS em todas as tabelas\nALTER TABLE conversations ENABLE ROW LEVEL SECURITY;\nALTER TABLE contacts ENABLE ROW LEVEL SECURITY;\nALTER TABLE messages ENABLE ROW LEVEL SECURITY;\nALTER TABLE csat_feedback ENABLE ROW LEVEL SECURITY;\nALTER TABLE audit_logs ENABLE ROW LEVEL SECURITY;\n</code></pre>"},{"location":"supabase/integration/#2-politicas-de-isolamento","title":"2. Pol\u00edticas de Isolamento","text":"<pre><code>-- Pol\u00edtica para conversas\nCREATE POLICY \"Isolate by provedor_id\" ON conversations\n    FOR ALL USING (provedor_id = current_setting('request.jwt.claims', true)::json-&gt;&gt;'provedor_id'::bigint);\n\n-- Pol\u00edtica para contatos\nCREATE POLICY \"Isolate by provedor_id\" ON contacts\n    FOR ALL USING (provedor_id = current_setting('request.jwt.claims', true)::json-&gt;&gt;'provedor_id'::bigint);\n\n-- Pol\u00edtica para mensagens\nCREATE POLICY \"Isolate by provedor_id\" ON messages\n    FOR ALL USING (provedor_id = current_setting('request.jwt.claims', true)::json-&gt;&gt;'provedor_id'::bigint);\n\n-- Pol\u00edtica para CSAT\nCREATE POLICY \"Isolate by provedor_id\" ON csat_feedback\n    FOR ALL USING (provedor_id = current_setting('request.jwt.claims', true)::json-&gt;&gt;'provedor_id'::bigint);\n\n-- Pol\u00edtica para auditoria\nCREATE POLICY \"Isolate by provedor_id\" ON audit_logs\n    FOR ALL USING (provedor_id = current_setting('request.jwt.claims', true)::json-&gt;&gt;'provedor_id'::bigint);\n</code></pre>"},{"location":"supabase/integration/#servico-supabase","title":"Servi\u00e7o Supabase","text":""},{"location":"supabase/integration/#1-classe-principal","title":"1. Classe Principal","text":"<pre><code># core/supabase_service.py\nimport requests\nfrom django.conf import settings\nfrom typing import Dict, Any, Optional\n\nclass SupabaseService:\n    def __init__(self):\n        self.url = settings.SUPABASE_URL\n        self.headers = {\n            'apikey': settings.SUPABASE_ANON_KEY,\n            'Authorization': f'Bearer {settings.SUPABASE_ANON_KEY}',\n            'Content-Type': 'application/json'\n        }\n\n    def _post(self, table: str, data: Dict[str, Any], provedor_id: int) -&gt; bool:\n        \"\"\"Enviar dados para Supabase\"\"\"\n        try:\n            # Adicionar provedor_id para RLS\n            data['provedor_id'] = provedor_id\n\n            response = requests.post(\n                f\"{self.url}/rest/v1/{table}\",\n                json=data,\n                headers=self.headers\n            )\n\n            return response.status_code in [200, 201]\n        except Exception as e:\n            print(f\"Erro ao enviar para Supabase: {e}\")\n            return False\n\n    def save_conversation(self, *, provedor_id: int, conversation_id: int, \n                         contact_id: int, inbox_id: Optional[int] = None,\n                         status: str = 'open', assignee_id: Optional[int] = None,\n                         additional_attributes: Optional[Dict] = None) -&gt; bool:\n        \"\"\"Salvar conversa no Supabase\"\"\"\n        payload = {\n            \"id\": conversation_id,\n            \"contact_id\": contact_id,\n            \"inbox_id\": inbox_id,\n            \"status\": status,\n            \"assignee_id\": assignee_id,\n            \"additional_attributes\": additional_attributes or {}\n        }\n        return self._post(\"conversations\", payload, provedor_id)\n\n    def save_contact(self, *, provedor_id: int, contact_id: int, name: str,\n                    phone: Optional[str] = None, email: Optional[str] = None,\n                    avatar: Optional[str] = None, \n                    additional_attributes: Optional[Dict] = None) -&gt; bool:\n        \"\"\"Salvar contato no Supabase\"\"\"\n        payload = {\n            \"id\": contact_id,\n            \"name\": name,\n            \"phone\": phone,\n            \"email\": email,\n            \"avatar\": avatar,\n            \"additional_attributes\": additional_attributes or {}\n        }\n        return self._post(\"contacts\", payload, provedor_id)\n\n    def save_message(self, *, provedor_id: int, message_id: int, \n                    conversation_id: int, contact_id: int, content: str,\n                    message_type: str = 'text', is_from_customer: bool = True,\n                    file_url: Optional[str] = None, file_name: Optional[str] = None,\n                    file_size: Optional[int] = None, external_id: Optional[str] = None,\n                    additional_attributes: Optional[Dict] = None) -&gt; bool:\n        \"\"\"Salvar mensagem no Supabase\"\"\"\n        payload = {\n            \"id\": message_id,\n            \"conversation_id\": conversation_id,\n            \"contact_id\": contact_id,\n            \"content\": content,\n            \"message_type\": message_type,\n            \"is_from_customer\": is_from_customer,\n            \"file_url\": file_url,\n            \"file_name\": file_name,\n            \"file_size\": file_size,\n            \"external_id\": external_id,\n            \"additional_attributes\": additional_attributes or {}\n        }\n        return self._post(\"messages\", payload, provedor_id)\n\n    def save_csat(self, *, provedor_id: int, conversation_id: int, \n                 contact_id: int, emoji_rating: str, rating_value: int,\n                 original_message: Optional[str] = None,\n                 contact_avatar: Optional[str] = None,\n                 feedback_sent_at_iso: Optional[str] = None) -&gt; bool:\n        \"\"\"Salvar feedback CSAT no Supabase\"\"\"\n        payload = {\n            \"conversation_id\": conversation_id,\n            \"contact_id\": contact_id,\n            \"emoji_rating\": emoji_rating,\n            \"rating_value\": rating_value,\n            \"original_message\": original_message,\n            \"contact_avatar\": contact_avatar,\n            \"feedback_sent_at\": feedback_sent_at_iso\n        }\n        return self._post(\"csat_feedback\", payload, provedor_id)\n\n    def save_audit_log(self, *, provedor_id: int, user_id: Optional[int],\n                      action: str, details: Optional[Dict] = None) -&gt; bool:\n        \"\"\"Salvar log de auditoria no Supabase\"\"\"\n        payload = {\n            \"user_id\": user_id,\n            \"action\": action,\n            \"details\": details or {}\n        }\n        return self._post(\"audit_logs\", payload, provedor_id)\n</code></pre>"},{"location":"supabase/integration/#2-uso-no-django","title":"2. Uso no Django","text":"<pre><code># Em views.py\nfrom core.supabase_service import SupabaseService\n\ndef create_conversation(request):\n    # Criar conversa no Django\n    conversation = Conversation.objects.create(...)\n\n    # Salvar no Supabase\n    supabase_service = SupabaseService()\n    supabase_service.save_conversation(\n        provedor_id=conversation.provedor.id,\n        conversation_id=conversation.id,\n        contact_id=conversation.contact.id,\n        status=conversation.status\n    )\n\n    return JsonResponse({'success': True})\n</code></pre>"},{"location":"supabase/integration/#real-time-updates","title":"Real-time Updates","text":""},{"location":"supabase/integration/#1-configurar-real-time","title":"1. Configurar Real-time","text":"<pre><code>-- Habilitar real-time para tabelas\nALTER PUBLICATION supabase_realtime ADD TABLE conversations;\nALTER PUBLICATION supabase_realtime ADD TABLE messages;\nALTER PUBLICATION supabase_realtime ADD TABLE csat_feedback;\nALTER PUBLICATION supabase_realtime ADD TABLE audit_logs;\n</code></pre>"},{"location":"supabase/integration/#2-frontend-websocket","title":"2. Frontend WebSocket","text":"<pre><code>// frontend/src/hooks/useSupabase.js\nimport { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL\nconst supabaseKey = process.env.REACT_APP_SUPABASE_ANON_KEY\nconst supabase = createClient(supabaseUrl, supabaseKey)\n\nexport const useSupabaseRealtime = (table, callback) =&gt; {\n  useEffect(() =&gt; {\n    const subscription = supabase\n      .channel(`${table}_changes`)\n      .on('postgres_changes', \n        { event: '*', schema: 'public', table },\n        callback\n      )\n      .subscribe()\n\n    return () =&gt; {\n      subscription.unsubscribe()\n    }\n  }, [table, callback])\n}\n\n// Uso\nconst handleConversationUpdate = (payload) =&gt; {\n  console.log('Conversa atualizada:', payload)\n  // Atualizar estado do React\n}\n\nuseSupabaseRealtime('conversations', handleConversationUpdate)\n</code></pre>"},{"location":"supabase/integration/#3-dashboard-em-tempo-real","title":"3. Dashboard em Tempo Real","text":"<pre><code>// frontend/src/components/Dashboard.jsx\nimport { useSupabaseRealtime } from '../hooks/useSupabase'\n\nconst Dashboard = () =&gt; {\n  const [metrics, setMetrics] = useState({})\n\n  // Atualizar m\u00e9tricas em tempo real\n  useSupabaseRealtime('conversations', (payload) =&gt; {\n    if (payload.eventType === 'INSERT') {\n      setMetrics(prev =&gt; ({\n        ...prev,\n        total_conversations: prev.total_conversations + 1\n      }))\n    }\n  })\n\n  useSupabaseRealtime('csat_feedback', (payload) =&gt; {\n    if (payload.eventType === 'INSERT') {\n      setMetrics(prev =&gt; ({\n        ...prev,\n        total_feedbacks: prev.total_feedbacks + 1\n      }))\n    }\n  })\n\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;Dashboard&lt;/h1&gt;\n      &lt;p&gt;Total de Conversas: {metrics.total_conversations}&lt;/p&gt;\n      &lt;p&gt;Total de Feedbacks: {metrics.total_feedbacks}&lt;/p&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre>"},{"location":"supabase/integration/#sistema-csat","title":"Sistema CSAT","text":""},{"location":"supabase/integration/#1-coleta-automatica","title":"1. Coleta Autom\u00e1tica","text":"<pre><code># conversations/csat_automation.py\nfrom core.supabase_service import SupabaseService\n\nclass CSATAutomationService:\n    @classmethod\n    def process_csat_response(cls, message_text: str, conversation, contact):\n        # Processar feedback com IA\n        ai_analysis = openai_service.analyze_csat_sentiment(message_text)\n\n        # Salvar no Supabase\n        supabase_service = SupabaseService()\n        supabase_service.save_csat(\n            provedor_id=conversation.provedor.id,\n            conversation_id=conversation.id,\n            contact_id=contact.id,\n            emoji_rating=ai_analysis['emoji'],\n            rating_value=ai_analysis['rating'],\n            original_message=message_text,\n            contact_avatar=contact.avatar\n        )\n\n        return True\n</code></pre>"},{"location":"supabase/integration/#2-dashboard-csat","title":"2. Dashboard CSAT","text":"<pre><code>// frontend/src/components/CSATDashboard.jsx\nimport { useSupabaseRealtime } from '../hooks/useSupabase'\n\nconst CSATDashboard = () =&gt; {\n  const [csatData, setCsatData] = useState([])\n\n  // Atualizar em tempo real\n  useSupabaseRealtime('csat_feedback', (payload) =&gt; {\n    if (payload.eventType === 'INSERT') {\n      setCsatData(prev =&gt; [payload.new, ...prev])\n    }\n  })\n\n  return (\n    &lt;div&gt;\n      &lt;h2&gt;Feedbacks CSAT&lt;/h2&gt;\n      {csatData.map(feedback =&gt; (\n        &lt;div key={feedback.id}&gt;\n          &lt;p&gt;Rating: {feedback.emoji_rating} ({feedback.rating_value})&lt;/p&gt;\n          &lt;p&gt;Mensagem: {feedback.original_message}&lt;/p&gt;\n        &lt;/div&gt;\n      ))}\n    &lt;/div&gt;\n  )\n}\n</code></pre>"},{"location":"supabase/integration/#auditoria","title":"Auditoria","text":""},{"location":"supabase/integration/#1-log-automatico","title":"1. Log Autom\u00e1tico","text":"<pre><code># core/middleware.py\nclass AuditMiddleware:\n    def __init__(self, get_response):\n        self.get_response = get_response\n\n    def __call__(self, request):\n        response = self.get_response(request)\n\n        # Log de auditoria\n        if request.user.is_authenticated:\n            supabase_service = SupabaseService()\n            supabase_service.save_audit_log(\n                provedor_id=request.user.provedor.id,\n                user_id=request.user.id,\n                action=f\"{request.method} {request.path}\",\n                details={\n                    'ip': request.META.get('REMOTE_ADDR'),\n                    'user_agent': request.META.get('HTTP_USER_AGENT'),\n                    'status_code': response.status_code\n                }\n            )\n\n        return response\n</code></pre>"},{"location":"supabase/integration/#2-visualizacao-de-logs","title":"2. Visualiza\u00e7\u00e3o de Logs","text":"<pre><code>// frontend/src/components/AuditLogs.jsx\nconst AuditLogs = () =&gt; {\n  const [logs, setLogs] = useState([])\n\n  // Atualizar em tempo real\n  useSupabaseRealtime('audit_logs', (payload) =&gt; {\n    if (payload.eventType === 'INSERT') {\n      setLogs(prev =&gt; [payload.new, ...prev])\n    }\n  })\n\n  return (\n    &lt;div&gt;\n      &lt;h2&gt;Logs de Auditoria&lt;/h2&gt;\n      {logs.map(log =&gt; (\n        &lt;div key={log.id}&gt;\n          &lt;p&gt;A\u00e7\u00e3o: {log.action}&lt;/p&gt;\n          &lt;p&gt;Usu\u00e1rio: {log.user_id}&lt;/p&gt;\n          &lt;p&gt;Data: {log.timestamp}&lt;/p&gt;\n        &lt;/div&gt;\n      ))}\n    &lt;/div&gt;\n  )\n}\n</code></pre>"},{"location":"supabase/integration/#monitoramento","title":"Monitoramento","text":""},{"location":"supabase/integration/#1-metricas-em-tempo-real","title":"1. M\u00e9tricas em Tempo Real","text":"<pre><code>-- View para m\u00e9tricas\nCREATE VIEW dashboard_metrics AS\nSELECT \n    provedor_id,\n    COUNT(*) as total_conversations,\n    COUNT(CASE WHEN status = 'open' THEN 1 END) as open_conversations,\n    COUNT(CASE WHEN status = 'closed' THEN 1 END) as closed_conversations,\n    AVG(CASE WHEN status = 'closed' THEN \n        EXTRACT(EPOCH FROM (ended_at - created_at))/3600 \n    END) as avg_resolution_time_hours\nFROM conversations\nWHERE created_at &gt;= NOW() - INTERVAL '24 hours'\nGROUP BY provedor_id;\n</code></pre>"},{"location":"supabase/integration/#2-alertas-automaticos","title":"2. Alertas Autom\u00e1ticos","text":"<pre><code>-- Fun\u00e7\u00e3o para alertas\nCREATE OR REPLACE FUNCTION check_conversation_alerts()\nRETURNS TRIGGER AS $$\nBEGIN\n    -- Alertar se conversa aberta h\u00e1 mais de 1 hora\n    IF NEW.status = 'open' AND \n       EXTRACT(EPOCH FROM (NOW() - NEW.created_at))/3600 &gt; 1 THEN\n        -- Enviar notifica\u00e7\u00e3o\n        PERFORM pg_notify('conversation_alert', \n            json_build_object(\n                'conversation_id', NEW.id,\n                'provedor_id', NEW.provedor_id,\n                'alert_type', 'long_open_conversation'\n            )::text\n        );\n    END IF;\n\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Trigger para alertas\nCREATE TRIGGER conversation_alert_trigger\n    AFTER UPDATE ON conversations\n    FOR EACH ROW\n    EXECUTE FUNCTION check_conversation_alerts();\n</code></pre>"},{"location":"supabase/integration/#troubleshooting","title":"Troubleshooting","text":""},{"location":"supabase/integration/#1-problemas-comuns","title":"1. Problemas Comuns","text":"<pre><code># Verificar conex\u00e3o\ncurl -I https://seu-projeto.supabase.co\n\n# Verificar chave\ncurl -H \"apikey: sua_chave\" https://seu-projeto.supabase.co/rest/v1/\n</code></pre>"},{"location":"supabase/integration/#2-logs-de-debug","title":"2. Logs de Debug","text":"<pre><code># Testar conex\u00e3o\nfrom core.supabase_service import SupabaseService\nsupabase = SupabaseService()\nprint(supabase.test_connection())\n</code></pre>"},{"location":"supabase/integration/#3-verificar-rls","title":"3. Verificar RLS","text":"<pre><code>-- Verificar pol\u00edticas\nSELECT * FROM pg_policies WHERE tablename = 'conversations';\n\n-- Testar acesso\nSELECT * FROM conversations WHERE provedor_id = 1;\n</code></pre>"},{"location":"supabase/integration/#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<ol> <li>Dashboard - Configure o dashboard</li> <li>CSAT - Configure o sistema CSAT</li> <li>Auditoria - Configure a auditoria</li> </ol>"},{"location":"usage/interface/","title":"Interface do Usu\u00e1rio","text":"<p>Este guia explica como usar a interface do NioChat para gerenciar conversas, visualizar m\u00e9tricas e administrar o sistema.</p>"},{"location":"usage/interface/#acesso-ao-sistema","title":"Acesso ao Sistema","text":""},{"location":"usage/interface/#1-login","title":"1. Login","text":"<ol> <li>Acesse a URL do sistema: <code>http://localhost:5173</code></li> <li>Digite seu usu\u00e1rio e senha</li> <li>Clique em \"Entrar\"</li> </ol>"},{"location":"usage/interface/#2-primeiro-acesso","title":"2. Primeiro Acesso","text":"<ul> <li>Usu\u00e1rio: admin</li> <li>Senha: A senha definida durante a instala\u00e7\u00e3o</li> <li>Alterar Senha: Recomendado no primeiro acesso</li> </ul>"},{"location":"usage/interface/#dashboard-principal","title":"Dashboard Principal","text":""},{"location":"usage/interface/#1-visao-geral","title":"1. Vis\u00e3o Geral","text":"<p>O dashboard principal exibe: - Total de Conversas: N\u00famero total de conversas - Conversas Abertas: Conversas em andamento - Taxa de Resolu\u00e7\u00e3o: Percentual de conversas resolvidas - Satisfa\u00e7\u00e3o M\u00e9dia: M\u00e9dia das avalia\u00e7\u00f5es CSAT - Tempo de Resposta: Tempo m\u00e9dio de resposta</p>"},{"location":"usage/interface/#2-graficos-interativos","title":"2. Gr\u00e1ficos Interativos","text":"<ul> <li>Evolu\u00e7\u00e3o Temporal: Gr\u00e1fico de linha mostrando conversas ao longo do tempo</li> <li>Distribui\u00e7\u00e3o por Status: Gr\u00e1fico de pizza com status das conversas</li> <li>Performance por Agente: Gr\u00e1fico de barras com m\u00e9tricas individuais</li> <li>Tend\u00eancias CSAT: Evolu\u00e7\u00e3o da satisfa\u00e7\u00e3o do cliente</li> </ul>"},{"location":"usage/interface/#3-filtros","title":"3. Filtros","text":"<ul> <li>Por Data: Selecione per\u00edodo espec\u00edfico</li> <li>Por Agente: Filtre por agente respons\u00e1vel</li> <li>Por Equipe: Filtre por equipe</li> <li>Por Status: Apenas conversas abertas, fechadas, etc.</li> </ul>"},{"location":"usage/interface/#gerenciamento-de-conversas","title":"Gerenciamento de Conversas","text":""},{"location":"usage/interface/#1-lista-de-conversas","title":"1. Lista de Conversas","text":"<p>A lista de conversas mostra: - Cliente: Nome e foto do contato - \u00daltima Mensagem: Preview da \u00faltima mensagem - Status: Aberta, fechada, pendente - Agente: Quem est\u00e1 atendendo - Tempo: H\u00e1 quanto tempo a conversa est\u00e1 ativa - Prioridade: Indicador visual de urg\u00eancia</p>"},{"location":"usage/interface/#2-acoes-disponiveis","title":"2. A\u00e7\u00f5es Dispon\u00edveis","text":"<ul> <li>Abrir Conversa: Clique para abrir o chat</li> <li>Atribuir: Transferir para outro agente</li> <li>Fechar: Encerrar conversa</li> <li>Marcar como Pendente: Pausar atendimento</li> <li>Transferir para Equipe: Enviar para equipe espec\u00edfica</li> </ul>"},{"location":"usage/interface/#3-busca-e-filtros","title":"3. Busca e Filtros","text":"<ul> <li>Busca por Texto: Digite para buscar em mensagens</li> <li>Filtro por Status: Dropdown com op\u00e7\u00f5es</li> <li>Filtro por Agente: Selecione agente espec\u00edfico</li> <li>Ordena\u00e7\u00e3o: Por data, prioridade, status</li> </ul>"},{"location":"usage/interface/#chat-interface","title":"Chat Interface","text":""},{"location":"usage/interface/#1-area-de-mensagens","title":"1. \u00c1rea de Mensagens","text":"<ul> <li>Hist\u00f3rico: Todas as mensagens da conversa</li> <li>Tipos de M\u00eddia: Imagens, v\u00eddeos, \u00e1udios, documentos</li> <li>Rea\u00e7\u00f5es: Emojis e rea\u00e7\u00f5es personalizadas</li> <li>Status de Entrega: Confirma\u00e7\u00e3o de recebimento</li> <li>Timestamp: Hora de cada mensagem</li> </ul>"},{"location":"usage/interface/#2-envio-de-mensagens","title":"2. Envio de Mensagens","text":"<ul> <li>Texto: Digite e pressione Enter</li> <li>M\u00eddia: Clique no \u00edcone de anexo</li> <li>Respostas R\u00e1pidas: Templates pr\u00e9-definidos</li> <li>Emojis: Seletor de emojis</li> <li>Formata\u00e7\u00e3o: Negrito, it\u00e1lico, c\u00f3digo</li> </ul>"},{"location":"usage/interface/#3-funcionalidades-avancadas","title":"3. Funcionalidades Avan\u00e7adas","text":"<ul> <li>IA Assistente: Sugest\u00f5es autom\u00e1ticas</li> <li>Consulta SGP: Bot\u00e3o para consultar dados do cliente</li> <li>Hist\u00f3rico: Ver conversas anteriores do cliente</li> <li>Notas: Adicionar notas internas</li> <li>Tags: Marcar conversa com tags</li> </ul>"},{"location":"usage/interface/#sistema-csat","title":"Sistema CSAT","text":""},{"location":"usage/interface/#1-configuracao","title":"1. Configura\u00e7\u00e3o","text":"<ul> <li>Tempo de Envio: 1.5 minutos ap\u00f3s fechamento</li> <li>Mensagem Personalizada: Texto customizado por provedor</li> <li>Canais: WhatsApp, SMS, Email</li> <li>Agendamento: Hor\u00e1rios espec\u00edficos</li> </ul>"},{"location":"usage/interface/#2-dashboard-csat","title":"2. Dashboard CSAT","text":"<ul> <li>M\u00e9tricas Visuais: Gr\u00e1ficos de satisfa\u00e7\u00e3o</li> <li>Distribui\u00e7\u00e3o de Ratings: 1 a 5 estrelas</li> <li>Evolu\u00e7\u00e3o Temporal: Tend\u00eancias ao longo do tempo</li> <li>Compara\u00e7\u00e3o: Per\u00edodos diferentes</li> </ul>"},{"location":"usage/interface/#3-ultimos-feedbacks","title":"3. \u00daltimos Feedbacks","text":"<ul> <li>Avatar do Cliente: Foto de perfil</li> <li>Rating Visual: Emoji correspondente</li> <li>Mensagem Original: Feedback textual do cliente</li> <li>Data/Hora: Quando foi enviado</li> <li>An\u00e1lise IA: Interpreta\u00e7\u00e3o autom\u00e1tica</li> </ul>"},{"location":"usage/interface/#administracao","title":"Administra\u00e7\u00e3o","text":""},{"location":"usage/interface/#1-usuarios","title":"1. Usu\u00e1rios","text":"<ul> <li>Listar Usu\u00e1rios: Todos os usu\u00e1rios do sistema</li> <li>Criar Usu\u00e1rio: Adicionar novo usu\u00e1rio</li> <li>Editar Perfil: Modificar dados do usu\u00e1rio</li> <li>Permiss\u00f5es: Definir n\u00edveis de acesso</li> <li>Equipes: Organizar usu\u00e1rios em equipes</li> </ul>"},{"location":"usage/interface/#2-provedores","title":"2. Provedores","text":"<ul> <li>Configura\u00e7\u00f5es: Dados do provedor</li> <li>Integra\u00e7\u00f5es: WhatsApp, SGP, Supabase</li> <li>Limites: Controles de uso</li> <li>Billing: Informa\u00e7\u00f5es de cobran\u00e7a</li> </ul>"},{"location":"usage/interface/#3-configuracoes","title":"3. Configura\u00e7\u00f5es","text":"<ul> <li>Sistema: Configura\u00e7\u00f5es gerais</li> <li>IA: Par\u00e2metros da intelig\u00eancia artificial</li> <li>Notifica\u00e7\u00f5es: Alertas e lembretes</li> <li>Backup: Configura\u00e7\u00f5es de backup</li> <li>Logs: Visualiza\u00e7\u00e3o de logs</li> </ul>"},{"location":"usage/interface/#chat-interno","title":"Chat Interno","text":""},{"location":"usage/interface/#1-salas-de-chat","title":"1. Salas de Chat","text":"<ul> <li>Criar Sala: Nova sala para equipe</li> <li>Participantes: Adicionar/remover membros</li> <li>Hist\u00f3rico: Mensagens salvas</li> <li>Notifica\u00e7\u00f5es: Alertas de mensagens</li> </ul>"},{"location":"usage/interface/#2-chat-privado","title":"2. Chat Privado","text":"<ul> <li>Mensagens Diretas: Entre usu\u00e1rios</li> <li>Status Online: Quem est\u00e1 conectado</li> <li>Notifica\u00e7\u00f5es: Alertas de mensagens</li> <li>Hist\u00f3rico: Mensagens salvas</li> </ul>"},{"location":"usage/interface/#auditoria","title":"Auditoria","text":""},{"location":"usage/interface/#1-logs-de-auditoria","title":"1. Logs de Auditoria","text":"<ul> <li>A\u00e7\u00f5es: Todas as a\u00e7\u00f5es do sistema</li> <li>Usu\u00e1rios: Quem fez o qu\u00ea</li> <li>Timestamps: Quando aconteceu</li> <li>Detalhes: Informa\u00e7\u00f5es completas</li> </ul>"},{"location":"usage/interface/#2-filtros-de-auditoria","title":"2. Filtros de Auditoria","text":"<ul> <li>Por A\u00e7\u00e3o: Tipo de a\u00e7\u00e3o</li> <li>Por Usu\u00e1rio: A\u00e7\u00f5es de usu\u00e1rio espec\u00edfico</li> <li>Por Data: Per\u00edodo espec\u00edfico</li> <li>Por Provedor: Isolamento de dados</li> </ul>"},{"location":"usage/interface/#3-exportacao","title":"3. Exporta\u00e7\u00e3o","text":"<ul> <li>PDF: Relat\u00f3rios em PDF</li> <li>Excel: Dados em planilha</li> <li>CSV: Dados estruturados</li> <li>JSON: Dados brutos</li> </ul>"},{"location":"usage/interface/#atalhos-de-teclado","title":"Atalhos de Teclado","text":""},{"location":"usage/interface/#1-navegacao","title":"1. Navega\u00e7\u00e3o","text":"<ul> <li>Ctrl + K: Busca global</li> <li>Ctrl + N: Nova conversa</li> <li>Ctrl + F: Busca na conversa</li> <li>Esc: Fechar modais</li> </ul>"},{"location":"usage/interface/#2-chat","title":"2. Chat","text":"<ul> <li>Enter: Enviar mensagem</li> <li>Shift + Enter: Nova linha</li> <li>Ctrl + A: Selecionar tudo</li> <li>Ctrl + Z: Desfazer</li> </ul>"},{"location":"usage/interface/#3-sistema","title":"3. Sistema","text":"<ul> <li>Ctrl + S: Salvar</li> <li>Ctrl + R: Atualizar</li> <li>F5: Recarregar p\u00e1gina</li> <li>Ctrl + Shift + R: Recarregar for\u00e7ado</li> </ul>"},{"location":"usage/interface/#notificacoes","title":"Notifica\u00e7\u00f5es","text":""},{"location":"usage/interface/#1-tipos-de-notificacao","title":"1. Tipos de Notifica\u00e7\u00e3o","text":"<ul> <li>Nova Mensagem: Cliente enviou mensagem</li> <li>Conversa Atribu\u00edda: Nova conversa para voc\u00ea</li> <li>CSAT Recebido: Feedback de satisfa\u00e7\u00e3o</li> <li>Sistema: Alertas do sistema</li> </ul>"},{"location":"usage/interface/#2-configuracoes","title":"2. Configura\u00e7\u00f5es","text":"<ul> <li>Som: Ativar/desativar sons</li> <li>Desktop: Notifica\u00e7\u00f5es do sistema</li> <li>Email: Notifica\u00e7\u00f5es por email</li> <li>Push: Notifica\u00e7\u00f5es push</li> </ul>"},{"location":"usage/interface/#3-gerenciamento","title":"3. Gerenciamento","text":"<ul> <li>Marcar como Lida: Marcar notifica\u00e7\u00e3o</li> <li>Arquivar: Remover da lista</li> <li>Configurar: Personalizar alertas</li> <li>Hist\u00f3rico: Ver notifica\u00e7\u00f5es antigas</li> </ul>"},{"location":"usage/interface/#troubleshooting","title":"Troubleshooting","text":""},{"location":"usage/interface/#1-problemas-comuns","title":"1. Problemas Comuns","text":"<ul> <li>P\u00e1gina n\u00e3o carrega: Verificar conex\u00e3o</li> <li>Mensagens n\u00e3o aparecem: Recarregar p\u00e1gina</li> <li>Erro de permiss\u00e3o: Verificar usu\u00e1rio</li> <li>Lentid\u00e3o: Verificar conex\u00e3o</li> </ul>"},{"location":"usage/interface/#2-solucoes","title":"2. Solu\u00e7\u00f5es","text":"<ul> <li>Recarregar: F5 ou Ctrl + R</li> <li>Limpar Cache: Ctrl + Shift + R</li> <li>Logout/Login: Sair e entrar novamente</li> <li>Suporte: Contatar administrador</li> </ul>"},{"location":"usage/interface/#3-logs","title":"3. Logs","text":"<ul> <li>Console: F12 para ver erros</li> <li>Network: Verificar requisi\u00e7\u00f5es</li> <li>Application: Verificar storage</li> <li>Security: Verificar certificados</li> </ul>"},{"location":"usage/interface/#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<ol> <li>API - Explore a API</li> <li>Troubleshooting - Resolva problemas</li> <li>Configura\u00e7\u00e3o - Configure integra\u00e7\u00f5es</li> </ol>"}]}